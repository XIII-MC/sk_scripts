
options:
  #BASIC SETTINGS
  NoPerm: &8⎣ &c&lAnayo &8⎤&c You thougth you could ? Ahahah... So funny... #Message sent if the player doesn't have the permission to execute certain commands.
  ANAYO: &8⎣ &c&lAnayo &8⎤&c #Anticheat prefix
  v: DevBuild #!Do not touch this !#
  KEY: DevBuild #!Do not touch this !#
  MainCommandPermission: anayo.commands



#Anticheat configuration modes
#The "BanAfterKick" function is currently in dev and not here yet !
#If some features arn't working properly please report the issue to the developers on discord by making a ticket :)



#This will prevent Citizens/NPCs to get flagged by Anayo
  DisableForNPC: true

#Beta features , this isn't recommanded for your server. If you enable it you might get more alerts/detections but they might be more falsing.
  Beta: false

#LagBack does like it says , it lagbacks. It cancel suspicious hits/movements and can prevent the cheater from attacking for some seconds.
  LagBack: true 

#AutoTempBan is currently made to temp ban players using Anayo's built in temp ban, you can use essentials one.
  AutoTempBan: false

#This is the same as AutoTempBan but this is a permanant ban , i don't recommand using this.
  AutoBan: false
  BanMessage: &fhas killed &c%{_player}%&f for &cUnfair Advanatage #Message broadcasted when a player gets banned by Anayo

#This will automaticly kick the player from the server after sending 3 alerts (Not verbose!)#
  AutoKick: false
  KickVL: 5 #How many times the player need to flag the anticheat to get punished.
  KickMessage: &fhas killed &c%{_player}%&f for &cUnfair Advanatage #Message broadcasted when a player gets kicked by Anayo

#This feature is meant to automaticly ban the player if he gets kicked X times , this is currently not made yet !
  #BanAfterKick: false



#Anticheat checks configuration !
#I recommand you to take the time to configure everything and test it to fit your server needs !
#If some settins are messing contact the devs on discord by making a ticket , thanks :)



#AutoClicker (A | B | C | D) Settings:
  MaxLeftCPS: 15 #CPS Limit on left click
  MaxRightCPS: 15 #CPS Limit on right click
  MaxCPS: 15 #CPS Limit for AutoBlock

#Reach (A | B | C | D | E | F | G | H) Settings:
  MaxReach: 5.2 #Major Reach Limit. Its VERYYY high to prevent falses !
  ReachHits: 2 #How many hits allowed out to of the maximum reach before sending alerts (To prevent some falses!)#
  MaxReachA: 3 #Reach Distance For Reach (A)
  MaxReachB: 3.75 #Reach Distance For Reach (B)
  MaxReachC: 4.25 #Reach Distance For Reach (C)
  MaxReachD: 4.75 #Reach Distance For Reach (D)
  MaxReachE: 5.25 #Reach Distance For Reach (E)
  MaxReachH: 3.5 #Reach Distance For Reach (H)

#KillAura (A | B | C | D | E | F) Settings:
  AuraDistance: 1.5 #Distance required before triggering some KillAura checks (The distance is not 100% exact !)#
  MultiAura: 11 #How many entitys can the player hit per seconds. (Don't put it too low or jitterclicking/butterfly may false !)#
  MaxInvalidHits: 2 #How many invalid hits out of the player hitbox are allowed. (Don't put it too low or it may false !)#
  MaxAPS: 10 #How many damages can the player deal per seconds. (Don't put it too low or jitterclicking/butterfly may false !)#
  NoSwingCount: 1 #How many hits can be dealt without swinging (Need to be 2 or higher to prevent some falses !)#
  KeepSprintHits: 3 #How many hits can the player deal while sprinting.

 #Aim (A | B | C | D | E | F | G | H | I | J) Settings:
  AimTrigger: 0 #Range before triggering Aim checks
  MoveDistanceAim: 0.2 #Distance required for the player to move to trigger Aim checks
  NeededYaw: 0.3 #The Yaw of the player must have rotated under this value to trigger Aim checks
  MinAimAYaw: 5 #The Yaw of the player must have rotated under this value to trigger Aim (A) checks
  AimMinA: 12.00 #Sensivity of Aim (A)
  AimMinB: 0 #Sensivity of Aim (B)
  AimMinC: 0 #Minimum angle of Aim (C)
  AimMaxC: 0.05 #Maximum angle of Aim (C)
  AimMinE: 0 #Minimum angle of Aim (E) check
  AimMaxE: 0.15 #Maximum angle of Aim (E) check
  AimMinJ: 7.5 #Angle for Aim (J) check
  AimMinF: 0 #Minimum angel of Aim (F) check
  AimMaxF: 0.25 #MaxInvalidHits angle of Aim (F) check
  AimMinG: 1 #Minimum angle of Aim (G) check
  AimMaxG: 1.25 #MaxInvalidHits angle of Aim (G) check
  AimMinH: 1.5 #Minimum angle of Aim (H) check
  AimMinI: 0.1 #Minimum angle of Aim (I) check
  AimMinK: 0 #Minimum angle of Aim (K) check
  AimMaxK: 0.15 #Maximum angle of Aim (K) check
  AimMinN: 0 #Minimum angle of Aim (N) check
  AimMaxN: 0.55 #Maximum angle of Aim (N) check
  AimMaxL: 0.08 #Maximum angle of Aim (N) check
  AimMinL: 0 #Minimum angle of Aim (N) check
  AimMinD: 0 #Minimum angle of Aim (D) check
  AimMaxD: 0.05 #Maximum angle of aim (D) check
  AimMinO: 0 #Minimum angle of aim (O) check
  AimMaxO: 0.05 #Maximum angle of aim (O) check
  AimMinH: 0 #Maximum angle of aim (H) check
  AimMinM: 0.075 #Maximum angle of aim (M) check
  AimCMaxK: 4 #Counter before sending an alert for Aim (K)
  AimCMaxG: 4 #Counter before sending an alert for Aim (G)
  AimCMaxE: 4 #Counter before sending an alert for Aim (E)
  AimCMaxF: 6 #Counter before sending an alert for Aim (F)
  AimCMaxD: 2 #Counter before sending an alert for Aim (D)
  AimCMaxJ: 4 #Counter before sending an alert for Aim (J)
  AimCMaxB: 2 #Counter before sending an alert for Aim (B)
  AimCMaxC: 3 #Counter before sending an alert for Aim (C)
  AimCMaxL: 3 #Counter before sending an alert for Aim (L)
  AimCMaxM: 3 #Counter before sending an alert for Aim (M)
  AimCMaxN: 4 #Counter before sending an alert for Aim (N)
  AimCMaxO: 4 #Counter before sending an alert for Aim (O)
  AimCMaxI: 3 #Counter before sending an alert for Aim (I)
  AimSafeVerbose: true #Should we delete Aim counters after verbosing ?
  AimSafeNotify: true #Should we delete Aim counters after notification ?

#FastBow (A) Settings:
  BowDelay: 2 #FastBow Minimum delay (IN TICKS)

#FastInvClick (A) Settings:
  InvDelay: 1 #FastInvClick Minimum delay (IN TICKS)

#NoSlow (A) Settings:
  NoSlowDistance: 1.2 #Distance to move to trigger NoSlow (A)
  DamageProtection: true #Disable NoSlow (A) check for some seconds if the player gets damaged by a player

#-----------------------------------------------------------------                                
# Sharing or leaking the code/script will result in a prosecution           
#-----------------------------------------------------------------

function verbose(p: player, cheat: text, type: text, info: text):
  if {_p} is a citizen:
    stop
  if {ANAYO.%{_p}%.FREEZED} is true:
    stop
  add 1 to {ANAYO.%{_p}%.VERBOSE.VLGLOBAL}
  add 1 to {ANAYO.%{_p}%.VL::%{_cheat}%}
  loop all players:
    if {ANAYO.%loop-player%.VERBOSE} is true:
      send "{@ANAYO} &c%{_p}% &7failed &c%{_cheat}% &7(%{_type}%&7) |  &7%{_info}% &7(vl=&c%{ANAYO.%{_p}%.VL::%{_cheat}%}%&7)" to loop-player

function notify(p: player, cheat: text, info: text):
  if {_p} is a citizen:
    stop
  if {ANAYO.%{_p}%.FREEZED} is true:
    stop
  add 1 to {ANAYO.%{_p}%.NOTIFY.VLGLOBAL}
  if {ANAYO.%{_p}%.LASTVL::%{_cheat}%} is not set:
    delete {ANAYO.%{_p}%.VL::%{_cheat}%}
    add 1 to {ANAYO.%{_p}%.LASTVL::%{_cheat}%}
    loop all players:
      if {ANAYO.%loop-player%.NOTIFY} is true:
        send "{@ANAYO} &c%{_p}% &f%{_info}% &c%{_cheat}%&f" to loop-player
  else:
    delete {ANAYO.%{_p}%.VL::%{_cheat}%}
    loop all players:
      if {ANAYO.%loop-player%.NOTIFY} is true:
        send "{@ANAYO} &c%{_p}% &f%{_info}% &c%{_cheat}%&f ##&c%{ANAYO.%{_p}%.LASTVL::%{_cheat}%}%" to loop-player
    add 1 to {ANAYO.%{_p}%.LASTVL::%{_cheat}%}
  execute command "/anayo npc %{_p}%"
  if {ANAYO.%{_p}%.LASTVL::%{_cheat}%} >= {@KickVL}:
    if {@AutoKick} is true:
      make server execute command "/anayo kick %{_p}%"
      delete {ANAYO.%{_p}%.VL::%{_cheat}%}
      delete {ANAYO.%{_p}%.LASTVL::%{_cheat}%}
    if {@AutoTempBan} is true:
      make server execute command "/anayo ban %{_p}% 365 day"
    if {@AutoBan} is true:
      make server execute command "/anayo ban %{_p}% 7 day"

on join:
   delete {ANAYO.%player%.BOTTEST}
   set {ANAYO.%player%.VL::*} to 0
   delete {ANAYO.%player%.LASTVL::*}
   delete {ANAYO.%player%.YAW1}
   delete {ANAYO.%player%.YAW2}
   delete {ANAYO.%player%.PITCH1}
   delete {ANAYO.%player%.PITCH2}
   set {join.%player%} to true
   wait 1 second
   delete {join.%player%}

on any move:
   if {ANAYO.%player%.FREEZED} is true:
      cancel event
on damage:
   if {ANAYO.%victim%.FREEZED} is true:
      cancel event

command /anayo [<text>] [<text>] [<text>] [<timespan>]:
   permission: {@MainCommandPermission}
   trigger:
      if arg 1 is not set:
         send "           {@ANAYO}"
         send "&7/anayo &8| &fShow this pop up"
         send "&7/anayo version &8| &fShow anayo version"
         send "&7/anayo notify &8| &fToggle anayo notifications"
         send "&7/anayo verbose &8| &fToggle anayo verbose"
         send "&7/anayo kick &8| &fKick someone"
         send "&7/anayo ban &8| &fBan someone"
         send "&7/anayo unban &8| &fUnban someone"
         send "&7/anayo toggle &8| &fToggle a check"
         send "&7/anayo npc &8| &fSpawn a NPC behind the choosed player"
         send ""
         stop
      if arg 1 is "npc":
         if arg 2 is set:
            set {_p} to arg 2 parsed as player
            if {ANAYO.%{_p}%.BOTTEST} is not set:
               set {ANAYO.%{_p}%.BOTTEST} to true
               set {_npc} to "%random integer between 11111 and 9999999999%"
               set {_loc} to location of {_p}
               add 5 to y location of {_loc}
               create a citizen named {_npc} at {_loc}
               execute console command "/npc sel %{_id}%"
               wait 1 tick
               execute console command "/npc playerlist -r"
               set {_id} to last created citizen id
               loop all entities:
                  uncoloured name of loop-entity is {_npc}
                  hide loop-entity from all players
                  wait 2 ticks
                  reveal loop-entity to {_p}
                  set loop-entity's helmet slot to leather helmet of protection 3 and unbreaking 3
                  set loop-entity's chestplate slot to iron chestplate of protection 2 and unbreaking 1
                  set loop-entity's legging slot to golden leggings of protection 4 and unbreaking 3
                  set loop-entity's boot slot to diamond boots of protection 1 and unbreaking 2
                  set loop-entity's slot 0 to iron sword of sharpness 2 and unbreaking 1
                  loop 200 times:
                     wait 2 tick
                     set health of loop-entity to 10
                     chance of 33%:
                        teleport loop-entity 3.2 meters behind {_p}
                     chance of 33%:
                        teleport loop-entity 2.4 meters behind {_p}
                     chance of 33%:
                        teleport loop-entity 4.2 meters above {_p}
                     set health of loop-entity to 1
                  execute console command "/npc sel %{_id}%"
                  wait 1 tick
                  execute console command "/npc playerlist -r"
                  execute console command "/npc remove"
                  delete {ANAYO.%{_p}%.BOTTEST}
                  stop
      if arg 1 is "toggle":
         if arg 2 is set:
            if arg 3 is set:
               if {ANAYO.C.%arg 2%.%arg 3%} is true:
                  set {ANAYO.C.%arg 2%.%arg 3%} to false
                  send "{@ANAYO} Check &6%arg 2% &6%arg 3%&c has been &4disabled."
                  stop
               if {ANAYO.C.%arg 2%.%arg 3%} is false:
                  set {ANAYO.C.%arg 2%.%arg 3%} to true
                  send "{@ANAYO} Check &6%arg 2% &6%arg 3%&c has been &aenabled."
                  stop
      if arg 1 is "kick":
         if arg 2 is set:
            if {ANAYO.%arg 2%.FREEZED} is true:
               stop
            set {_player} to arg 2 parsed as player
            set {ANAYO.%{_player}%.FREEZED} to true
            send title "&4&l&kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" with subtitle "&7&oDon't hack on minecraft !" to {_player}
            loop 30 times:
               wait 1 ticks
               send "&4&l&kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" to {_player}
            wait 1 seconds
            kick {_player} due to "{@ANAYO} &cYou thought you could get away with it ?! &7&o&n(ID-A%random integer between 0 and 99999999999%&7)"
            broadcast ""
            broadcast "{@ANAYO} {@KickMessage}"
            broadcast ""
            delete {ANAYO.%{_player}%.FREEZED}
            add 1 to {ANAYO.%{_player}%.KICKSTOTAL}
      if arg 1 is "info":
         if arg 2 is set:
            if {ANAYO.%ARG 2%.KICKSTOTAL} is not set:
               set {ANAYO.%ARG 2%.KICKSTOTAL} to 0
            if {ANAYO.%ARG 2%.BANSTOTAL} is not set:
               set {ANAYO.%ARG 2%.BANSTOTAL} to 0
            if {ANAYO.%ARG 2%.UNBANSTOTAL} is not set:
               set {ANAYO.%ARG 2%.UNBANSTOTAL} to 0
            if {ANAYO.%ARG 2%.VLGLOBAL} is not set:
               set {ANAYO.%ARG 2%.VLGLOBAL} to 0
            if {ANAYO.%ARG 2%.VERBOSE.VLGLOBAL} is not set:
               set {ANAYO.%ARG 2%.VERBOSE.VLGLOBAL} to 0
            delete {ANAYO.%arg 2%.VLGLOBAL}
            set {ANAYO.%arg 2%.VLGLOBAL} to {ANAYO.%arg 2%.NOTIFY.VLGLOBAL} + {ANAYO.%arg 2%.VERBOSE.VLGLOBAL}
            send "         {@ANAYO}"
            send "&fInformations about %arg 2%"
            send ""
            send "&cKicked &7%{ANAYO.%arg 2%.KICKSTOTAL}% &ctimes."
            send "&cBanned &7%{ANAYO.%arg 2%.BANSTOTAL}% &ctimes."
            send "&cUnbanned &7%{ANAYO.%ARG 2%.UNBANSTOTAL}% &ctimes."
            send "&cGlobal VL &8&o(Verbose and Notify) &c: &7%{ANAYO.%arg 2%.VLGLOBAL}%"
            send "&cVerbose VL: &7%{ANAYO.%ARG 2%.VERBOSE.VLGLOBAL}%"
            send "&cNotify VL: &7%{ANAYO.%ARG 2%.NOTIFY.VLGLOBAL}%"
            #send "Flagged For: &7%{ANAYO.%arg 2%.FLAG::*}%"
            send ""
            stop
      if arg 1 is "version":
         send "{@ANAYO} Anayo's Version: &8{@v}"
         stop
      if arg 1 is "reload":
         ANAYOReload("console")
         send "{@ANAYO} The AntiCheat has been reloaded."
         stop
      if arg 1 is "notify":
         if {ANAYO.%player%.NOTIFY} is not set:
            set {ANAYO.%player%.NOTIFY} to false
         if {ANAYO.%player%.NOTIFY} is false:
            set {ANAYO.%player%.NOTIFY} to true
            send "{@ANAYO} Notifcations enabled"
            stop
         if {ANAYO.%player%.NOTIFY} is true:
            set {ANAYO.%player%.NOTIFY} to false
            send "{@ANAYO} Notifcations disabled"
            stop
      if arg 1 is "verbose":
         if {ANAYO.%player%.VERBOSE} is not set:
            set {ANAYO.%player%.VERBOSE} to false
         if {ANAYO.%player%.VERBOSE} is false:
            set {ANAYO.%player%.VERBOSE} to true
            send "{@ANAYO} Verbose enabled"
            stop
         if {ANAYO.%player%.VERBOSE} is true:
            set {ANAYO.%player%.VERBOSE} to false
            send "{@ANAYO} Verbose disabled"
            stop
      if arg 1 is "ban":
         if arg 2 is set:
            set {_player} to arg 2 parsed as player
            broadcast ""
            broadcast "{@ANAYO} {@BanMessage}"
            broadcast ""
            set {tempban.time::%{_player}%} to arg 3
            set {tempban.%{_player}%} to true
            set {tempban.timestamp::%{_player}%} to now
            kick {_player} due to "{@ANAYO} &cYou have been banned for &e%{tempban.time::%{_player}%}% &cfrom this server !"
            add 1 to {ANAYO.%{_player}%.BANSTOTAL}
            stop
      if arg 1 is "unban":
         if arg 2 is set:
            clear {tempban.time::%arg 2%}
            clear {tempban.timestamp::%arg 2%}
            clear {tempban.%arg 2%}
            add 1 to {ANAYO.%arg 2%.UNBANSTOTAL}
            send "{@ANAYO} %arg 2% has been unbanned."
            stop
      if arg 1 is "clearvl":
         loop all players:
            set {ANAYO.%loop-player%.VL::*} to 0
            delete {ANAYO.%loop-player%.LASTVL::*}
         send "{@ANAYO} All online players VLs were deleted."

function ANAYOReload(p: text):
  set {ANAYO.C.AUTOCLICKER.A} to true
  set {ANAYO.C.AUTOCLICKER.B} to true
  set {ANAYO.C.AUTOCLICKER.C} to true
  set {ANAYO.C.AUTOCLICKER.D} to true
  set {ANAYO.C.AUTOBLOCK.A} to true
  set {ANAYO.C.KILLAURA.A} to true
  set {ANAYO.C.KILLAURA.B} to true
  set {ANAYO.C.KILLAURA.C} to true
  set {ANAYO.C.KILLAURA.D} to true
  set {ANAYO.C.KILLAURA.E} to true
  set {ANAYO.C.KILLAURA.F} to false
  set {ANAYO.C.KILLAURA.G} to true
  set {ANAYO.C.REACH.A} to true
  set {ANAYO.C.REACH.B} to true
  set {ANAYO.C.REACH.C} to true
  set {ANAYO.C.REACH.D} to true
  set {ANAYO.C.REACH.E} to true
  set {ANAYO.C.REACH.F} to true
  set {ANAYO.C.REACH.G} to true
  set {ANAYO.C.REACH.H} to true
  set {ANAYO.C.HITBOX.A} to true
  set {ANAYO.C.HITBOX.B} to true
  set {ANAYO.C.AIM.A} to true
  set {ANAYO.C.AIM.B} to true
  set {ANAYO.C.AIM.C} to true
  set {ANAYO.C.AIM.D} to true
  set {ANAYO.C.AIM.E} to true
  set {ANAYO.C.AIM.F} to true
  set {ANAYO.C.AIM.G} to true
  set {ANAYO.C.AIM.H} to true
  set {ANAYO.C.AIM.I} to true
  set {ANAYO.C.AIM.J} to true
  set {ANAYO.C.AIM.K} to true
  set {ANAYO.C.AIM.L} to true
  set {ANAYO.C.AIM.M} to true
  set {ANAYO.C.AIM.N} to true
  set {ANAYO.C.AIM.O} to true
  set {ANAYO.C.CRITICALS.A} to true
  set {ANAYO.C.CRITICALS.B} to true
  set {ANAYO.C.CRITICALS.C} to true
  set {ANAYO.C.INVMOVE.A} to true
  set {ANAYO.C.INVMOVE.B} to true
  set {ANAYO.C.INVMOVE.C} to true
  set {ANAYO.C.INVACTIONS.A} to true
  set {ANAYO.C.INVACTIONS.B} to true
  set {ANAYO.C.INVACTIONS.C} to true
  set {ANAYO.C.FASTINVCLICK.A} to true
  set {ANAYO.C.NOFALL.A} to true
  set {ANAYO.C.NOFALL.B} to true
  set {ANAYO.C.NOSLOW.A} to true
  set {ANAYO.C.FASTBOW.A} to true
  set {ANAYO.C.MOREPACKETS.A} to true
  set {ANAYO.C.FLY.A} to true
  set {ANAYO.C.BADPACKETS.A} to true
  set {ANAYO.C.MOTION.A} to true
  set {ANAYO.C.MOTION.B} to true
  set {ANAYO.C.SPRINT.A} to true
  set {ANAYO.C.VELOCITY.A} to true
  set {ANAYO.C.VELOCITY.B} to true
  set {ANAYO.C.VELOCITY.C} to true

every 2 minute:
   make server execute command "/anayo clearvl"

on join:
    if {tempban.time::%player%} is set:
        set {_tempban} to  difference between now and {tempban.timestamp::%player%}
        set {_tempban2} to  difference between {tempban.timestamp::%player%} and now
        reduce {_tempban} by {tempban.time::%player%}
        if difference between now and {tempban.timestamp::%player%} is bigger than {tempban.time::%player%}:
            clear {tempban.time::%player%}
            clear {tempban.timestamp::%player%}
            unban player
        if difference between now and {tempban.timestamp::%player%} is smaller than {tempban.time::%player%}:
            set join message to ""
            set {tempban.%player%} to true
            kick player due to "{@ANAYO} &cYour are banned for &e%{tempban.time::%player%}%&c from this server !"
on join:
    if {tempban.time::%player%} is set:
        set join message to ""
on quit:
    if {tempban.time::%player%} is set:
        set quit message to ""


#--------------------------------------------------------
#
#             A N T I  A U T O C L I C K E R
#
#--------------------------------------------------------

every 1 second:
   delete {cpsL::*}
   delete {cpsR::*}
   delete {cps::*}
   delete {ANAYO::CPS::left::*}
   delete {ANAYO::CPS::right::*}
   delete {ANAYO::CPS::damage::*}
   delete {InvalidEntity::*}
   delete {ANAYO.MOVEPACKET::*}
   delete {MultiAura::*}
   delete {APS::*}

on leftclick:
   if {ANAYO.C.AUTOCLICKER.A} is true:
      player's target block is air
      add 1 to {cpsL::%player%}
      if {cpsL::%player%} >= {@MaxLeftCPS}:
         if {@LagBack} is true:
            cancel event
         notify(player, "AutoClicker", "failed")

on rightclick:
   if {ANAYO.C.AUTOCLICKER.B} is true:
      player's target block is air
      add 1 to {cpsR::%player%}
      if {cpsL::%player%} >= {@MaxRightCPS}:
         if {@LagBack} is true:
            cancel event
         notify(player, "AutoClicker", "failed")

on break:
  if event-block is not a flower, slab, short grass, carpet, iron bar, fence, fence gate, glass pane, stairs, slabs, player head, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, short grass, grass, tall grass, trapped chest or brewing stand:
    delete {ANAYO::CPS::left::*}
    set {ANAYO.%PLAYER%.BREAK} to true
    wait 2 ticks
    delete {ANAYO.%PLAYER%.BREAK}

on place:
   set {ANAYO.%PLAYER%.PLACE} to true
   wait 2 ticks
   delete {ANAYO.%PLAYER%.PLACE}

on left click:
  {ANAYO.%PLAYER%.BREAK} is not set
  autoclick(player, "Left")
  
on right click:
  clicked block is not fence gate, daylight detector, redstone repeater, redstone comparator, lever, button, trapdoor or door
  held item is not fishing rod
  autoclick(player, "Right")

function autoclick(player: player, click: text):
  if {ANAYO.%{_player}%.BREAK} is not set:
    set {_dif} to difference between {ANAYO::%{_click}%::LASTCLICK::%{_player}%} and now
    add 1 to {ANAYO::CPS::%{_click}%::%{_player}%}
    if {ANAYO::CPS::%{_click}%::%{_player}%} is greater than {@MaxCPS}:
      if {ANAYO.%{_player}%.BREAK} is not set:
        if {_click} is "Right":
          if difference between {ANAYO::LASTHIT::%{_player}%} and now is greater than 0.5 second:
            if {ANAYO.C.AUTOCLICKER.C} is true:
              notify({_player}, "AutoClicker", "failed")
          else:
            if {ANAYO.C.AUTOBLOCK.A} is true:
              if {ANAYO.%{_p}%.PLACE} is not set:
                notify({_player}, "AutoBlock", "failed")
        else:
          if {ANAYO.C.AUTOCLICKER.D} is true:
            target block of {_player} is not a flower, slab, short grass, carpet, iron bar, fence, fence gate, glass pane, stairs, slabs, player head, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand
            notify({_player}, "AutoClicker", "failed")

#--------------------------------------------------------
#
#             A N T I   R E A C H
#
#--------------------------------------------------------

on damage:
  attacker is a player
  damage cause is not thorns
  projectile doesn't exist
  set {_y.a} to y coord of attacker
  set {_y.v} to y coord of victim
  set {_v} to victim's location
  set {_a} to attacker's location
  set {_yans} to {_y.v} - {_y.a}
  if {_yans} >= 0.01:
    set {_ans} to distance between {_v} and {_a} - ({_yans} / 2)
  if {_yans} <= 0:
    set {_ans} to distance between {_v} and {_a} - 0.58
  if {_ans} > {@MaxReachA}:
    if {ANAYO.C.REACH.A} is true:
      distance between attacker and victim < 5
      if {@LagBack} is true:
        cancel event
      add 1 to {ANAYO.%attacker%.REACH.A}
      if {ANAYO.%attacker%.REACH.A} > 1:
        if {ANAYO.%attacker%.VL::Reach} < 3:
          verbose(attacker, "Reach", "A", "range=%{_ans}%")
          delete {ANAYO.%attacker%.REACH.A}
        else:
          notify(attacker, "Reach", "failed")
          verbose(attacker, "Reach", "A", "range=%{_ans}%")
          delete {ANAYO.%attacker%.REACH.A}
    if {_ans} > {@MaxReachB}:
      if {ANAYO.C.REACH.B} is true:
        if {@LagBack} is true:
          cancel event
        add 1 to {ANAYO.%ATTACKER%.REACH.B}
        if {ANAYO.%ATTACKER%.REACH.B} > 2:
          if {ANAYO.%ATTACKER%.VL::Reach} < 5:
            verbose(attacker, "Reach", "B", "range=%{_ans}%")
            delete {ANAYO.%ATTACKER%.REACH.B}
          else:
            notify(attacker, "Reach", "failed")
            verbose(attacker, "Reach", "B", "range=%{_ans}%")
            delete {ANAYO.%ATTACKER%.REACH.B}
    else:
      delete {ANAYO.%ATTACKER%.REACH.B}
    if {_ans} > {@MaxReachH}:
      if {ANAYO.C.REACH.H} is true:
        if {@LagBack} is true:
          cancel event
        add 1 to {ANAYO.%ATTACKER%.REACH.H}
        if {ANAYO.%ATTACKER%.REACH.H} > 1:
          if {ANAYO.%ATTACKER%.VL::Reach} < 8:
            verbose(attacker, "Reach", "H", "range=%{_ans}%")
            delete {ANAYO.%ATTACKER%.REACH.H}
          else:
            notify(attacker, "Reach", "failed")
            verbose(attacker, "Reach", "H", "range=%{_ans}%")
            delete {ANAYO.%ATTACKER%.REACH.H}
    else:
      delete {ANAYO.%ATTACKER%.REACH.H}
  else:
    delete {ANAYO.%attacker%.REACH.A}
  if victim is a player:
    if attacker's y coordinate = victim's y coordinate:
      if {_ans} > {@MaxReachC}:
        if {ANAYO.C.REACH.C} is true:
          if {@LagBack} is true:
            cancel event
          add 1 to {ANAYO.%ATTACKER%.REACH.C}
          if {ANAYO.%ATTACKER%.REACH.C} > 1:
            if {ANAYO.%ATTACKER%.VL::Reach} < 2:
              verbose(attacker, "Reach", "C", "range=%{_ans}%")
              delete {ANAYO.%ATTACKER%.REACH.C}
            else:
              notify(attacker, "Reach", "failed")
              verbose(attacker, "Reach", "C", "range=%{_ans}%")
              delete {ANAYO.%ATTACKER%.REACH.C}
      else:
        delete {ANAYO.%ATTACKER%.REACH.C}

    else if attacker's y coordinate = victim's y coordinate: 
      if {_ans} > {@MaxReachD}:
        if {ANAYO.C.REACH.D} is true:
          if {@LagBack} is true:
            cancel event
          add 1 to {ANAYO.%ATTACKER%.REACH.D}
          if {ANAYO.%ATTACKER%.REACH.D} > 1:
            if {ANAYO.%ATTACKER%.VL::Reach} < 2:
              verbose(attacker, "Reach", "D", "range=%{_ans}%")
              delete {ANAYO.%ATTACKER%.REACH.D}
            else:
              notify(attacker, "Reach", "failed")
              verbose(attacker, "Reach", "D", "range=%{_ans}%")
              delete {ANAYO.%ATTACKER%.REACH.D}
      else:
        delete {ANAYO.%ATTACKER%.REACH.D}
    else:
      if {_ans} > {@MaxReachE}:
        if {ANAYO.C.REACH.E} is true:
          if {@LagBack} is true:
            cancel event
          add 1 to {ANAYO.%ATTACKER%.REACH.E}
          if {ANAYO.%ATTACKER%.REACH.E} > 1:
            if {ANAYO.%ATTACKER%.VL::Reach} < 2:
              verbose(attacker, "Reach", "E", "range=%{_ans}%")
              delete {ANAYO.%ATTACKER%.REACH.E}
            else:
              notify(attacker, "Reach", "failed")
              verbose(attacker, "Reach", "E", "range=%{_ans}%")
              delete {ANAYO.%ATTACKER%.REACH.E}
      else:
        delete {ANAYO.%ATTACKER%.REACH.E}

on damage:
  attacker is a player
  damage cause is not thorns
  attacker doesn't have speed
  projectile doesn't exist
  set {_l.a} to attacker's location
  set {_l.v} to victim's location
  set y coordinate of {_l.v} to y coordinate of {_l.a}
  set {_dist.x} to difference between x coordinate of {_l.v} and x coordinate of {_l.a}
  set {_dist.z} to difference between y coordinate of {_l.v} and y coordinate of {_l.a}
  if {_dist.x} > 4.7:
    if {@LagBack} is true:
      cancel event
    if {_dist.x} > {@MaxReach}:
      if {ANAYO.C.REACH.F} is true:
        if {ANAYO.%attacker%.VL::Reach} < 5:
          verbose(attacker, "Reach", "F", "range=%{_dist.x}%")
        else:
          notify(attacker, "Reach", "failed")
          verbose(attacker, "Reach", "F", "range=%{_dist.x}%")
    else:
      if {ANAYO.C.HITBOX.A} is true:
        if {ANAYO.%attacker%.VL::HitBox} < 5:
          verbose(attacker, "HitBox", "A", "range=%{_dist.x}%")
        else:
          notify(attacker, "HitBox", "failed")
          verbose(attacker, "HitBox", "A", "range=%{_dist.x}%")
  else if {_dist.z} > {@MaxReach}:
    if {@LagBack} is true:
      cancel event
    if {_dist.z} > {@MaxReach}:
      if {ANAYO.C.REACH.G} is true:
        if {ANAYO.%attacker%.VL::Reach} < 5:
          verbose(attacker, "Reach", "G", "range=%{_dist.x}%")
        else:
          notify(attacker, "Reach", "failed")
          verbose(attacker, "Reach", "G", "range=%{_dist.x}%")
    else:
      if {ANAYO.C.HITBOX.B} is true: 
        if {ANAYO.%attacker%.VL::HitBox} < 5:
          verbose(attacker, "HitBox", "B", "range=%{_dist.x}%")
        else:
          notify(attacker, "HitBox", "failed")
          verbose(attacker, "HitBox", "B", "range=%{_dist.x}%")


#--------------------------------------------------------
#
#             A N T I   K I L L A U R A
#
#--------------------------------------------------------

on damage:
  attacker is a player
  damage cause is not thorns
  attack is not victim
  projectile doesn't exist
  if distance between attacker and victim > distance between attacker and attacker's targeted block:
    attacker's targeted block is not a flower, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, short grass, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, player head, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand
    attacker's targeted block is not block under victim
    attacker's targeted entity is set
    block at victim is not water
    block above victim is not water
    block above attacker is not water
    block at attacker is not water
    if distance between victim and attacker's targeted block is greater than {@AuraDistance}:
      if {ANAYO.C.KILLAURA.A} is true:
        if {@LagBack} is true:
          cancel event
        add 1 to {ANAYO.%attacker%.KILLAURA.A}
        if {ANAYO.%attacker%.KILLAURA.A} >= 2:
          if {ANAYO.%ATTACKER%.VL::KillAura} < 3:
            verbose(attacker, "KillAura", "A", "targetblock=%target block of attacker%")
          else:
            notify(attacker, "KillAura", "failed")
            verbose(attacker, "KillAura", "A", "targetblock=%target block of attacker%")
        else:
          if {ANAYO.%attacker%.KILLAURA.A} >= 1:
            remove 1 from {ANAYO.%attacker%.KILLAURA.A}
          else:
            delete {ANAYO.%attacker%.KILLAURA.A}

on damage:
  attacker is a player
  damage cause is not thorns
  projectile is not set
  attacker doesn't have speed
  if attacker is a player:
    add 1 to {APS::%attacker%}
    if {APS::%attacker%} > {@MaxAPS}:
      if distance between victim and attacker is greater than {@AuraDistance}:
        if {ANAYO.C.KILLAURA.B} is true:
          if {@LagBack} is true:
            cancel event
          if {ANAYO.%ATTACKER%.VL::KillAura} < 3:
            verbose(attacker, "KillAura", "B", "APS=%{APS::%attacker%}%")
          else:
            notify(attacker, "KillAura", "failed")
            verbose(attacker, "KillAura", "B", "APS=%{APS::%attacker%}%")

on damage:
  attacker is a player
  damage cause is not thorns
  attacker's gamemode is survival or adventure
  add 1 to {MultiAura::%attacker%}
  if {MultiAura::%attacker%} > {@MultiAura}:
    if {ANAYO.C.KILLAURA.C} is true:
      if {@LagBack} is true:
        cancel event
      if {ANAYO.%ATTACKER%.VL::KillAura} < 3:
        verbose(attacker, "KillAura", "C", "Multi=%{MultiAura::%attacker%}%")
      else:
        notify(attacker, "KillAura", "failed")
        verbose(attacker, "KillAura", "C", "Multi=%{MultiAura::%attacker%}%")

on damage:
  damage cause is not thorns
  attacker is a player
  if attacker's targeted entity is not set:
    if distance between attacker and victim > {@AuraDistance}:
      add 1 to {InvalidEntity::%attacker%}
      if {InvalidEntity::%attacker%} > {@MaxInvalidHits}:
        if {ANAYO.C.KILLAURA.D} is true:
          if {@LagBack} is true:
            cancel event
          if {ANAYO.%attacker%.VL::KillAura} < 3:
            verbose(attacker, "KillAura", "D", "InvalidHits: %{InvalidEntity::%attacker%}%")
          else:
            notify(attacker, "KillAura", "failed")
            verbose(attacker, "KillAura", "D", "InvalidHits: %{InvalidEntity::%attacker%}%")
  else:
    delete {InvalidEntity::%attacker%}

on npc left click:
   if {ANAYO.C.KILLAURA.E} is true:
      if {ANAYO.%player%.BOTTEST} is true:
         if {ANAYO.%player%.VL::KillAura} < 3:
            verbose(player, "KillAura", "E", "bothit=true")
         else:
            notify(player, "KillAura", "failed")
            verbose(player, "KillAura", "E", "bothit=true")
            set {ANAYO.%player%.NODAMAGE} to true
            wait 3 second
            delete {ANAYO.%player%.NODAMAGE}

on damage:
   damage cause is not thorns
   attacker is a player:
      if attacker's targeted entity is set:
         if attacker is sprinting:
            add 1 to {ANAYO.%attacker%.KACOUNT}
            if {ANAYO.%attacker%.KA.SPRINT} is not set:
               set {ANAYO.%ATTACKER%.KA.SPRINT} to true
               stop
            else:
               if {ANAYO.%ATTACKER%.KACOUNT} > 3:
                  if {ANAYO.C.KILLAURA.F} is true:
                     if {ANAYO.%ATTACKER%.VL::KillAura} < 3:
                        verbose(attacker, "KillAura", "F*", "KeepSprint=true")
                     else:
                        notify(attacker, "KillAura", "failed")
                        verbose(attacker, "KillAura", "F*", "KeepSprint=true")
         else:
            delete {ANAYO.%ATTACKER%.KA.SPRINT}
            delete {ANAYO.%attacker%.KACOUNT}

on left click:
   set {ANAYO.%player%.LEFTCLICK} to true
   delete {ANAYO.%player%.NOSWING}

on damage:
   if attacker is a player:
      projectile doesn't exist
      if distance between attacker and victim > {@AuraDistance}:
         if {ANAYO.%attacker%.LEFTCLICK} is not set:
            add 1 to {ANAYO.%attacker%.NOSWING}
            if {ANAYO.%attacker%.NOSWING} > {@NoSwingCount}:
               if {ANAYO.C.KILLAURA.G} is true:
                  delete {ANAYO.%attacker%.NOSWING}
                  if {ANAYO.%attacker%.VL::KillAura} < 3:
                     verbose(attacker, "KillAura", "G", "Swing=false")
                  else:
                     notify(attacker, "KillAura", "failed")
                     verbose(attacker, "KillAura", "G", "Swing=false")
         else:
            delete {ANAYO.%attacker%.NOSWING}

on damage:
   if attacker is a player:
      wait 1 ticks
      if {cpsL::%attacker%} >= 4:
         delete {ANAYO.%attacker%.LEFTCLICK}

#--------------------------------------------------------
#
#             A N T I   A I M  B O T 
#
#--------------------------------------------------------

on damage:
  attacker is a player
  damage cause is not thorns
  projectile doesn't exist
  set {_p} to attacker's pitch
  set {_y} to attacker's yaw
  wait 2 tick
  if attacker's targeted entity is victim:
    if distance between attacker and victim is greater than {@AimTrigger}:
      if difference between attacker's yaw and {_y} < {@MinAimAYaw}:
        if difference between attacker's pitch and {_p} is bigger than {@AimMinA}:
          if {ANAYO.C.AIM.A} is true:
            if {ANAYO.%attacker%.VL::Aim} < 5:
              verbose(attacker, "Aim", "A", "PitchDiff=%difference between attacker's pitch and {_p}%")
            else:
              notify(attacker, "Aim", "failed")
              verbose(attacker, "Aim", "A", "PitchDiff=%difference between attacker's pitch and {_p}%")
            if {@LagBack} is true:
              set {ANAYO.%attacker%.NODAMAGE} to true
              wait 0.5 second
              delete {ANAYO.%attacker%.NODAMAGE}
on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 2 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinL} and {@AimMaxL}:
         if {ANAYO.C.AIM.L} is true:
            add 1 to {ANAYO.%attacker%.AIM.L}
            if {ANAYO.%attacker%.AIM.L} >= {@AimCMaxL}:
               if {ANAYO.%attacker%.VL::Aim} < 8:
                  verbose(attacker, "Aim", "L", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.L}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "L", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.L}
      else:
         if {ANAYO.%attacker%.AIM.L} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.L}
         else:
            delete {ANAYO.%attacker%.AIM.L}


on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 1 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p1} = {@AimMinB}:
         if {ANAYO.C.AIM.B} is true:
            add 1 to {ANAYO.%attacker%.AIM.B}
            if {ANAYO.%attacker%.AIM.B} >= {@AimCMaxB}:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "B", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.B}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "B", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.B}
      else:
         if {ANAYO.%attacker%.AIM.B} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.B}
      if {_p} > {@AimMinJ}:
         difference between {_y1} and attacker's yaw < {@MinAimAYaw}
         if {ANAYO.C.AIM.J} is true:
            add 1 to {ANAYO.%attacker%.AIM.J}
            if {ANAYO.%attacker%.AIM.J} >= {@AimCMaxJ}:
               if {ANAYO.%attacker%.VL::Aim} < 8:
                  verbose(attacker, "Aim", "J", "Pitch=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.J}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "J", "Pitch=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.J}
      else:
         if {ANAYO.%attacker%.AIM.J} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.J}
      if difference between {_p1} and attacker's pitch is between {@AimMinD} and {@AimMaxD}:
         if {ANAYO.C.AIM.D} is true:
            add 1 to {ANAYO.%attacker%.AIM.D}
            if {ANAYO.%attacker%.AIM.D} >= {@AimCMaxD}:
               if {ANAYO.%ATTACKER%.VL::Aim} < 3:
                  verbose(attacker, "Aim", "D", "PitchDiff=0")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.D}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "D", "PitchDiff=0")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.D}
      else:
         if {ANAYO.%attacker%.AIM.D} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.D}


on damage:
   {ANAYO.C.AIM.K} is true
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 1 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinK} and {@AimMaxK}:
         add 1 to {ANAYO.%attacker%.AIM.K}
         if {ANAYO.%attacker%.AIM.K} >= {@AimCMaxK}:
            if {ANAYO.%attacker%.VL::Aim} < 10:
               verbose(attacker, "Aim", "K", "Pattern=%{_p}%")
               if {@AimSafeVerbose} is true:
                  delete {ANAYO.%attacker%.AIM.K}
            else:
               notify(attacker, "Aim", "failed")
               verbose(attacker, "Aim", "K", "Pattern=%{_p}%")
               if {@AimSafeNotify} is true:
                  delete {ANAYO.%attacker%.AIM.K}
               if {@LagBack} is true:
                  set {ANAYO.%attacker%.NODAMAGE} to true
                  wait 0.5 second
                  delete {ANAYO.%attacker%.NODAMAGE}
      else:
         if {ANAYO.%attacker%.AIM.K} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.K}

on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 1 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinE} and {@AimMaxE}:
         add 1 to {ANAYO.%attacker%.AIM.E}
         if {ANAYO.%attacker%.AIM.E} >= {@AimCMaxE}:
            if {ANAYO.C.AIM.E} is true:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "E", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.E}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "E", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.E}
                  if {@LagBack} is true:
                     set {ANAYO.%attacker%.NODAMAGE} to true
                     wait 0.5 second
                     delete {ANAYO.%attacker%.NODAMAGE}
      else:
         if {ANAYO.%attacker%.AIM.E} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.E}

on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_y1} to attacker's yaw
      set {_loc} to attacker's location
      wait 2 tick
      set {_p} to difference between {_p1} and attacker's pitch
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinN} and {@AimMaxN}:
         add 1 to {ANAYO.%attacker%.AIM.N}
         if {ANAYO.%attacker%.AIM.N} >= {@AimCMaxN}:
            if {ANAYO.C.AIM.N} is true:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "N", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.N}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "N", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.N}
                  if {@LagBack} is true:
                     set {ANAYO.%attacker%.NODAMAGE} to true
                     wait 0.5 second
                     delete {ANAYO.%attacker%.NODAMAGE}
      else:
         if {ANAYO.%attacker%.AIM.N} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.N}

on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_y1} to attacker's yaw
      set {_loc} to attacker's location
      wait 2 tick
      set {_p} to difference between {_p1} and attacker's pitch
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinO} and {@AimMaxO}:
         add 1 to {ANAYO.%attacker%.AIM.O}
         if {ANAYO.%attacker%.AIM.O} >= {@AimCMaxO}:
            if {ANAYO.C.AIM.O} is true:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "O", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.O}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "O", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.O}
                  if {@LagBack} is true:
                     set {ANAYO.%attacker%.NODAMAGE} to true
                     wait 0.5 second
                     delete {ANAYO.%attacker%.NODAMAGE}
      else:
         if {ANAYO.%attacker%.AIM.N} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.N}

on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 1 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinF} and {@AimMaxF}:
         add 1 to {ANAYO.%attacker%.AIM.F}
         if {ANAYO.%attacker%.AIM.F} >= {@AimCMaxF}:
            if {ANAYO.C.AIM.F} is true:
               if {ANAYO.%attacker%.VL::Aim} < 10:
                  verbose(attacker, "Aim", "F", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.F}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "F", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.F}
      else:
         if {ANAYO.%attacker%.AIM.F} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.F}
         else:
            delete {ANAYO.%attacker%.AIM.F}

on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 1 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinC} and {@AimMaxC}:
         if {ANAYO.C.AIM.C} is true:
            add 1 to {ANAYO.%attacker%.AIM.C}
            if {ANAYO.%attacker%.AIM.C} >= {@AimCMaxC}:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "C", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.C}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "C", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.C}
                  if {@LagBack} is true:
                     set {ANAYO.%attacker%.NODAMAGE} to true
                     wait 0.5 second
                     delete {ANAYO.%attacker%.NODAMAGE}
      else:
         if {ANAYO.%attacker%.AIM.C} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.C}

on damage:
   attacker is a player
   damage cause isn't thorns
   projectile doesn't exist
   if distance between attacker and victim is greater than {@AimTrigger}:
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 1 tick
      set {_p} to difference between {_p1} and attacker's pitch
      set {_y1} to attacker's yaw
      wait 1 ticks
      if difference between {_y1} and attacker's yaw < {@NeededYaw}:
         stop
      set y location of {_loc} to attacker's y location
      if distance between attacker's location and {_loc} < {@MoveDistanceAim}:
         stop
      if {_p} is 0:
         add 1 to {ANAYO.%attacker%.AIM.0}
      else:
         if {ANAYO.%attacker%.AIM.0} >= 1:
            remove 1 from {ANAYO.%attacker%.AIM.0}
      {ANAYO.%attacker%.AIM.0} > 3
      if {_p} is between {@AimMinG} and {@AimMaxG}:
         add 1 to {ANAYO.%attacker%.AIM.G}
         if {ANAYO.%attacker%.AIM.G} >= {@AimCMaxG}:
            if {ANAYO.C.AIM.G} is true:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "G", "PitchDiff=%{_p}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.G}
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "G", "PitchDiff=%{_p}%")
                  if {@AimSafeNotify} is true:
                     delete {ANAYO.%attacker%.AIM.G}
                  if {@LagBack} is true:
                     set {ANAYO.%attacker%.NODAMAGE} to true
                     wait 0.5 second
                     delete {ANAYO.%attacker%.NODAMAGE}
      else:
         if {ANAYO.%attacker%.AIM.G} >= 1:
            remove 0.25 from {ANAYO.%attacker%.AIM.G}

on damage:
   if {ANAYO.%attacker%.NODAMAGE} is true:
      cancel event

on damage:
   {ANAYO.C.AIM.H} is true
   attacker is a player
   damage cause is not thorns
   projectile doesn't exist
   if distance between attacker and victim > {@AimTrigger}:
      set {_y1} to attacker's yaw
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 2 ticks
      if difference between {_p1} and attacker's pitch > 0:
         if distance between attacker's location and {_loc} > {@MoveDistanceAim}:
            set {_y} to difference between {_y1} and attacker's yaw
            if {ANAYO.%attacker%.YAW1} is not set:
               set {ANAYO.%attacker%.YAW1} to {_y}
               stop
            if {ANAYO.%attacker%.YAW2} is not set:
               set {ANAYO.%attacker%.YAW2} to {_y}
            set {_y} to difference between {ANAYO.%attacker%.YAW1} and {ANAYO.%attacker%.YAW2}
            delete {ANAYO.%attacker%.YAW1}
            delete {ANAYO.%attacker%.YAW2}
            if {_y} = {@AimMinH}:
               if {ANAYO.%attacker%.VL::Aim} < 5:
                  verbose(attacker, "Aim", "H", "YawSame=%{_y}%")
               else:
                  notify(attacker, "Aim", "failed")
                  verbose(attacker, "Aim", "H", "YawSame=%{_y}%")

on damage:
   {ANAYO.C.AIM.I} is true
   attacker is a player
   damage cause is not thorns
   projectile doesn't exist
   if distance between attacker and victim > {@AimTrigger}:
      set {_y1} to attacker's yaw
      set {_p1} to attacker's pitch
      set {_loc} to attacker's location
      wait 2 ticks
      if difference between {_y1} and attacker's yaw > 0:
         if distance between attacker's location and {_loc} > {@MoveDistanceAim}:
            set {_y} to difference between {_p1} and attacker's pitch
            if {ANAYO.%attacker%.PITCH1} is not set:
               set {ANAYO.%attacker%.PITCH1} to {_y}
               stop
            if {ANAYO.%attacker%.PITCH2} is not set:
               set {ANAYO.%attacker%.PITCH2} to {_y}
            set {_y} to difference between {ANAYO.%attacker%.PITCH1} and {ANAYO.%attacker%.PITCH2}
            delete {ANAYO.%attacker%.PITCH1}
            delete {ANAYO.%attacker%.PITCH2}
            if {_y} < {@AimMinI}:
               add 1 to {ANAYO.%attacker%.AIM.I}
               if {ANAYO.%attacker%.AIM.I} >= {@AimCMaxI}:
                  if {ANAYO.%attacker%.VL::Aim} < 5:
                     add 1 to {ANAYO.%attacker%.AIM.I}
                     if {ANAYO.%attacker%.AIM.I} >= {@AimCMaxI}:
                        verbose(attacker, "Aim", "I", "PitchSame=%{_y}%")
                        if {@AimSafeVerbose} is true:
                           delete {ANAYO.%attacker%.AIM.I}
                     else:
                        notify(attacker, "Aim", "failed")
                        verbose(attacker, "Aim", "I", "PitchSame=%{_y}%")
                        if {@AimSafeNotify} is true:
                           delete {ANAYO.%attacker%.AIM.I}
               else:
                  if {ANAYO.%attacker%.AIM.I} >= 1:
                     remove 0.25 from {ANAYO.%attacker%.AIM.I}
                  else:
                     delete {ANAYO.%attacker%.AIM.I}
            if {_y} is less than {@AimMinM}:
               add 1 to {ANAYO.%attacker%.AIM.M}
               if {ANAYO.%attacker%.AIM.M} >= {@AimCMaxM}:
                  verbose(attacker, "Aim", "M*", "Patern=%{_y}%")
                  if {@AimSafeVerbose} is true:
                     delete {ANAYO.%attacker%.AIM.M}
            else:
               if {ANAYO.%attacker%.AIM.M} >= 1:
                  remove 0.25 from {ANAYO.%attacker%.AIM.M}
               else:
                  delete {ANAYO.%attacker%.AIM.M}

#--------------------------------------------------------
#
#             A N T I   C R I T I C A L S
#
#--------------------------------------------------------

on damage:
  damage cause is not thorns
  attacker is a player
  block under attacker is not water
  block at attacker is not water
  block north of attacker is not water
  block east of attacker is not water
  block south of attacker is not water
  block west of attacker is not water
  set {hasAttack.%attacker%} to true
  if block under attacker is not air:
    if block 0.05 under attacker is not air:
      if attacker is not on ground:
        wait 1 tick
        block under attacker is not air
        block 0.05 under attacker is not air
        attacker is not on ground
        if block at attacker is a flower, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, short grass, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, player head, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand:
          stop
        if block under attacker is a flower, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, short grass, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, player head, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand:
          stop
        {hasDamage.%victim%} is not set
        if {ANAYO.C.CRITICALS.A} is true:
          if {ANAYO.%attacker%.DAMAGED} is not set:
            if {ANAYO.%attacker%.VL::Criticals} < 1:
              verbose(attacker, "Criticals", "A", "BlockUnder=%block under attacker%")
            else:
              notify(attacker, "Criticals", "failed")
              verbose(attacker, "Criticals", "A", "BlockUnder=%block under attacker%")
            if {@LagBack} is true:
              set {ANAYO.%attacker%.NODAMAGE} to true
              wait 3 second
              delete {ANAYO.%attacker%.NODAMAGE}
  wait 10 ticks
  delete {hasAttack.%attacker%}
  
on damage:
  if attacker is a player:
    set {ANAYO.LASTHIT.%attacker%} to now
  if victim is a player:
    set {hasDamage.%victim%} to true
    wait 5 ticks
    delete {hasDamage.%victim%}
  
on jump:
  block under player is not water
  block at player is not water
  block north of player is not water
  block east of player is not water
  block south of player is not water
  block west of player is not water
  set {_target} to targeted entity
  set {_health} to {_target}'s health
  set {_loc} to player's y coordinate
  set {_1} to difference between {_loc} and player's y coordinate
  wait 1 tick
  set {_2} to difference between {_loc} and player's y coordinate
  wait 1 tick
  set {_3} to difference between {_loc} and player's y coordinate
  wait 1 tick
  set {_4} to difference between {_loc} and player's y coordinate
  {hasAttack.%player%} is true
  set {_health} to difference between {_target}'s health and {_health}
  if "%{_1}%" = "%{_2}%":
    if "%{_2}%" = "%{_3}%":
      if "%{_3}%" = "%{_4}%":
        if "%{_1}%" = "0":
          if {ANAYO.C.CRITICALS.B} is true:
            heal {_target} by {_health} hearts
            if {ANAYO.%player%.VL::Criticals} < 1:
              verbose(player, "Criticals", "B", "BlockUnder=%block under player%")
            else:
              notify(player, "Criticals", "failed")
              verbose(player, "Criticals", "B", "BlockUnder=%block under player%")
            if {@LagBack} is true:
              set {ANAYO.%player%.NODAMAGE} to true
              wait 3 second
              delete {ANAYO.%player%.NODAMAGE}
  if "%{_1}%" = "0":
    if "%{_2}%" = "0.1":
      if "%{_3}%" = "0.06", "0.1" or "0.12":
        if "%{_4}%" = "0.06", "0.1" or "0.12":
          if {ANAYO.C.CRITICALS.C} is true:
            if {ANAYO.%player%.VL::Criticals} < 1:
              verbose(player, "Criticals", "C", "BlockUnder=%block under player%")
            else:
              notify(player, "Criticals", "failed")
              verbose(player, "Criticals", "C", "BlockUnder=%block under player%")
            if {@LagBack} is true:
              set {ANAYO.%player%.NODAMAGE} to true
              wait 3 second
              delete {ANAYO.%player%.NODAMAGE}

#--------------------------------------------------------
#
#             A N T I   V E L O C I T Y
#
#--------------------------------------------------------

on damage:
  victim is a player
  projectile doesn't exist
  "%victim's helmet%" does not contain "Netherite"
  "%victim's chestplate%" does not contain "Netherite"
  "%victim's leggings%" does not contain "Netherite"
  "%victim's boots%" does not contain "Netherite"
  set {_health}  to victim's health
  set {_kb} to victim's location
  set {_b2kb} to block 2 behind victim
  set {_x} to victim's x coordinate
  set {_y} to victim's y coordinate
  set {_z} to victim's z coordinate
  damage cause is not thorns, magma, unknown, contact, suffocation, fall, potion, lava, burning, fire, poison, starvation or wither
  "%damage cause%" != "unknown"
  block under victim is not magma block
  victim is not burning
  victim doesn't have poison
  victim doesn't have wither
  block at victim is air, grass or flower
  block above victim is air, grass or flower
  block north of victim is air, grass or flower
  block east of victim is air, grass or flower
  block west of victim is air, grass or flower
  block south of victim is air, grass or flower
  block north east of victim is air, grass or flower
  block south east of victim is air, grass or flower
  block north west of victim is air, grass or flower
  block south west of victim is air, grass or flower
  block north of block above victim is air, grass or flower
  block east of block above victim is air, grass or flower
  block west of block above victim is air, grass or flower
  block south of block above victim is air, grass or flower
  block north east of block above victim is air, grass or flower
  block south east of block above victim is air, grass or flower
  block north west of block above victim is air, grass or flower
  block south west of block above victim is air, grass or flower
  wait 2 ticks
  block at victim is air, grass or flower
  block above victim is air, grass or flower
  set {_kb} to distance between victim's location and {_kb}
  set {_b2kb} to distance between victim's location and {_b2kb}
  set {_x} to difference between {_x} and victim's x coordinate
  set {_y} to difference between {_y} and victim's y coordinate
  set {_z} to difference between {_z} and victim's z coordinate
  if {_kb} < 0.2:
    add 1 to {ANAYO.%victim%.VELOCITY.A}
    if {ANAYO.%victim%.VELOCITY.A} > 2:
      verbose(victim, "Velocity", "A*", "Kb=%{_kb}%")
  else:
    delete {ANAYO.%victim%.VELOCITY.A}
  if {_kb} = 0:
    add 1 to {ANAYO.%victim%.VELOCITY.B}
    if {ANAYO.%victim%.VELOCITY.B} > 1:
      verbose(victim, "Velocity", "B*", "Kb=0")
  else:
    delete {ANAYO.%victim%.VELOCITY.B}
  if {_kb} > 2:
    add 1 to {ANAYO.%victim%.VELOCITY.C}
    if {ANAYO.%victim%.VELOCITY.C} > 1:
      verbose(victim, "Velocity", "C*", "Kb=%{_kb}%")
  else:
    delete {ANAYO.%victim%.VELOCITY.C}

#--------------------------------------------------------
#
#             A N T I   M O R E  P A C K E T S
#
#-------------------------------------------------------

on any move:
   add 1 to {ANAYO.MOVEPACKET::%player%}
   if {ANAYO.MOVEPACKET::%player%} > 20:
      add 1 to {ANAYO.MOREPACKETS::%player%}
      if {ANAYO.MOREPACKETS::%player%} >= 8:
         if {ANAYO.C.MOREPACKETS.A} is true:
            verbose(player, "MorePackets", "A", "Packets=%{ANAYO.MOVEPACKET::%player%}%")
            #if {@LagBack} is true:
               #cancel event
               
every 3 second:
   delete {ANAYO.MOREPACKETS::*}
#--------------------------------------------------------
#
#             A N T I   F A S T B O W
#
#--------------------------------------------------------

on shoot:
   if projectile is arrow:
      set {_waited} to difference between {Shoot.%shooter%} and now
      if {_waited} is less than {@BowDelay} ticks:
         if {ANAYO.C.FASTBOW.A} is true:
            notify(shooter, "FastBow", "failed")
            if {@LagBack} is true:
               cancel event
         set {Shoot.%shooter%} to now
         set {Shoot.amount.%shooter%} to {Shoot.amount.%shooter%} + 1
      else:
         set {Shoot.%shooter%} to now

#--------------------------------------------------------
#
#             A N T I    I N V M O V E
#
#--------------------------------------------------------

on inventory click:
   set {_loc2} to player's location
   set y coordinate of {_loc2} to 0
   wait 2 tick
   set {_loc1} to player's location
   set y coordinate of {_loc1} to 0
   set {_loc} to distance between {_loc1} and {_loc2}
   if {_loc} >= 1.25:
      block under player is not water or packed ice:
         if {ANAYO.C.INVMOVE.A} is true:
            close player's inventory
            notify(player, "InvMove", "failed")

on inventory open:
   wait 2 ticks
   set {ANAYO.%player%.INVSTATE} to true

on inventory close:
   wait 2 ticks
   delete {ANAYO.%Player%.INVSTATE}

on damage:
   if {ANAYO.%attacker%.INVSTATE} is true:
      if {ANAYO.C.INVACTIONS.C} is true:
         notify(attacker, "InvActions", "failed")

on inventory click:
  player's gamemode is not creative
  if player is sprinting:
    if {ANAYO.C.INVMOVE.B} is true:
      cancel event
      notify(player, "InvMove", "failed")
      close player's inventory
  if player is sneaking:
    if {ANAYO.C.INVACTIONS.A} is true:
      cancel event
      notify(player, "InvActions", "failed")
      close player's inventory
on damage:
  victim is a player
  clear {invop.%victim%} 
on inventory open:
  wait 3 ticks
  if player is sprinting:
    if {ANAYO.C.INVMOVE.C} is true:
      notify(player, "InvMove", "failed")
      close player's inventory
on inventory open:
  wait 3 ticks
  if player is sneaking:
    if {ANAYO.C.INVACTIONS.B} is true:
      notify(player, "InvActions", "failed")
      close player's inventory

#--------------------------------------------------------
#
#             A N T I    F A S T I N V 
#
#--------------------------------------------------------

on unstore:
   set {_waited} to difference between {ChestStealer.%player%} and now
   if {_waited} is less than {@InvDelay} ticks:
      if {ANAYO.C.FASTINVCLICK.A} is true: 
         if {ANAYO.%player%.VL::FastInvClick} < 5:
            verbose(player, "FastInvClick", "A", "ClickSpeed=%{_waited}%")
         else:
            notify(player, "FastInvClick", "failed")
            verbose(player, "FastInvClick", "A", "ClickSpeed=%{_waited}%")
         if {@LagBack} is true:
            cancel event
      close player's inventory
      set {ChestStealer.%player%} to now
      set {ChestStealer.amount.%player%} to {ChestStealer.amount.%player%} + 1
   else:
      set {ChestStealer.%player%} to now

#--------------------------------------------------------
#
#             A N T I    N O F A L L 
#
#--------------------------------------------------------

on damage:
   if victim is not attacker:
      if damage cause is not fall, poison, wither, drowning or burning:
         set {ANAYO.%victim%.DAMAGED} to true
         wait 2 tick
         delete {ANAYO.%victim%.DAMAGED}

on any movement:
  if {ANAYO.C.NOFALL.B} is false:
    stop
  if fly mode of player is true:
    stop
  if gamemode of player is spectator or creative:
    stop
  if block at player is not water or lava or ladder or vines or lily pad or stairs or slabs:
    if block under player is not water or lava or ladder or vines or lily pad or stairs or slabs:
      if player is not on ground:
        block under player is not air:
          add 1 to {ANAYO.%player%.BADPACKETS.B}
          if {ANAYO.%player%.BADPACKETS.B} >= 20:
            delete {ANAYO.%player%.BADPACKETS.B}
            if {ANAYO.%player%.TIMEPAUSE} is set:
              stop
            if {ANAYO.%player%.DAMAGED} is not set:
              if {ANAYO.%player%.VL::Nofall} < 3:
                verbose(player, "Nofall", "B", "BlockUnder=%block under player%")
              else:
                notify(player, "Nofall", "failed")
                verbose(player, "Nofall", "B", "BlockUnder=%block under player%")
                if {@LagBack} is true:
                  damage player by 2 heart
      else:
        delete {ANAYO.%player%.BADPACKETS.B}

on place:
   set {ANAYO.%player%.TIMEPAUSE} to true
   wait 5 ticks
   delete {ANAYO.%player%.TIMEPAUSE}

on any move:
    {time.%player%} is not set
    player's gamemode is Adventure or Survival
    player is on ground
    block at player is air
    block under player is air
    set {_nofallcount} to 0
    loop all blocks in radius 3 around player:
        if loop-block is stairs:
            stop
        if loop-block is slab:
            stop
    loop all blocks in radius 2 around player:
        if loop-block is not air:
            add 1 to {_nofallcount}
    if {_nofallcount} < 1:
        if {ANAYO.C.NOFALL.A} is true:
            if {ANAYO.%player%.VL::Nofall} < 2:
                verbose(player, "Nofall", "A", "BlockUnder=%block under player%")
            else:
                notify(player, "Nofall", "failed")
                verbose(player, "Nofall", "A", "BlockUnder=%block under player%")
                if {@LagBack} is true:
                    damage player by 2 heart
    if {_nofallcount} > 0:
        stop
   
on walk on slab:
    if {time.%player%} is not set:
        set {time.%player%} to true
        wait 2 seconds
        clear {time.%player%}
on walk on ladder:
    if {time.%player%} is not set:
        set {time.%player%} to true
        wait 2 seconds
        clear {time.%player%}
on break:
    if {time.%player%} is not set:
        set {time.%player%} to true
        wait 0.5 seconds
        clear {time.%player%}

#--------------------------------------------------------
#
#             A N T I    N O S L O W
#
#--------------------------------------------------------

on consuming:
  if player's gamemode is not creative or spectator:
    if {ANAYO.C.NOSLOW.A} is true:
      player's flight mode is false
      if player has speed:
        stop
    {ANAYO.%player%.NOSLOW.DAMAGE} is not set
    set {_loc} to player's location
    set y coordinate of {_loc} to 0
    wait 5 tick
    set {_loc1} to player's location
    set y coordinate of {_loc1} to 0
    set {_loc} to distance between {_loc1} and {_loc}
    if {_loc} > {@NoSlowDistance}:
      set {ANAYO.%player%.CANCEL.EAT} to true
      if {ANAYO.%player%.NOSLOW.DAMAGE} is not set:
        notify(player, "NoSlow", "failed")
        wait 1 seconds
        delete {ANAYO.%player%.CANCEL.EAT}

on damage:
   if damage cause is not fall, poison, wither, drowning or burning:
      set {ANAYO.%victim%.NOSLOW.DAMAGE} to true
      wait 2 tick
      delete {ANAYO.%victim%.NOSLOW.DAMAGE}


#--------------------------------------------------------
#
#             A N T I    R E G E N
#
#--------------------------------------------------------

on heal:
  if {ANAYO.C.BADPACKETS.A} is true:
    if player has regeneration:
      stop
    else:
      set {_dif} to difference between {heal.%player%} and now
      if {_dif} is less than 0.45 seconds:
        cancel event
        set {heal.%player%} to now
        verbose(player, "BadPackets", "A", "PacketsSpeed=%{_dif}%")
      set {heal.%player%} to now

#--------------------------------------------------------
#
#             A N T I    F L Y 
#
#--------------------------------------------------------

on any move:
  {ANAYO.C.FLY.A} is true
  player is not riding
  fly mode of player is false
  gamemode of player is not spectator or creative
  set {_diffy} to difference between y location of player and {yloc.%player%}
  set {yloc.%player%} to y location of player
  if {_diffy} != 0:
    if "%{_diffy}%" = "%{lasposy.%player%}%":
      if "%{_diffy}%" != "0.16":
        {vl16.%player%} is set
        clear {vl16.%player%}
      if "%{_diffy}%" != "0.42":
        {vl42.%player%} is set
        clear {vl42.%player%}
      
      if "%{_diffy}%" != "0.23":
        {vl23.%player%} is set
        clear {vl23.%player%}
      if "%{_diffy}%" != "0.65":
        {vl65.%player%} is set
        clear {vl65.%player%}
      if "%{_diffy}%" != "0.12":
        {vl12.%player%} is set
        clear {vl12.%player%}
      if "%{_diffy}%" != "0.4":
        {vl04.%player%} is set
        clear {vl04.%player%}
      player's gamemode is not creative
      if block at player is ladder or vines:
        stop
      if player's chestplate is an elytra:
        stop
      loop blocks in radius 3 around player:
        loop-block is snow layer or carpet or water or lava or cobweb or anvil or vines or stairs or ladder or slab or 165
        clear {vlsame.%player%}
        stop
      wait 3 ticks
      if {cooldown.%player%} is set:
        difference between {cooldown.%player%} and now < 0.3 seconds
        clear {vlsame.%player%}
        stop
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.16":
        
        add 1 to {vl16.%player%}
        {vl16.%player%} > 2
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.42":
        
        add 1 to {vl42.%player%}
        {vl42.%player%} > 2
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.23":
        
        add 1 to {vl23.%player%}
        {vl23.%player%} > 2
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.12":
        set {_pos} to block 1 north 1 west of block 2 above player
        set {_pos2} to block 1 south 1 east of block above player
        loop blocks within {_pos} to {_pos2}:
          loop-block is not air
          set {lasypos.%player%} to {_diffy}
          stop
        add 1 to {vl12.%player%}
        {vl12.%player%} > 2
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.4":
        set {_pos} to block 1 north 1 west of block 2 above player
        set {_pos2} to block 1 south 1 east of block above player
        loop blocks within {_pos} to {_pos2}:
          loop-block is not air
          stop
        add 1 to {vl04.%player%}
        {vl04.%player%} > 2
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.65":
        
        add 1 to {vl65.%player%}
        {vl65.%player%} > 2
        notify(player, "Fly", "failed")
      if "%{_diffy}%" = "0.42" or "0.23" or "0.12" or "0.65" or "0.16" or "0.4":
        stop
      add 1 to {vlsame.%player%}
      if {_diffy} >= 0.8:
        set {_maxvl} to 1
      else:
        set {_maxvl} to 3
      {vlsame.%player%} > {_maxvl}
      #OLD VL COUNTER
      notify(player, "Fly", "failed")
      loop blocks in radius 3 around player:
        loop-block is snow layer or carpet or water or lava or cobweb or anvil or vines or ladder or stairs or slab or 165
        clear {vlsame.%player%}
        stop
    else:
      set {lasposy.%player%} to {_diffy}
      clear {vlsame.%player%}

on teleport:
  set {%player%.tp} to true
  wait 1 second
  set {%player%.tp} to false

on jump:
  set {%player%.jump} to true
  wait 1 second
  delete {%player%.jump}

#--------------------------------------------------------
#
#             A N T I    M O T I O N
#
#--------------------------------------------------------

on jump:
   if {ANAYO.C.MOTION.A} is true:
      if player's gamemode is not spectator or creative:
         if fly mode of player is false:
            set {_y1} to y location of player
            set {_loc} to player's location
            wait 5 tick
            set {_y2} to y location of player
            if difference between {_y1} and {_y2} > 1.3:
               if {ANAYO.%player%.DAMAGED} is not set:
                  if {ANAYO.%player%.VL::Motion} < 5:
                     verbose(player, "Motion", "A", "deltaY: %difference between {_y1} and {_y2}%")
                     teleport player to {_loc}
                  else:
                     notify(player, "Motion", "failed")
                     verbose(player, "Motion", "A", "deltaY: %difference between {_y1} and {_y2}%")
                     teleport player to {_loc}

on jump:
   if {ANAYO.C.MOTION.B} is true:
      if player's gamemode is not spectator or creative:
         if fly mode of player is false:
            if block under player is not any slabs or any stairs or slime block:
               if block 2 above player is not iron trapdoor or any slabs or any stairs or ladder or vines or water or lava or cobblestone wall:
                  if block 2 above player is air:
                     if player is on ground:
                        if block 2 above player is not air:
                           stop
                        set {_y1} to y location of player
                        set {_loc} to player's location
                        wait 5 tick
                        set {_y2} to y location of player
                        add 1 to y location of {_loc}
                        if {ANAYO.%player%.DAMAGED} is not set:
                           if difference between {_y1} and {_y2} is between 0.9 and 0.4:
                              if {ANAYO.%player%.DAMAGED} is not set:
                                 if {ANAYO.%player%.VL::Motion} < 5:
                                    verbose(player, "Motion", "B*", "deltaY: %difference between {_y1} and {_y2}%")
                                    teleport player to {_loc}
                                 else:
                                    notify(player, "Motion", "failed")
                                    verbose(player, "Motion", "B*", "deltaY: %difference between {_y1} and {_y2}%")
                                    teleport player to {_loc}

#--------------------------------------------------------
#
#             A N T I    S P R I N T
#
#--------------------------------------------------------

on any move:
   if player is sprinting:
      if player's food level < 3:
         if {ANAYO.C.SPRINT.A} is true:
            notify(player, "Sprint", "failed")