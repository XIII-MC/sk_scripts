options:

#Main Options 

   #Anticheat prefix
   guard: &3&lGUARD &8Â»&f

   #Guard Version !DO NOT TOUCH!#
   Version: v0.4

#Punishements

   #Auto-Ban
   Ban: false #This will autoban the player with the command "/guard ban %player% 7 day"
   BanMsg: &c%arg 2%&f has been removed for &cUnfair Advantage #The message that will be broadcasted on the server chat when a player gets banned by GUARD

   #Auto-Kick
   Kick: false #This will autokick the player with the command "/guard kick %player%"
   KickMsg: &c%arg 2%&f has been removed for &cUnfair Advantage #The message that will be broadcasted on the server chat when a player gets kicked by GUARD

#LagBack options

   #LagBack / TeleportBack
   LagBackInstant: false #This is for lowjump / highjump checks, they will teleport back the player even before sending an alert
   LagBack: false #This will lagback / teleport back the player whenever the player flags the anticheat

#Misc

   #Disabled Worlds 
   Whitelisted_Worlds: example_world #Here you can put your worlds where you want the anticheat to be disabled, like your lobby if you have launch pads

   #TestMode
   TestMode: false #This is for tests or test servers only , you don't need it on your production server

#Permissions

   MainPermission: GUARD.commands #Permissions for /guard
   GUARDNotifyPermission: GUARD.alerts #Permissions to recive alerts

   #You can give your self the perm "GUARD.*" to have the 2 permissions

#AutoClicker Checks

   #AutoClicker A (Left):
   MaxLeftCPS: 15 #The "CPS" counter is cleared around every 3 seconds
   AutoClickerLeft_Status: &aWorking 
   AutoClickerLeft_PunishVL: 10 
   AutoClickerLeft_Buffer: 0
   AutoClickerLeft_BufferAdd: 0

   #AutoClicker B (Right):
   MaxRightCPS: 15 #The "CPS" counter is cleared around every 3 seconds
   AutoClickerRight_Status: &aWorking
   AutoClickerRight_PunishVL: 10 
   AutoClickerRight_Buffer: 0
   AutoClickerRight_BufferAdd: 0

#Reach Check 
   
   #Reach A
   ReachA_Status: &aWorking
   ReachA_PunishVL: 3
   ReachA_BufferAdd: 1
   ReachA_Buffer: 1
   MaxReachA: 3

   #Reach B
   ReachB_Status: &aWorking
   ReachB_PunishVL: 3
   ReachB_BufferAdd: 1
   ReachB_Buffer: 1
   MaxReachB: -3

   #Reach C
   ReachC_Status: &aWorking
   ReachC_PunishVL: 3
   ReachC_BufferAdd: 1
   ReachC_Buffer: 1
   MaxReachC: 3

#Aim Checks

   #Aim A1
   AimA1_Status: &aWorking 
   AimA1_PunishVL: 4
   AimA1_Buffer: 6
   AimA1_BufferAdd: 1

   #Aim A2
   AimA2_Status: &aWorking
   AimA2_PunishVL: 1
   AimA2_Buffer: 2.5
   AimA2_BufferAdd: 0.5

   #Aim A3 
   AimA3_Status: &aWorking 
   AimA3_PunishVL: 4
   AimA3_BufferAdd: 1
   AimA3_Buffer: 16

   #Aim A4
   AimA4_Status: &aWorking 
   AimA4_PunishVL: 4
   AimA4_Buffer: 2
   AimA4_BufferAdd: 1

   #Aim A5
   AimA5_Status: &aWorking 
   AimA5_PunishVL: 2
   AimA5_Buffer: 12
   AimA5_BufferAdd: 1

#KillAura Checks

   #KillAura A:
   KillAuraA_Buffer: 9 #How many hits can the player deal without looking at his target (4/6 is recommanded)
   KillAuraA_BufferAdd: 1
   KillAuraA_Status: &aWorking
   KillAuraA_PunishVL: 3

   #KillAura B
   KillAuraB_Status: &aWorking
   KillAuraB_PunishVL: 3
   KillAuraB_Buffer: 2
   KillAuraB_BufferAdd: 1

   #KillAura C:
   KillAuraC_Buffer: 6 #How many hits can the player deal in 1 second 
   KillAuraC_BufferAdd: 1
   KillAuraC_Status: &aWorking
   KillAuraC_PunishVL: 5

#Inventory Checks

   #Inventory A
   InventoryA_Status: &aWorking
   InventoryA_PunishVL: 5
   InventoryA_BufferAdd: 0
   InventoryA_Buffer: 0

   #Inventory B
   InventoryB_Status: &aWorking
   InventoryB_PunishVL: 1
   InventoryB_BufferAdd: 0
   InventoryB_Buffer: 0

   #Inventory C
   InventoryC_Status: &aWorking
   InventoryC_PunishVL: 1
   InventoryC_BufferAdd: 0
   InventoryC_Buffer: 0

   #Inventory D
   InventoryD_Status: &aWorking
   InventoryD_PunishVL: 1
   InventoryD_BufferAdd: 0
   InventoryD_Buffer: 0

#Scaffold Checks

   #Scaffold A 
   ScaffoldA_Status: &aWorking 
   ScaffoldA_PunishVL: 3
   ScaffoldA_Buffer: 2
   ScaffoldA_BufferAdd: 1

   #Scaffold B
   ScaffoldB_Status: &aWorking
   ScaffoldB_PunishVL: 5
   ScaffoldB_Buffer: 2
   ScaffoldB_BufferAdd: 1

   #Scaffold C 
   ScaffoldC_Status: &aWorking
   ScaffoldC_PunishVL: 3
   ScaffoldC_Buffer: 0
   ScaffoldC_BufferAdd: 0

   #Scaffold D
   ScaffoldD_Status: &aWorking
   ScaffoldD_PunishVL: 8
   ScaffoldD_Buffer: 4
   ScaffoldD_BufferAdd: 1

#Interact Checks
   
   #Interact A
   InteractA_Status: &aWorking
   InteractA_PunishVL: 1
   InteractA_Buffer: 0
   InteractA_BufferAdd: 0

   #Interact B 
   InteractB_Status: &aWorking 
   InteractB_PunishVL: 1
   InteractB_Buffer: 0
   InteractB_BufferAdd: 0

   #Interact C 
   InteractC_Status: &aWorking 
   InteractC_PunishVL: 1
   InteractC_Buffer: 0
   InteractC_BufferAdd: 0

#Speed Checks

   #Speed A1 
   SpeedA1_Status: &aWorking
   SpeedA1_PunishVL: 5
   SpeedA1_BufferAdd: 0.5
   SpeedA1_Buffer: 5

   #Speed A2 
   SpeedA2_Status: &aWorking 
   SpeedA2_PunishVL: 5
   SpeedA2_BufferAdd: 0.5
   SpeedA2_Buffer: 2

   #Speed A3
   SpeedA3_Status: &aWorking 
   SpeedA3_PunishVL: 5
   SpeedA3_BufferAdd: 0.5
   SpeedA3_Buffer: 5

   #Speed B1 
   SpeedB1_Status: &aWorking 
   SpeedB1_PunishVL: 5 
   SpeedB1_BufferAdd: 0.5
   SpeedB1_Buffer: 1.5

   #Speed B2 
   SpeedB2_Status: &aWorking 
   SpeedB2_PunishVL: 5
   SpeedB2_BufferAdd: 0.5
   SpeedB2_Buffer: 2.5

   #Speed B3 
   SpeedB3_Status: &aWorking
   SpeedB3_PunishVL: 5
   SpeedB3_BufferAdd: 0.5
   SpeedB3_Buffer: 1.5

   #Speed B4
   SpeedB4_Status: &aWorking 
   SpeedB4_PunishVL: 5
   SpeedB4_Buffer: 5
   SpeedB4_BufferAdd: 0.5

   #Speed B5 
   SpeedB5_Status: &aWorking 
   SpeedB5_PunishVL: 5
   SpeedB5_Buffer: 0.5
   SpeedB5_BufferAdd: 0.5

   #Speed C1 
   SpeedC1_Status: &aWorking
   SpeedC1_PunishVL: 5
   SpeedC1_BufferAdd: 0.5
   SpeedC1_Buffer: 3

   #Speed C2 
   SpeedC2_Status: &aWorking 
   SpeedC2_PunishVL: 5
   SpeedC2_BufferAdd: 0.5
   SpeedC2_Buffer: 3.5

   #Speed C3
   SpeedC3_Status: &aWorking 
   SpeedC3_PunishVL: 5
   SpeedC3_BufferAdd: 0.5
   SpeedC3_Buffer: 3.5

   #Speed D1 
   SpeedD1_Status: &aWorking 
   SpeedD1_PunishVL: 5 
   SpeedD1_BufferAdd: 1
   SpeedD1_Buffer: 6

   #Speed D2 
   SpeedD2_Status: &aWorking 
   SpeedD2_PunishVL: 5
   SpeedD2_BufferAdd: 1
   SpeedD2_Buffer: 9

   #Speed D3 
   SpeedD3_Status: &aWorking
   SpeedD3_PunishVL: 5
   SpeedD3_BufferAdd: 1
   SpeedD3_Buffer: 6

#Nofall Check 
   
   #Nofall A 
   NofallA_Status: &aWorking 
   NofallA_PunishVL: 3
   NofallA_Buffer: 3
   NofallA_BufferAdd: 1

#Jesus Checks

   #Jesus A 
   JesusA_Status: &aWorking
   JesusA_PunishVL: 5
   JesusA_BufferAdd: 1
   JesusA_Buffer: 10
   
   #Jesus B 
   JesusB_Status: &aWorking
   JesusB_PunishVL: 5
   JesusB_BufferAdd: 1
   JesusB_Buffer: 1

   #Jesus C 
   JesusC_Status: &aWorking
   JesusC_PunishVL: 3
   JesusC_BufferAdd: 0.5
   JesusC_Buffer: 1

#Motion Checks 

   #Motion A1 
   MotionA1_Status: &aWorking 
   MotionA1_PunishVL: 3 
   MotionA1_BufferAdd: 0
   MotionA1_Buffer: 0

   #Motion A2 
   MotionA2_Status: &aWorking
   MotionA2_PunishVL: 5
   MotionA2_BufferAdd: 0.5
   MotionA2_Buffer: 6

   #Motion A3
   MotionA3_Status: &aWorking 
   MotionA3_PunishVL: 3
   MotionA3_BufferAdd: 0.5
   MotionA3_Buffer: 2

   #Motion A4
   MotionA4_Status: &aWorking
   MotionA4_PunishVL: 5
   MotionA4_BufferAdd: 0.5
   MotionA4_Buffer: 2.5

   #Motion A5
   MotionA5_Status: &aWorking 
   MotionA5_PunishVL: 3
   MotionA5_Buffer: 8
   MotionA5_BufferAdd: 1

   #Motion A6 
   MotionA6_Status: &aWorking
   MotionA6_PunishVL: 5
   MotionA6_Buffer: 5.5
   MotionA6_BufferAdd: 0.5

   #Motion A7 
   MotionA7_Status: &aWorking 
   MotionA7_PunishVL: 5
   MotionA7_Buffer: 9
   MotionA7_BufferAdd: 1

   #Motion A8
   MotionA8_Status: &aWorking 
   MotionA8_PunishVL: 5
   MotionA8_Buffer: 14
   MotionA8_BufferAdd: 1

   #Motion A9 
   MotionA9_Status: &aWorking
   MotionA9_PunishVL: 10
   MotionA9_Buffer: 7
   MotionA9_BufferAdd: 1

   #Motion B1 
   MotionB1_Status: &aWorking
   MotionB1_PunishVL: 3
   MotionB1_Buffer: 1
   MotionB1_BufferAdd: 1

   #Motion B2
   MotionB2_Status: &aWorking 
   MotionB2_PunishVL: 3
   MotionB2_BufferAdd: 2.5
   MotionB2_Buffer: 0.5

   #Motion B3
   MotionB3_Status: &aWorking
   MotionB3_PunishVL: 3
   MotionB3_Buffer: 1
   MotionB3_BufferAdd: 1

#FastClimb Check
   
   #FastClimb A
   FastClimbA_PunishVL: 3
   FastClimbA_Status: &aWorking
   FastClimbA_Buffer: 0
   FastClimbA_BufferAdd: 0

#NoSlow Check

   #NoSlow A
   NoSlowA_Status: &aWorking
   NoSlowA_PunishVL: 3
   NoSlowA_BufferAdd: 0.5
   NoSlowA_Buffer: 1

#NoWeb Checks

   #NoWeb A
   NoWebA_Status: &aWorking 
   NoWebA_PunishVL: 5 
   NoWebA_Buffer: 4
   NoWebA_BufferAdd: 0.5

#Timer Check 

   #Timer A
   TimerA_Status: &cBuggy
   TimerA_Buffer: 0
   TimerA_BufferAdd: 0
   TimerA_PunishVL: 20

on break:
   remove 1 from {GUARD::%player%::CPS.L}
on leftclick:
  add 1 to {GUARD::%player%::CPS.L}
  GA_clearly(player, "AutoClicker", "A", "{@AutoClickerLeft_Status}", {@AutoClickerLeft_PunishVL}, 1 ,"%{cpsL::%player%}%", {@AutoClickerLeft_BufferAdd}, {@AutoClickerLeft_Buffer}) if {GUARD::%player%::CPS.L} >= {@MaxLeftCPS}
on rightclick:
    add 1 to {GUARD::%player%::CPS.R}
    GA_clearly(player, "AutoClicker", "B", "{@AutoClickerRight_Status}", {@AutoClickerRight_PunishVL}, 1, "%{cpsR::%player%}%", {@AutoClickerLeft_BufferAdd}, {@AutoClickerLeft_Buffer}) if {GUARD::%player%::CPS.R} >= {@MaxRightCPS}

on any move:
   difference between {GUARD::%player%::ATTACK} and now < 0.5 second
   set {_cinematic} to mod(getDeltaPitch(player, 2), 1)
   GA_clearly(player, "Aim", "A-2", "{@AimA2_Status}", {@AimA2_PunishVL}, 1, "%{_cinematic}%", {@AimA2_BufferAdd}, {@AimA2_Buffer}) if {_cinematic} = 0.1 or 0.2 or 0.3 or 0.4 or 0.5 or 0.6 or 0.7 or 0.8 or 0.9 or 1
   delete {GUARD::%player%::AIM.A-2} if {_cinematic} != 0.1 or 0.2 or 0.3 or 0.4 or 0.5 or 0.6 or 0.7 or 0.8 or 0.9 or 1
   set {_gcd} to getGCD(getDeltaPitch(player, 1) * 16777216, getDeltaPitch(player, 2) * 16777216)
   set {_idk} to sqrt(player's pitch ^ getDeltaPitch(player, 1))
   set {_lmc} to mod({_gcd}, getDeltaPitch(player, 2))
   if getDeltaYaw(player, 2) != 0:
      GA_clearly(player, "Aim", "A-5", "{@AimA5_Status}", {@AimA5_PunishVL}, 1, "%{_idk}%", {@AimA5_BufferAdd}, {@AimA5_Buffer}) if {_idk} <= 0
      GA_clearly(player, "Aim", "A-3", "{@AimA3_Status}", {@AimA3_PunishVL}, 1, "%{_lmc}%", {@AimA3_BufferAdd}, {@AimA3_Buffer}) if {_lmc} <= 0
      GA_clearly(player, "Aim", "A-4", "{@AimA4_Status}", {@AimA4_PunishVL}, 1, "%{_lmc}%", {@AimA4_BufferAdd}, {@AimA4_Buffer}) if {_lmc} > 1
   if {GUARD::%player%::AIM.A-4} >= 1:
      remove 1 from {GUARD::%player%::AIM.A-4} if {_lmc} < 1
   if {GUARD::%player%::AIM.A-3} >= 1:
      remove 1 from {GUARD::%player%::AIM.A-3} if {_lmc} > 0
   delete {GUARD::%player%::AIM.A-5} if {_idk} > 0
   {_cinematic} > 0.03
   if {_gcd} > 0:
      GA_clearly(player, "Aim", "A-1", "{@AimA1_Status}", {@AimA1_PunishVL}, 1, "%{_gcd}%", {@AimA1_BufferAdd}, {@AimA1_Buffer}) if {_gcd} < 400000
   delete {GUARD::%player%::AIM.A-1} if {_gcd} > 400000
on damage:
  delete {GUARD::%victim%::INVOPEN}
  damage cause is not thorns
  attacker is a player
  projectile doesn't exist
  set {GUARD::%attacker%::ATTACK} to now
  set {_yans} to distance between victim's location and attacker's location
  set {_yanx} to difference between victim's x location and attacker's x location
  set {_yanz} to difference between victim's z location and attacker's z location
  set {_yany} to difference between victim's y location and attacker's y location
  if {_yany} <= 0:
    set {_anx} to ({_yanx} - 0.40009001)
    set {_anz} to ({_yanz} - 0.40009001)
    set {_ans} to ({_yans} - 0.53588401)
  GA_clearly(attacker, "Reach", "A", "{@ReachA_Status}", {@ReachA_PunishVL}, 1, "%{_ans}%", {@ReachA_BufferAdd}, {@ReachA_Buffer}) if {_anx} or {_anz} > {@MaxReachA}
  delete {GUARD::%attacker%::REACH.A} if {_anx} or {_anz} < 3
  GA_clearly(attacker, "Reach", "C", "{@ReachC_Status}", {@ReachC_PunishVL}, 1, "%{_ans}%", {@ReachC_BufferAdd}, {@ReachC_Buffer}) if {_ans} > {@MaxReachC}
  delete {GUARD::%attacker%::REACH.C} if {_anx} or {_anz} < 3
  GA_clearly(attacker, "Reach", "B", "{@ReachB_Status}", {@ReachB_PunishVL}, 1, "%{_ans}%", {@ReachB_BufferAdd}, {@ReachB_Buffer}) if {_anx} or {_anz} < {@MaxReachB}
  delete {GUARD::%attacker%::REACH.B} if {_anx} or {_anz} > 3

on damage:
  damage cause is not thorns
  attacker is a player
  projectile doesn't exist
  GA_clearly(attacker, "KillAura", "A", "{@KillAuraA_Status}", {@KillAuraA_PunishVL}, 1, "%{InvalidEntity::%attacker%}%", {@KillAuraA_BufferAdd}, {@KillAuraA_Buffer}) if attacker's targeted entity is not set
  delete {GUARD::%attacker%::KILLAURA.A} if attacker's targeted entity is set
  if attacker's targeted block is not a flower, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, short grass, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, player head, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand:
    attacker's targeted block is not water or lava
    GA_clearly(attacker, "KillAura", "B", "{@KillAuraB_Status}", {@KillAuraB_PunishVL}, 1, "%attacker's target block%", {@KillAuraB_BufferAdd}, {@KillAuraB_Buffer}) if distance between attacker and victim > distance between attacker and attacker's targeted block
  delete {GUARD::%attacker%::KILLAURA.B} if distance between attacker and victim < distance between attacker and attacker's targeted block
  GA_clearly(attacker, "KillAura", "C", "{@KillAuraC_Status}", {@KillAuraC_PunishVL}, 1, "NaN", {@KillAuraC_BufferAdd}, {@KillAuraC_Buffer}) 

on inventory click:
  GA_Requirements(player) = true
  set {GUARD::%player%::INVOPEN} to now 
  GA_clearly(player, "Inventory", "A", "{@InventoryA_Status}", {@InventoryA_PunishVL}, 1, "NaN", {@InventoryA_BufferAdd}, {@InventoryA_Buffer}) if player is sprinting
  GA_clearly(player, "Inventory", "B", "{@InventoryB_Status}", {@InventoryB_PunishVL}, 1, "NaN", {@InventoryB_BufferAdd}, {@InventoryB_Buffer}) if player is sneaking
on sprint toggle:
  if {GUARD::%player%::INVOPEN} is set:
    GA_clearly(player, "Inventory", "C", "{@InventoryC_Status}", {@InventoryC_PunishVL}, 1, "NaN", {@InventoryC_BufferAdd}, {@InventoryC_Buffer}) if difference between {GUARD::%player%::INVOPEN} and now > 0.5 second
on inventory close:
  clear {GUARD::%player%::INVOPEN}
on any move:
  GA_Requirements(player) = true 
  GA_EffectsRequirements(player) = true
  GA_Ice(player) > 1 second 
  GA_CobWeb(player) > 1 second
  GA_Slime(player) > 1 second
  {GUARD::%player%::INVOPEN} is set
  GA_clearly(player, "Inventory", "D", "{@InventoryD_Status}", {@InventoryD_PunishVL}, 1, "NaN", {@InventoryD_BufferAdd}, {@InventoryD_Buffer}) if difference between {invop.%{_p}%} and now > 1 second


on block place:
  set {GUARD::%player%::BLOCKPLACE.TIME} to now
  block under event-block is air or void air
  player's gamemode is not creative or spectator
  if y coordinate of event-block < y coordinate of player:
    set {_Pitch} to getDeltaPitch(player, 2)
    GA_clearly(player, "Scaffold", "D", "{@ScaffoldD_Status}", {@ScaffoldD_PunishVL}, 1, "%{_Pitch}%", {@ScaffoldD_BufferAdd}, {@ScaffoldD_BufferAdd}) if {_Pitch} > 2
    delete {GUARD::%player%::SCAFFOLD.D} if {_Pitch} < 2
    block above event-block is air:
      GA_clearly(player, "Scaffold", "A", "{@ScaffoldA_Status}", {@ScaffoldA_PunishVL}, 1, "%player's pitch%", {@ScaffoldA_BufferAdd}, {@ScaffoldA_BufferAdd}) if player's pitch is between 90 and 88.75
      delete {GUARD::%player%::SCAFFOLD.A} if player's pitch < 88.75
    GA_clearly(player, "Scaffold", "B", "{@ScaffoldB_Status}", {@ScaffoldB_PunishVL}, 1, "NaN", {@ScaffoldB_BufferAdd}, {@ScaffoldB_BufferAdd}) if event-block is not player's targeted block
    delete {GUARD::%player%::SCAFFOLD.B} if event-block is player's targeted block
    if player is sprinting:
      GA_clearly(player, "Scaffold", "C", "{@ScaffoldC_Status}", {@ScaffoldC_PunishVL}, 1, "%player's pitch%", {@ScaffoldC_BufferAdd}, {@ScaffoldC_BufferAdd}) if player's pitch is between 90 and 80
      delete {GUARD::%player%::SCAFFOLD.C} if player's pitch < 80

on break:
  player's targeted block is not a flower, grass, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand
  GA_clearly(player, "Interact", "A", "{@InteractA_Status}", {@InteractA_PunishVL}, 1, "NaN", {@InteractA_BufferAdd}, {@InteractA_Buffer}) if "%event-block%" is not "%targeted block%"
on left click:
  event-block is cake or any bed or dragon egg
  player's targeted block is not a flower, grass, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand
  GA_clearly(player, "Interact", "B", "{@InteractB_Status}", {@InteractB_PunishVL}, 1, "NaN", {@InteractB_BufferAdd}, {@InteractB_Buffer}) if clicked block is not targeted block
on right click:
  event-block is cake or any bed or dragon egg
  player's targeted block is not a flower, grass, skeleton skull, player skull, zombie skull, creeper skull, wither skeleton skull, string, tripwire string, tripwire hook, button, banner, sign, flower pot, lever, door, trapdoor, iron trapdoor, pressure plate, slab, carpet, iron bar, fence, fence gate, glass pane, stained glass pane, stairs, slabs, vines, ladder, end portal, redstone torch, torch, wall torch, chest, ender chest, trapped chest or brewing stand
  GA_clearly(player, "Interact", "C", "{@InteractC_Status}", {@InteractC_PunishVL}, 1, "NaN", {@InteractC_BufferAdd}, {@InteractC_Buffer}) if clicked block is not targeted block

on any move:
  GA_Ice(player) > 1 second
  set {_SpeedB4} to sqrt(getDeltaX(player, 1) ^ 2 + getDeltaZ(player, 1) ^ 2)
  set {_SpeedB4} to roundTo({_SpeedB4}, 7) * 10000000
  if {_SpeedB4} > 1000000:
    {_SpeedB4} != 1500000
    {_SpeedB4} / 100 = round({_SpeedB4} / 100)
    GA_clearly(player, "Speed", "B-4", "{@SpeedB4_Status}", {@SpeedB4_PunishVL}, 1, "%{_SpeedB4}%", {@SpeedB4_BufferAdd}, {@SpeedB4_Buffer})
  else:
    delete {GUARD::%player%::SPEED.B-4}

on any move:
  player's walk speed < 0.21
  GA_Requirements(player) = true
  GA_Block(player) > 1 second
  getLastDamage(player) > 0.6 second
  set {_x} to getDeltaX(player, 1)
  set {_z} to getDeltaZ(player, 1)
  set {_speedloc} to getDeltaLoc(player, 1, true)
  if {_x} > {_z}:
    set {_speed} to {_x}
  if {_z} > {_x}:
    set {_speed} to {_z}
  if {_x} = {_z}:
    set {_speed} to {_x}
  set {_speed20} to ({_speed} * 20)
  GA_AirAbove(player) = false
  GA_Ice(player) > 1 second
  GA_clearly(player, "Speed", "B-5", "{@SpeedB5_Status}", {@SpeedB5_PunishVL}, 1, "%{_speed}%", {@SpeedB5_BufferAdd}, {@SpeedB5_Buffer}) if {_speed} > 0.63
  if player doesn't have speed:
    GA_clearly(player, "Speed", "B-1", "{@SpeedB1_Status}", {@SpeedB1_PunishVL}, 1, "%{_speed}%", {@SpeedB1_BufferAdd}, {@SpeedB1_Buffer}) if {_speed} > 0.353
    delete {GUARD::%player%::SPEED.B-1} if {_speed} < 0.353
    GA_clearly(player, "Speed", "B-2", "{@SpeedB2_Status}", {@SpeedB2_PunishVL}, 1, "%{_speed20}%", {@SpeedB2_BufferAdd}, {@SpeedB2_Buffer}) if {_speed20} > 6.82
    delete {GUARD::%player%::SPEED.B-2} if {_speed20} < 6.82
    GA_clearly(player, "Speed", "B-3", "{@SpeedB3_Status}", {@SpeedB3_PunishVL}, 1, "%{_speedloc}%", {@SpeedB3_BufferAdd}, {@SpeedB3_Buffer}) if {_speedloc} > 0.353
    delete {GUARD::%player%::SPEED.B-3} if {_speedloc} < 0.353
    if block 0.1 under player is not air or void air:
      GA_clearly(player, "Speed", "A-1", "{@SpeedA1_Status}", {@SpeedA1_PunishVL}, 1, "%{_speed}%", {@SpeedA1_BufferAdd}, {@SpeedA1_Buffer}) if {_speed} > 0.29
      delete {GUARD::%player%::SPEED.A-1} if {_speed} < 0.3
      GA_clearly(player, "Speed", "A-2", "{@SpeedA2_Status}", {@SpeedA2_PunishVL}, 1, "%{_speed20}%", {@SpeedA2_BufferAdd}, {@SpeedA2_Buffer}) if {_speed20} > 6.82
      delete {GUARD::%player%::SPEED.A-2} if {_speed20} < 5.512233
      GA_clearly(player, "Speed", "A-3", "{@SpeedA3_Status}", {@SpeedA3_PunishVL}, 1, "%{_speedloc}%", {@SpeedA3_BufferAdd}, {@SpeedA3_Buffer}) if {_speedloc} > 0.29
      delete {GUARD::%player%::SPEED.A-3} if {_speedloc} < 0.3
    else:
      delete {GUARD::%player%::SPEED.A-1}
      delete {GUARD::%player%::SPEED.A-2}
      delete {GUARD::%player%::SPEED.A-3}
  else:
    GA_clearly(player, "Speed", "C-1", "{@SpeedC1_Status}", {@SpeedC1_PunishVL}, 1, "%{_speed}%", {@SpeedC1_BufferAdd}, {@SpeedC1_Buffer}) if {_speed} > 0.353
    delete {GUARD::%player%::SPEED.C-1} if {_speed} < 0.353
    GA_clearly(player, "Speed", "C-2", "{@SpeedC2_Status}", {@SpeedC2_PunishVL}, 1, "%{_speed20}%", {@SpeedC2_BufferAdd}, {@SpeedC2_Buffer}) if {_speed20} > 6.82
    delete {GUARD::%player%::SPEED.C-2} if {_speed20} < 6.82
    GA_clearly(player, "Speed", "C-3", "{@SpeedC3_Status}", {@SpeedC3_PunishVL}, 1, "%{_speedloc}%", {@SpeedC3_BufferAdd}, {@SpeedC3_Buffer}) if {_speedloc} > 0.34085
    delete {GUARD::%player%::SPEED.C-3} if {_speedloc} < 0.34085
    if block 0.1 under player is not air or void air:
      GA_clearly(player, "Speed", "D-1", "{@SpeedD1_Status}", {@SpeedD1_PunishVL}, 1, "%{_speed}%", {@SpeedD1_BufferAdd}, {@SpeedD1_Buffer}) if {_speed} > 0.34
      delete {GUARD::%player%::SPEED.D-1} if {_speed} < 0.34
      GA_clearly(player, "Speed", "D-2", "{@SpeedD2_Status}", {@SpeedD2_PunishVL}, 1, "%{_speed20}%", {@SpeedD2_BufferAdd}, {@SpeedD2_Buffer}) if {_speed20} > 6.75
      delete {GUARD::%player%::SPEED.D-2} if {_speed20} < 6.75
      GA_clearly(player, "Speed", "D-3", "{@SpeedD3_Status}", {@SpeedD3_PunishVL}, 1, "%{_speedloc}%", {@SpeedD3_BufferAdd}, {@SpeedD3_Buffer}) if {_speedloc} > 0.34
      delete {GUARD::%player%::SPEED.D-3} if {_speedloc} < 0.34
    else:
      delete {GUARD::%player%::SPEED.D-1}
      delete {GUARD::%player%::SPEED.D-2}
      delete {GUARD::%player%::SPEED.D-3}

on any move:
  player is on ground:
    block at player is air or void air
    block under player is air or void air
    set {_nofallcount} to 0
    GA_InAir(player) = true
    GA_InAirFull(player) = false:
      add 1 to {_nofallcount}
    if {_nofallcount} < 1:
      GA_clearly(player, "NoFall", "A", "{@NofallA_Status}", {@NofallA_PunishVL}, 1, "NaN", {@NofallA_BufferAdd}, {@NofallA_Buffer})
    if {_nofallcount} > 0:
      stop
  else:
    delete {GUARD::%player%::NOFALL.A}

on any move:
  GA_Requirements(player) = true
  GA_OnLiquid(player) = true
  GA_OnLiquidFull(player) = true
  if player is on ground:
    GA_clearly(player, "Jesus", "B", "{@JesusB_Status}", {@JesusB_PunishVL}, 1, "NaN", {@JesusB_BufferAdd}, {@JesusB_Buffer})  
  delete {GUARD::%player%::JESUS.B} if player is not on ground   
  block at player is air   
  GA_clearly(player, "Jesus", "A", "{@JesusA_Status}", {@JesusA_PunishVL}, 1, "NaN", {@JesusA_BufferAdd}, {@JesusA_Buffer})

on any move:
  GA_Requirements(player) = true
  GA_OnLiquid(player) = true
  GA_OnLiquidFull(player) = true
  if {GUARD::%player%::WATERPOS} = y location of player:
    "%y location of player%" contains "."
    "%y location of player%" does not contain ".06"
    GA_clearly(player, "Jesus", "C", "{@JesusC_Status}", {@JesusC_PunishVL}, 1, "NaN", {@JesusC_BufferAdd}, {@JesusC_Buffer}) if player is not swimming
    stop
  set {GUARD::%player%::WATERPOS} to y location of player
  clear {GUARD::%player%::JESUS.C}

on any move:
  GA_Requirements(player) = true
  GA_EffectsRequirements(player) = true
  getLastDamage(player) > 1 second
  GA_Block(player) > 1 second
  GA_Slime(player) > 4 second
  set {_y} to getDeltaY2(player, 2)
  if "%{_y}%" contains ".":
    GA_InLiquid(player) > 1 second
    GA_clearly(player, "Motion", "B-1", "{@MotionB1_Status}", {@MotionB1_PunishVL}, 1, "%{_y}%", 0, 0) if {_y} > 0.8
    GA_clearly(player, "Motion", "B-1", "{@MotionB1_Status}", {@MotionB1_PunishVL}, 1, "%{_y}%", {@MotionB1_BufferAdd}, {@MotionB1_Buffer}) if {_y} is between 0.42 and 0.5
  if GA_Climb(player) < 0.2 second:
    block 2 under player is ladder or vines or scaffolding or twisting vines
    block at player is ladder or vines or scaffolding or twisting vines
    GA_clearly(player, "FastClimb", "A", "{@FastClimbA_Status}", {@FastClimbA_PunishVL}, 1, "%{_y}%", {@FastClimbA_BufferAdd}, {@FastClimbA_Buffer}) if {_y} > 0.1177
  GA_Climb(player) > 1 second
  GA_InLiquid(player) > 1 second
  GA_CobWeb(player) > 1 second
  GA_clearly(player, "Motion", "A-6", "{@MotionA6_Status}", {@MotionA6_PunishVL}, 1, "%{_y}%", {@MotionA6_BufferAdd}, {@MotionA6_Buffer}) if {_y} > 0
  delete {GUARD::%player%::MOTION.A-6} if {_y} < 0

on any move:
  GA_Requirements(player) = true 
  GA_EffectsRequirements(player) = true
  getLastDamage(player) > 1 second
  set {_y} to (getDeltaY2(player, 2) * 20)
  GA_InAirFull(player) = true
  {_y} < 0    
  GA_clearly(player, "Motion", "A-8", "{@MotionA8_Status}", {@MotionA8_PunishVL}, 1, "%{_y}%", {@MotionA8_BufferAdd}, {@MotionA8_Buffer}) if {_y} > -20

on any move:
  GA_Requirements(player) = true
  GA_InLiquid(player) > 1 second
  GA_Slime(player) > 1 second
  player is not on ground
  block at player is air
  set {_y} to getDeltaY(player, 2)     
  GA_clearly(player, "Motion", "A-7", "{@MotionA7_Status}", {@MotionA7_PunishVL}, 3, "0", {@MotionA7_BufferAdd}, {@MotionA7_Buffer}) if {_y} = 0
  delete {GUARD::%player%::MOTION.A-7} if {_y} != 0

on any move:
  GA_Requirements(player) = true
  GA_EffectsRequirements(player) = true
  GA_Block(player) > 1 second 
  GA_InLiquid(player) > 1 second
  GA_Climb(player) > 1 second
  GA_CobWeb(player) > 2 second
  GA_Ice(player) > 1 second
  set {_diffy} to difference between y location of player and {GUARD::%player%::YLOC}
  set {GUARD::%player%::YLOC} to y location of player
  if {_diffy} != 0:
    if "%{_diffy}%" = "%{GUARD::%player%::LASTYPOS}%":
      GA_clearly(player, "Motion", "A-5", "{@MotionA5_Status}", {@MotionA5_PunishVL}, 1, "%{_diffy}%", {@MotionA5_BufferAdd}, {@MotionA5_Buffer}) if "%{_diffy}%" != "0.08" 
    else:
      set {GUARD::%player%::LASTYPOS} to {_diffy}
  delete {GUARD::%player%::MOTION.A-5} if "%{_diffy}%" = "0.08"

on any move:
  GA_Requirements(player) = true
  GA_Block(player) > 1 second
  GA_Place(player) > 2 second
  GA_Slime(player) > 4 second
  set {GUARD::%player%::SPIDERTHREE} to {GUARD::%player%::SPIDERTWO}
  set {GUARD::%player%::SPIDERTWO} to {GUARD::%player%::SPIDERONE}
  set {GUARD::%player%::SPIDERONE} to spider(player)
  set {GUARD::%player%::SPIDER1} to player's y location
  set {GUARD::%player%::SPIDER2} to ({GUARD::%player%::SPIDERY} - 0.08) * 0.9800000190734863
  set {GUARD::%player%::SPIDERY} to {GUARD::%player%::SPIDER1} - {GUARD::%player%::SPIDER3}
  if {GUARD::%player%::SPIDERONE} is true:
    if {GUARD::%player%::SPIDERTWO} is true:
      if {GUARD::%player%::SPIDERTHREE} is true: 
        if {GUARD::%player%::SPIDERY} > 0:
          GA_clearly(player, "Motion", "A-9", "{@MotionA9_Status}", {@MotionA9_PunishVL}, 1, "%{GUARD::%player%::SPIDERY}%", {@MotionA9_BufferAdd}, {@MotionA9_Buffer}) if {GUARD::%player%::SPIDERY} > 0
  if {GUARD::%player%::MOTION.A-9} >= 1:
    remove 1 from {GUARD::%player%::MOTION.A-9} if {GUARD::%player%::SPIDERY} < 0
  set {GUARD::%player%::SPIDER3} to player's y location 

on any move:
  GA_Requirements(player) = true 
  GA_EffectsRequirements(player) = true
  GA_Block(player) > 1 seconds
  GA_Slime(player) > 4 second
  GA_Place(player) > 2 second
  GA_CobWeb(player) > 1 second
  set {GUARD::%player%::MOTIONATHREE} to {GUARD::%player%::MOTIONATWO}
  set {GUARD::%player%::MOTIONATWO} to {GUARD::%player%::MOTIONAONE}
  set {GUARD::%player%::MOTIONAONE} to GA_InAirFull(player)
  set {GUARD::%player%::MOTIONAYPOS} to player's y location
  set {GUARD::%player%::MOTIONPREDICTION} to ({GUARD::%player%::MOTIONAY} - 0.08) * 0.9800000190734863
  set {GUARD::%player%::MOTIONAY} to {GUARD::%player%::MOTIONAYPOS} - {GUARD::%player%::MOTIONAYPOS2}
  if {GUARD::%player%::MOTIONAONE} is true:
    if {GUARD::%player%::MOTIONATWO} is true:
      if {GUARD::%player%::MOTIONATHREE} is true: 
        GA_clearly(player, "Motion", "A-1", "{@MotionA1_Status}", {@MotionA1_PunishVL}, 1, "%{GUARD::%player%::MOTIONAYPOS}%", {@MotionA1_BufferAdd}, {@MotionA1_Buffer}) if {GUARD::%player%::MOTIONAYPOS} = 0
        if {GUARD::%player%::MOTIONAY} < 0.42:
          GA_clearly(player, "Motion", "A-2", "{@MotionA2_Status}", {@MotionA2_PunishVL}, 1, "%{GUARD::%player%::MOTIONAY}%", {@MotionA2_BufferAdd}, {@MotionA2_Buffer}) if {GUARD::%player%::MOTIONAY} > 0
        GA_clearly(player, "Motion", "A-3", "{@MotionA3_Status}", {@MotionA3_PunishVL}, 1, "%{GUARD::%player%::MOTIONAY}%", {@MotionA3_BufferAdd}, {@MotionA3_Buffer}) if {GUARD::%player%::MOTIONAY} > {GUARD::%player%::MOTIONPREDICTION}
        GA_clearly(player, "Motion", "A-4", "{@MotionA4_Status}", {@MotionA4_PunishVL}, 1, "%{GUARD::%player%::MOTIONAY}%", {@MotionA4_BufferAdd}, {@MotionA4_Buffer}) if abs({GUARD::%player%::MOTIONAY} - {GUARD::%player%::MOTIONPREDICTION}) > 0.001
  else:
    delete {GUARD::%player%::MOTION.A-2}
    delete {GUARD::%player%::MOTION.A-3}
    delete {GUARD::%player%::MOTION.A-4}
  set {GUARD::%player%::MOTIONAYPOS2} to player's y location 

on any move:
  GA_Requirements(player) = true 
  GA_CobWeb(player) < 0.1 second
  set {_speed} to getDeltaLoc(player, 2, false)
  set {_y} to getDeltaY(player, 2)
  if GA_Jump(player) < 0.8 second:
    GA_clearly(player, "NoWeb", "A", "{@NoWebA_Status}", {@NoWebA_PunishVL}, 1, "%{_speed}%", {@NoWebA_BufferAdd}, {@NoWebA_Buffer}) if {_speed} > 0.11
  else if GA_Jump(player) > 0.8 second:
    GA_clearly(player, "NoWeb", "A", "{@NoWebA_Status}", {@NoWebA_PunishVL}, 1, "%{_speed}%", {@NoWebA_BufferAdd}, {@NoWebA_Buffer}) if {_speed} > 0.08
  delete {GUARD::%player%::NOWEB.A} if {_speed} < 0.08
  block under player is cobweb 
  block at player is air
  GA_clearly(player, "NoWeb", "A", "{@NoWebA_Status}", {@NoWebA_PunishVL}, 1, "%{_speed}%", {@NoWebA_BufferAdd}, {@NoWebA_Buffer}) if {_y} >= 0

on any move:
  GA_LastReload("console") > 3 second 
  add 1 to {GUARD::%player%::MOVEPACKET}
  GA_clearly(player, "Timer", "A", "{@TimerA_Status}", {@TimerA_PunishVL}, 5, "%{GUARD::%player%::MOVEPACKET}%", {@TimerA_BufferAdd}, {@TimerA_Buffer}) if {GUARD::%player%::MOVEPACKET} > 22
  kick player due to "You are sending too many packets!" if {GUARD::%player%::MOVEPACKET} > 100

on right click:
  set {GUARD::%player%::LRPS} to GetX(player, 1) 
  add GetZ(player, 1) to {GUARD::%player%::LRPS}
on consume:
  set {_x} to GetX(player, 1)
  set {_z} to GetZ(player, 1)
  set {_distance} to difference between {_x} + {_z} and {GUARD::%player%::LRPS}
  set {GUARD::%player%::LRPS} to 0
  GA_clearly(player, "NoSlow", "A", "{@NoSlowA_Status}", {@NoSlowA_PunishVL}, 1, "%{_distance}%", {@NoSlowA_BufferAdd}, {@NoSlowA_Buffer}) if {_distance} > 5.5
  delete {GUARD::%player%::NOSLOW.A} if {_distance} < 3

on any move:
  GA_Requirements(player) = true 
  GA_EffectsRequirements(player) = true
  GA_Slime(player) > 1 second 
  GA_InLiquid(player) > 1 second
  getLastDamage(player) > 1 second
  GA_Place(player) > 1 second
  GA_Block(player) > 1 second
  set {_y} to getDeltaY2(player, 5)
  GA_clearly(player, "Motion", "B-2", "{@MotionB2_Status}", {@MotionB2_PunishVL}, 1, "%{_y}%", {@MotionB2_BufferAdd}, {@MotionB2_Buffer}) if {_y} is between 0.3332 and 0.419
  delete {GUARD::%player%::MOTION.B-2} if {_y} is not between 0.3332 and 0.419

on any move:
  GA_Requirements(player) = true 
  GA_Slime(player) > 1 second 
  getLastDamage(player) > 1 second
  set {_y} to getDeltaY2(player, 2)
  GA_clearly(player, "Motion", "B-3", "{@MotionB3_Status}", {@MotionB3_PunishVL}, 1, "%{_y}%", {@MotionB3_BufferAdd}, {@MotionB3_Buffer}) if {_y} > 0.6
  {_y} != 0
  delete {GUARD::%player%::MOTION.B-3} if {_y} < 0.6

function GA_clearly(p: player, cheat: text, type: text, dev: text, vl: number, tpvl: number, v: text, bufferadd: number, buffer: number):
  {GUARD.CHECK.%{_type}%.%{_type}%} is true
  add {_bufferadd} to {GUARD::%{_p}%::%{_cheat}%.%{_type}%} if {_bufferadd} > 0
  set {GUARD::%{_p}%::%{_cheat}%.%{_type}%} to 0.1 if {_buffer} = 0
  {GUARD::%{_p}%::%{_cheat}%.%{_type}%} > {_buffer}
  delete {GUARD::%{_p}%::%{_cheat}%.%{_type}%} if {GUARD::%{_p}%::%{_cheat}%.%{_type}%} = 0.1
  add 1 to {GUARD::%{_p}%::VL::%{_cheat}%}
  loop all players:
    send formatted "<tooltip:&8Â» &fCheck: &7%{_cheat}% %nl%  &8Â» &fCheck Type: &7%{_type}% %nl%  &8Â» &fValue: &7%{_v}% %nl%  &8Â» &fCheck State: &7%{_dev}% %nl%%nl%&8Â» &fPlayer: &7%{_p}% %nl%  &8Â» &fPlayer's VL: &7%{GUARD::%{_p}%::VL::%{_cheat}%}%&8/&7%{_vl}% %nl%  &8Â» &fPlayer's Ping: &7%{_p}'s ping%  >{@guard} %{_p}%&7 failed &f%{_cheat}% &7(&3x%{GUARD::%{_p}%::VL::%{_cheat}%}%&7)" to loop-player if {GUARD::%loop-player%::ALERTS} is true
  if {_vl} - {GUARD::%{_p}%::VL::%{_cheat}%} <= 0:
    {GUARD.PUNISH.%{_type}%.%{_type}%} is true
    make server execute command "/guard kick %{_p}%" if {@Kick} is true 
    make server execute command "/ban %{_p}% {@guard} Unfair Advantage" if {@Ban} is true
function GetX(p: player, n: number) :: number:
  set {_x} to x location of {GUARD::LOCATION::%{_p}%::%{_n}%}
  return {_x}
function GetZ(p: player, n: number) :: number:
  set {_z} to z location of {GUARD::LOCATION::%{_p}%::%{_n}%}
  return {_z}
function GA_InAir(p: player) :: boolean:
  block 0.01 below {_p} is air:
    block 0.01 below 0.3 east of {_p} is air:
      block 0.01 below 0.3 west of {_p} is air:
        block 0.01 below 0.3 south of {_p} is air:
          block 0.01 below 0.3 north of {_p} is air:
            block 0.01 below 0.3 south 0.3 east of {_p} is air:
              block 0.01 below 0.3 north 0.3 east of {_p} is air:
                block 0.01 below 0.3 south 0.3 west of {_p} is air:
                  block 0.01 below 0.3 north 0.3 west of {_p} is air:
                    return true
  return false
function GA_InAirFull(p: player) :: boolean:
  block below {_p} is air:
    block below 0.3 east of {_p} is air:
      block below 0.3 west of {_p} is air:
        block below 0.3 south of {_p} is air:
          block below 0.3 north of {_p} is air:
            block below 0.3 south 0.3 east of {_p} is air:
              block below 0.3 north 0.3 east of {_p} is air:
                block below 0.3 south 0.3 west of {_p} is air:
                  block below 0.3 north 0.3 west of {_p} is air:
                    return true
  return false
function GA_InAirFull2(p: player) :: boolean:
  block 2 below {_p} is air:
    block 2 below 0.3 east of {_p} is air:
      block 2 below 0.3 west of {_p} is air:
        block 2 below 0.3 south of {_p} is air:
          block 2 below 0.3 north of {_p} is air:
            block 2 below 0.3 south 0.3 east of {_p} is air:
              block 2 below 0.3 north 0.3 east of {_p} is air:
                block 2 below 0.3 south 0.3 west of {_p} is air:
                  block 2 below 0.3 north 0.3 west of {_p} is air:
                    return true
  return false
function GA_OnLiquid(p: player) :: boolean:
  block 0.3 below {_p} is water or lava:
    block 0.3 below 0.3 east of {_p} is water or lava:
      block 0.3 below 0.3 west of {_p} is water or lava:
        block 0.3 below 0.3 south of {_p} is water or lava:
          block 0.3 below 0.3 north of {_p} is water or lava:
            block 0.3 below 0.3 south 0.3 east of {_p} is water or lava:
              block 0.3 below 0.3 north 0.3 east of {_p} is water or lava:
                block 0.3 below 0.3 south 0.3 west of {_p} is water or lava:
                  block 0.3 below 0.3 north 0.3 west of {_p} is water or lava:
                    return true
  return false
function GA_OnLiquidFull(p: player) :: boolean:
  block below {_p} is water or lava:
    block below 0.3 east of {_p} is water or lava:
      block below 0.3 west of {_p} is water or lava:
        block below 0.3 south of {_p} is water or lava:
          block below 0.3 north of {_p} is water or lava:
            block below 0.3 south 0.3 east of {_p} is water or lava:
              block below 0.3 north 0.3 east of {_p} is water or lava:
                block below 0.3 south 0.3 west of {_p} is water or lava:
                  block below 0.3 north 0.3 west of {_p} is water or lava:
                    return true
  return false
function GA_Requirements(p: player) :: boolean:
  if {_p}'s chestplate is an elytra:
    return false
  if {_p} is flying:
    return false 
  if {_p}'s gamemode is spectator or creative:
    return false
  return true
function getGCD(current: number, previous: number) :: number:
  if {_previous} <= 16384:
    return {_current}
  return getGCD({_previous}, mod({_current}, {_previous}))
function GA_EffectsRequirements(p: player) :: boolean:
  if {_p} has levitation or slow falling:
    return false 
  return true
function GA_OnClimb(p: player) :: time span:
  block at or above or under {_p} is ladder or vines or twisting vines or scaffolding
  set {GUARD::%{_p}%::CLIMB} to now
function GA_AirAbove(p: player) :: boolean:
  block 2.5 above north {_p} is air or void air:
    block 2.5 above south {_p} is air or void air:
      block 2.5 above west {_p} is air or void air:
        block 2.5 above east {_p} is air or void air:
          block 2.5 above {_p} is air or void air:
            return false
  return true
on step on ice or packed ice or blue ice or snow layer or slime block:
  set {GUARD::%player%::ICE} to now
on step on cake or any bed:
  set {GUARD::%player%::BLOCK} to now 
on any move:
  block at or above player is water or lava:
    set {GUARD::%player%::LIQUID} to now
  block under player is cobweb:
    set {GUARD::%player%::COBWEB} to now
  block above player is cobweb:
    set {GUARD::%player%::COBWEB} to now
  block at player is cobweb:
    set {GUARD::%player%::COBWEB} to now
  block 0.3 under or at player is player head or wither skeleton head or skeleton head or zombie head or creeper head or brewing stands or cobweb:
    set {GUARD::%player%::BHANDLER} to now
function GA_InLiquid(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::LIQUID} and now
  return {_diff}
function GA_Place(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::BLOCKPLACE.TIME} and now
  return {_diff}
function GA_Climb(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::CLIMB} and now
  return {_diff}
on step on cake or any bed:
  set {GUARD::%player%::BLOCK} to now 
on step on slime block:
  set {GUARD::%player%::SLIME} to now 
on step on cobweb:
  set {GUARD::%player%::COBWEB} to now 
function GA_CobWeb(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::COBWEB} and now
  return {_diff}
function GA_Slime(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::SLIME} and now
  return {_diff}
function GA_Ice(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::ICE} and now
  return {_diff}
on jump:
  set {GUARD::%player%::LASTJUMP} to now
function GA_Jump(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::LASTJUMP} and now
  return {_diff}
function GA_BlockCheck(p: player):
  loop all blocks in radius 2 around {_p}:
    if loop-block is flower pot or brewing stand or stairs or slabs or snow layer or player head or skeleton head or zombie head or wither skeleton head or creeper head:
      set {GUARD::%{_p}%::BLOCK} to now
function GA_Block(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::BLOCK} and now
  return {_diff}
function roundTo(n: number, r: number) :: number:
  return round({_n} * 10^ {_r}) / 10^ {_r}
on damage:
  "%damage cause%" = "ATTACK"
  set {GUARD::%victim%::DAMAGE} to now
function getLastDamage(p: player) :: time span:
  set {_diff} to difference between {GUARD::%{_p}%::DAMAGE} and now
  return {_diff}
function GA_Calc(p: player):
  set {GUARD::PREVIUSLOCATION::%{_p}%::10} to {GUARD::LOCATION::%{_p}%::10}
  set {GUARD::LOCATION::%{_p}%::10} to {GUARD::PREVIUSLOCATION::%{_p}%::9}
  set {GUARD::PREVIUSLOCATION::%{_p}%::9} to {GUARD::LOCATION::%{_p}%::9}
  set {GUARD::LOCATION::%{_p}%::9} to {GUARD::PREVIUSLOCATION::%{_p}%::8}
  set {GUARD::PREVIUSLOCATION::%{_p}%::8} to {GUARD::LOCATION::%{_p}%::8}
  set {GUARD::LOCATION::%{_p}%::8} to {GUARD::PREVIUSLOCATION::%{_p}%::7}
  set {GUARD::PREVIUSLOCATION::%{_p}%::7} to {GUARD::LOCATION::%{_p}%::7}
  set {GUARD::LOCATION::%{_p}%::7} to {GUARD::PREVIUSLOCATION::%{_p}%::6}
  set {GUARD::PREVIUSLOCATION::%{_p}%::6} to {GUARD::LOCATION::%{_p}%::6}
  set {GUARD::LOCATION::%{_p}%::6} to {GUARD::PREVIUSLOCATION::%{_p}%::5}
  set {GUARD::PREVIUSLOCATION::%{_p}%::5} to {GUARD::LOCATION::%{_p}%::5}
  set {GUARD::LOCATION::%{_p}%::5} to {GUARD::PREVIUSLOCATION::%{_p}%::4}
  set {GUARD::PREVIUSLOCATION::%{_p}%::4} to {GUARD::LOCATION::%{_p}%::4}
  set {GUARD::LOCATION::%{_p}%::4} to {GUARD::PREVIUSLOCATION::%{_p}%::3}
  set {GUARD::PREVIUSLOCATION::%{_p}%::3} to {GUARD::LOCATION::%{_p}%::3}
  set {GUARD::LOCATION::%{_p}%::3} to {GUARD::PREVIUSLOCATION::%{_p}%::2}
  set {GUARD::PREVIUSLOCATION::%{_p}%::2} to {GUARD::LOCATION::%{_p}%::2}
  set {GUARD::LOCATION::%{_p}%::2} to {GUARD::PREVIUSLOCATION::%{_p}%::1}
  set {GUARD::PREVIUSLOCATION::%{_p}%::1} to {GUARD::LOCATION::%{_p}%::1}
  set {GUARD::LOCATION::%{_p}%::1} to location of {_p}
function getDeltaX(p: player, n: number) :: number:
  set {_diff} to difference between x location of {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%} and x location of {GUARD::LOCATION::%{_p}%::%{_n}%}
  return {_diff}
function getDeltaY(p: player, n: number) :: number:
  set {_diff} to difference between y location of {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%} and y location of {GUARD::LOCATION::%{_p}%::%{_n}%}
  return {_diff}
function getDeltaY2(p: player, n: number) :: number:
  set {_diff} to y location of {GUARD::LOCATION::%{_p}%::%{_n}%} - y location of {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%}
  return {_diff}
function getDeltaZ(p: player, n: number) :: number:
  set {_diff} to difference between z location of {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%} and z location of {GUARD::LOCATION::%{_p}%::%{_n}%}
  return {_diff}
function getDeltaLoc(p: player, n: number, y: boolean) :: number:
  set y location of {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%} to y location of {GUARD::LOCATION::%{_p}%::%{_n}%} if {_y} is true
  set {_diff} to distance between {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%} and {GUARD::LOCATION::%{_p}%::%{_n}%}
  return {_diff}
function getDeltaPitch(p: player, n: number) :: number:
  set {_diff} to difference between {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%}'s pitch and {GUARD::LOCATION::%{_p}%::%{_n}%}'s pitch
  return {_diff}
function getDeltaYaw(p: player, n: number) :: number:
  set {_diff} to difference between {GUARD::PREVIUSLOCATION::%{_p}%::%{_n}%}'s yaw and {GUARD::LOCATION::%{_p}%::%{_n}%}'s yaw
  return {_diff}
function spider(p: player) :: boolean:
    set {_b} to {_p}'s location
    remove 1 from y location of {_b}
    block at {_b} is air or void air:
        {_p}'s target block is not air
        add 3 to y location of {_b}
        block at {_b} is air or void air 
        return true 
    return false
on script load:
  set {GUARD::RELOAD} to now 
function GA_LastReload(c: text) :: time span:
  set {_diff} to difference between {GUARD::RELOAD} and now
  return {_diff}
on any move:
  GA_Calc(player)
  GA_OnClimb(player)
  GA_BlockCheck(player)
on join:
   set {GUARD::%player%::ICE} to now
   set {GUARD::%player%::BLOCK} to now
   set {GUARD::%player%::DAMAGE} to now
   set {GUARD::%player%::LASTJUMP} to now 
   set {GUARD::%player%::COBWEB} to now 
   set {GUARD::%player%::SLIME} to now
   while player is online:
      delete {GUARD::%player%::CPS.L}
      delete {GUARD::%player%::CPS.R}
      delete {GUARD::%player%::KILLAURA.C}
      delete {GUARD::%player%::JESUS.A}
      delete {GUARD::%player%::MOTION.A-8}
      delete {GUARD::%player%::MOVEPACKET}
      wait 1 second
on join:
   while player is online:
      delete {GUARD::%player%::SPEED.B-5}
      delete {GUARD::%player%::MOTION.B-1}
      delete {GUARD::%player%::MOTION.B-2}
      wait 3 second
on join:
   while player is online:
      delete {GUARD::%player%::VL::*}
      wait 1 minute
command /guard [<text>] [<player>] [<time span>]:
   permission: {@MainPermission}
   trigger:
      if arg 1 is not set:
         send ""
         send "                    &3&lGUARD"
         send "                 &3Help Center"
         send ""
         send "&7Command Permission: &3{@MainPermission}"
         send "&7Alert Status: &3%{GUARD::%player%::ALERTS}%"
         send ""
         send "                         &3Commands List"
         send "         &7&oSignications: () = optional, [] = required"
         send ""
         send "&7/guard kick [player] &8| &3Will kick [player] for 'Unfair Advantage'"
         send "&7/guard alerts (player) &8| &3Will toggle alerts for [player]"
         send "&7/guard clearvl (player) &8| &3Well clear your or [player] VLs"
         send "&7/guard gui &8| &3Will make the GUI appear" 
      if arg 1 is "gui":
         wait 2 ticks
         open chest with 3 rows named "&3&lGUARD &8Â» &3&lGUI" to player
         format slot 11 of player with paper named "&3Toggle Checks" with lore "&7&oClick me !" to run [make player execute command "/Â§vgui1"]
         format slot 13 of player with blaze rod named "&3Toggle AutoPunishments" with lore "&7&oClick me !" to run [make player execute command "/Â§vgui2"]
         format slot 15 of player with ender eye named "&3Toggle Checks Alerts" with lore "&7&oClick me !" to run [make player execute command "/Â§vgui3"]
      if arg 1 is "kick":
         kick player due to "{@guard} Unfair Advantage"
         broadcast ""
         broadcast "{@KickMsg}"
         broadcast ""
         stop
      if arg 1 is "clearvl":
         delete {GUARD::%player%::VL::*} if arg 2 is not set 
         delete {GUARD::%arg 2%::VL::*} if arg 2 is set 
         stop
      if arg 1 is "alerts":
         if arg 2 is not set:
            set {GUARD::%player%::ALERTS} to true if {GUARD::%player%::ALERTS} is not set 
            send "{@guard} Alerts disabled." if {GUARD::%player%::ALERTS} is true
            set {_no} to true if {GUARD::%player%::ALERTS} is true
            set {GUARD::%player%::ALERTS} to false if {GUARD::%player%::ALERTS} is true  
            stop if {_no} is set
            send "{@guard} Alerts enabled." if {GUARD::%player%::ALERTS} is false
            set {GUARD::%player%::ALERTS} to true if {GUARD::%player%::ALERTS} is false  
         else:
            set {GUARD::%arg 2%::ALERTS} to true if {GUARD::%arg 2%::ALERTS} is not set 
            send "{@guard} Alerts disabled." to arg 2 if {GUARD::%arg 2%::ALERTS} is true
            set {_no} to true if {GUARD::%arg 2%::ALERTS} is true
            set {GUARD::%arg 2%::ALERTS} to false if {GUARD::%arg 2%::ALERTS} is true  
            stop if {_no} is set
            send "{@guard} Alerts enabled." to arg 2 if {GUARD::%arg 2%::ALERTS} is false
            set {GUARD::%arg 2%::ALERTS} to true if {GUARD::%arg 2%::ALERTS} is false  


command /Â§vgui1: 
  trigger:
    close player's inventory
    wait 1 ticks
    open chest with 6 rows named "&3&lGUARD &8Â» &3&lGUI &8Â» &3&lChecks" to player
    format slot 0 of player with lime wool named "&3Aim &7(A-1)" to run [make player execute command "/Â§vflagtoggle Aim A-1"] if {GUARD.CHECK.AIM.A-1} is not set
    format slot 0 of player with gray wool named "&3Aim &7(A-1)" to run [make player execute command "/Â§vflagtoggle Aim A-1"] if {GUARD.CHECK.AIM.A-1} is set
    format slot 1 of player with lime wool named "&3Aim &7(A-2)" to run [make player execute command "/Â§vflagtoggle Aim A-2"] if {GUARD.CHECK.AIM.A-2} is not set
    format slot 1 of player with gray wool named "&3Aim &7(A-2)" to run [make player execute command "/Â§vflagtoggle Aim A-2"] if {GUARD.CHECK.AIM.A-2} is set
    format slot 2 of player with lime wool named "&3Aim &7(A-3)" to run [make player execute command "/Â§vflagtoggle Aim A-3"] if {GUARD.CHECK.AIM.A-3} is not set
    format slot 2 of player with gray wool named "&3Aim &7(A-3)" to run [make player execute command "/Â§vflagtoggle Aim A-3"] if {GUARD.CHECK.AIM.A-3} is set
    format slot 3 of player with lime wool named "&3Aim &7(A-4)" to run [make player execute command "/Â§vflagtoggle Aim A-4"] if {GUARD.CHECK.AIM.A-4} is not set
    format slot 3 of player with gray wool named "&3Aim &7(A-4)" to run [make player execute command "/Â§vflagtoggle Aim A-4"] if {GUARD.CHECK.AIM.A-4} is set
    format slot 4 of player with lime wool named "&3Aim &7(A-5)" to run [make player execute command "/Â§vflagtoggle Aim A-5"] if {GUARD.CHECK.AIM.A-5} is not set
    format slot 4 of player with gray wool named "&3Aim &7(A-5)" to run [make player execute command "/Â§vflagtoggle Aim A-5"] if {GUARD.CHECK.AIM.A-5} is set
    format slot 5 of player with lime wool named "&3KillAura &7(A)" to run [make player execute command "/Â§vflagtoggle KillAura A"] if {GUARD.CHECK.KILLAURA.A} is not set
    format slot 5 of player with gray wool named "&3KillAura &7(A)" to run [make player execute command "/Â§vflagtoggle KillAura A"] if {GUARD.CHECK.KILLAURA.A} is set
    format slot 6 of player with lime wool named "&3KillAura &7(B)" to run [make player execute command "/Â§vflagtoggle KillAura B"] if {GUARD.CHECK.KILLAURA.B} is not set
    format slot 6 of player with lime wool named "&3KillAura &7(B)" to run [make player execute command "/Â§vflagtoggle KillAura B"] if {GUARD.CHECK.KILLAURA.B} is set
    format slot 7 of player with lime wool named "&3KillAura &7(C)" to run [make player execute command "/Â§vflagtoggle KillAura C"] if {GUARD.CHECK.KILLAURA.c} is set
    format slot 7 of player with gray wool named "&3KillAura &7(C)" to run [make player execute command "/Â§vflagtoggle KillAura C"] if {GUARD.CHECK.KILLAURA.c} is not set
    format slot 8 of player with lime wool named "&3Reach &7(A)" to run [make player execute command "/Â§vflagtoggle Reach A"] if {GUARD.CHECK.REACH.A} is not set
    format slot 8 of player with gray wool named "&3Reach &7(A)" to run [make player execute command "/Â§vflagtoggle Reach A"] if {GUARD.CHECK.REACH.A} is set
    format slot 9 of player with lime wool named "&3Reach &7(B)" to run [make player execute command "/Â§vflagtoggle Reach B"] if {GUARD.CHECK.REACH.B} is not set
    format slot 9 of player with gray wool named "&3Reach &7(B)" to run [make player execute command "/Â§vflagtoggle Reach B"] if {GUARD.CHECK.REACH.B} is set
    format slot 10 of player with lime wool named "&3Reach &7(C)" to run [make player execute command "/Â§vflagtoggle Reach C"] if {GUARD.CHECK.REACH.C} is not set
    format slot 10 of player with gray wool named "&3Reach &7(C)" to run [make player execute command "/Â§vflagtoggle Reach C"] if {GUARD.CHECK.REACH.C} is set
    format slot 11 of player with lime wool named "&3AutoClicker &7(A)" to run [make player execute command "/Â§vflagtoggle AUTOCLICKER A"] if {GUARD.CHECK.AUTOCLICKER.A} is not set
    format slot 11 of player with gray wool named "&3AutoClicker &7(A)" to run [make player execute command "/Â§vflagtoggle AUTOCLICKER A"] if {GUARD.CHECK.AUTOCLICKER.A} is set
    format slot 12 of player with lime wool named "&3AutoClicker &7(B)" to run [make player execute command "/Â§vflagtoggle AUTOCLICKER B"] if {GUARD.CHECK.AUTOCLICKER.B} is not set
    format slot 12 of player with gray wool named "&3AutoClicker &7(B)" to run [make player execute command "/Â§vflagtoggle AUTOCLICKER B"] if {GUARD.CHECK.AUTOCLICKER.B} is set
    format slot 13 of player with lime wool named "&3FastClimb &7(A)" to run [make player execute command "/Â§vflagtoggle FastClimb A"] if {GUARD.CHECK.FASTCLIMB.A} is not set
    format slot 13 of player with gray wool named "&3FastClimb &7(A)" to run [make player execute command "/Â§vflagtoggle FastClimb A"] if {GUARD.CHECK.FASTCLIMB.A} is set
    format slot 14 of player with lime wool named "&3Motion &7(A-1)" to run [make player execute command "/Â§vflagtoggle Motion A-1"] if {GUARD.CHECK.MOTION.A-1} is not set
    format slot 14 of player with gray wool named "&3Motion &7(A-1)" to run [make player execute command "/Â§vflagtoggle Motion A-1"] if {GUARD.CHECK.MOTION.A-1} is set
    format slot 15 of player with lime wool named "&3Motion &7(A-2)" to run [make player execute command "/Â§vflagtoggle Motion A-2"] if {GUARD.CHECK.MOTION.A-2} is not set
    format slot 15 of player with gray wool named "&3Motion &7(A-2)" to run [make player execute command "/Â§vflagtoggle Motion A-2"] if {GUARD.CHECK.MOTION.A-2} is set
    format slot 16 of player with lime wool named "&3Motion &7(A-3)" to run [make player execute command "/Â§vflagtoggle Motion A-3"] if {GUARD.CHECK.MOTION.A-3} is not set
    format slot 16 of player with gray wool named "&3Motion &7(A-3)" to run [make player execute command "/Â§vflagtoggle Motion A-3"] if {GUARD.CHECK.MOTION.A-3} is set
    format slot 17 of player with lime wool named "&3Motion &7(A-4)" to run [make player execute command "/Â§vflagtoggle Motion A-4"] if {GUARD.CHECK.MOTION.A-4} is not set
    format slot 17 of player with gray wool named "&3Motion &7(A-4)" to run [make player execute command "/Â§vflagtoggle Motion A-4"] if {GUARD.CHECK.MOTION.A-4} is set 
    format slot 18 of player with lime wool named "&3Motion &7(A-5)" to run [make player execute command "/Â§vflagtoggle Motion A-5"] if {GUARD.CHECK.MOTION.A-5} is not set
    format slot 18 of player with gray wool named "&3Motion &7(A-5)" to run [make player execute command "/Â§vflagtoggle Motion A-5"] if {GUARD.CHECK.MOTION.A-5} is set
    format slot 19 of player with lime wool named "&3Motion &7(A-6)" to run [make player execute command "/Â§vflagtoggle Motion A-6"] if {GUARD.CHECK.MOTION.A-6} is not set 
    format slot 19 of player with gray wool named "&3Motion &7(A-6)" to run [make player execute command "/Â§vflagtoggle Motion A-6"] if {GUARD.CHECK.MOTION.A-6} is set
    format slot 20 of player with lime wool named "&3Motion &7(A-7)" to run [make player execute command "/Â§vflagtoggle Motion A-7"] if {GUARD.CHECK.MOTION.A-7} is not set
    format slot 20 of player with gray wool named "&3Motion &7(A-7)" to run [make player execute command "/Â§vflagtoggle Motion A-7"] if {GUARD.CHECK.MOTION.A-7} is set
    format slot 21 of player with lime wool named "&3Motion &7(A-8)" to run [make player execute command "/Â§vflagtoggle Motion A-8"] if {GUARD.CHECK.MOTION.A-8} is not set
    format slot 21 of player with gray wool named "&3Motion &7(A-8)" to run [make player execute command "/Â§vflagtoggle Motion A-8"] if {GUARD.CHECK.MOTION.A-8} is set
    format slot 22 of player with lime wool named "&3Motion &7(A-9)" to run [make player execute command "/Â§vflagtoggle Motion A-9"] if {GUARD.CHECK.MOTION.A-9} is not set
    format slot 22 of player with gray wool named "&3Motion &7(A-9)" to run [make player execute command "/Â§vflagtoggle Motion A-9"] if {GUARD.CHECK.MOTION.A-9} is set
    format slot 23 of player with lime wool named "&3Motion &7(B-1)" to run [make player execute command "/Â§vflagtoggle Motion B-1"] if {GUARD.CHECK.MOTION.B-1} is not set
    format slot 23 of player with gray wool named "&3Motion &7(B-1)" to run [make player execute command "/Â§vflagtoggle Motion B-1"] if {GUARD.CHECK.MOTION.B-1} is set
    format slot 24 of player with lime wool named "&3Motion &7(B-2)" to run [make player execute command "/Â§vflagtoggle Motion B-2"] if {GUARD.CHECK.MOTION.B-2} is not set
    format slot 24 of player with gray wool named "&3Motion &7(B-2)" to run [make player execute command "/Â§vflagtoggle Motion B-2"] if {GUARD.CHECK.MOTION.B-2} is set
    format slot 25 of player with lime wool named "&3Motion &7(B-3)" to run [make player execute command "/Â§vflagtoggle Motion B-3"] if {GUARD.CHECK.MOTION.B-3} is not set
    format slot 25 of player with gray wool named "&3Motion &7(B-3)" to run [make player execute command "/Â§vflagtoggle Motion B-3"] if {GUARD.CHECK.MOTION.B-3} is set
    format slot 26 of player with lime wool named "&3NoFall &7(A)" to run [make player execute command "/Â§vflagtoggle NoFall A"] if {GUARD.CHECK.NOFALL.A} is not set 
    format slot 26 of player with gray wool named "&3NoFall &7(A)" to run [make player execute command "/Â§vflagtoggle NoFall A"] if {GUARD.CHECK.NOFALL.A} is set
    format slot 27 of player with lime wool named "&3Inventory &7(A)" to run [make player execute command "/Â§vflagtoggle Inventory A"] if {GUARD.CHECK.INVENTORY.A} is not set
    format slot 27 of player with gray wool named "&3Inventory &7(A)" to run [make player execute command "/Â§vflagtoggle Inventory A"] if {GUARD.CHECK.INVENTORY.A} is set
    format slot 28 of player with lime wool named "&3Inventory &7(B)" to run [make player execute command "/Â§vflagtoggle Inventory B"] if {GUARD.CHECK.INVENTORY.B} is not set
    format slot 28 of player with gray wool named "&3Inventory &7(B)" to run [make player execute command "/Â§vflagtoggle Inventory B"] if {GUARD.CHECK.INVENTORY.B} is set
    format slot 29 of player with lime wool named "&3Inventory &7(C)" to run [make player execute command "/Â§vflagtoggle Inventory C"] if {GUARD.CHECK.INVENTORY.C} is not set
    format slot 29 of player with gray wool named "&3Inventory &7(C)" to run [make player execute command "/Â§vflagtoggle Inventory C"] if {GUARD.CHECK.INVENTORY.C} is set
    format slot 30 of player with lime wool named "&3Inventory &7(D)" to run [make player execute command "/Â§vflagtoggle Inventory D"] if {GUARD.CHECK.INVENTORY.D} is not set
    format slot 30 of player with gray wool named "&3Inventory &7(D)" to run [make player execute command "/Â§vflagtoggle Inventory D"] if {GUARD.CHECK.INVENTORY.D} is set
    format slot 31 of player with lime wool named "&3Jesus &7(A)" to run [make player execute command "/Â§vflagtoggle Jesus A"] if {GUARD.CHECK.JESUS.A} is not set
    format slot 31 of player with gray wool named "&3Jesus &7(A)" to run [make player execute command "/Â§vflagtoggle Jesus A"] if {GUARD.CHECK.JESUS.A} is not set
    format slot 32 of player with lime wool named "&3Jesus &7(B)" to run [make player execute command "/Â§vflagtoggle Jesus B"] if {GUARD.CHECK.JESUS.B} is not set 
    format slot 32 of player with gray wool named "&3Jesus &7(B)" to run [make player execute command "/Â§vflagtoggle Jesus B"] if {GUARD.CHECK.JESUS.B} is not set
    format slot 33 of player with lime wool named "&3Jesus &7(C)" to run [make player execute command "/Â§vflagtoggle Jesus C"] if {GUARD.CHECK.JESUS.C} is not set
    format slot 33 of player with gray wool named "&3Jesus &7(C)" to run [make player execute command "/Â§vflagtoggle Jesus C"] if {GUARD.CHECK.JESUS.C} is not set
    format slot 34 of player with lime wool named "&3Speed &7(A-1)" to run [make player execute command "/Â§vflagtoggle Speed A-1"] if {GUARD.CHECK.SPEED.A-1} is not set
    format slot 34 of player with gray wool named "&3Speed &7(A-1)" to run [make player execute command "/Â§vflagtoggle Speed A-1"] if {GUARD.CHECK.SPEED.A-1} is set
    format slot 35 of player with lime wool named "&3Speed &7(A-2)" to run [make player execute command "/Â§vflagtoggle Speed A-2"] if {GUARD.CHECK.SPEED.A-2} is not set
    format slot 35 of player with gray wool named "&3Speed &7(A-2)" to run [make player execute command "/Â§vflagtoggle Speed A-2"] if {GUARD.CHECK.SPEED.A-2} is not set
    format slot 36 of player with lime wool named "&3Speed &7(A-3)" to run [make player execute command "/Â§vflagtoggle Speed A-3"] if {GUARD.CHECK.SPEED.A-3} is not set
    format slot 36 of player with gray wool named "&3Speed &7(A-3)" to run [make player execute command "/Â§vflagtoggle Speed A-3"] if {GUARD.CHECK.SPEED.A-3} is not set
    format slot 37 of player with lime wool named "&3Speed &7(B-1)" to run [make player execute command "/Â§vflagtoggle Speed B-1"] if {GUARD.CHECK.SPEED.B-1} is not set
    format slot 37 of player with gray wool named "&3Speed &7(B-1)" to run [make player execute command "/Â§vflagtoggle Speed B-1"] if {GUARD.CHECK.SPEED.B-1} is not set
    format slot 38 of player with lime wool named "&3Speed &7(B-2)" to run [make player execute command "/Â§vflagtoggle Speed B-2"] if {GUARD.CHECK.SPEED.B-2} is not set
    format slot 38 of player with gray wool named "&3Speed &7(B-2)" to run [make player execute command "/Â§vflagtoggle Speed B-2"] if {GUARD.CHECK.SPEED.B-2} is not set
    format slot 39 of player with lime wool named "&3Speed &7(B-3)" to run [make player execute command "/Â§vflagtoggle Speed B-3"] if {GUARD.CHECK.SPEED.B-3} is not set
    format slot 39 of player with gray wool named "&3Speed &7(B-3)" to run [make player execute command "/Â§vflagtoggle Speed B-3"] if {GUARD.CHECK.SPEED.B-3} is not set
    format slot 40 of player with lime wool named "&3Speed &7(B-4)" to run [make player execute command "/Â§vflagtoggle Speed B-4"] if {GUARD.CHECK.SPEED.B-4} is not set
    format slot 40 of player with gray wool named "&3Speed &7(B-4)" to run [make player execute command "/Â§vflagtoggle Speed B-4"] if {GUARD.CHECK.SPEED.B-4} is not set
    format slot 41 of player with lime wool named "&3Speed &7(B-5)" to run [make player execute command "/Â§vflagtoggle Speed B-5"] if {GUARD.CHECK.SPEED.B-5} is not set
    format slot 41 of player with gray wool named "&3Speed &7(B-5)" to run [make player execute command "/Â§vflagtoggle Speed B-5"] if {GUARD.CHECK.SPEED.B-5} is not set
    format slot 42 of player with lime wool named "&3Speed &7(C-1)" to run [make player execute command "/Â§vflagtoggle Speed C-1"] if {GUARD.CHECK.SPEED.C-1} is not set
    format slot 42 of player with gray wool named "&3Speed &7(C-1)" to run [make player execute command "/Â§vflagtoggle Speed C-1"] if {GUARD.CHECK.SPEED.C-1} is not set
    format slot 43 of player with lime wool named "&3Speed &7(C-2)" to run [make player execute command "/Â§vflagtoggle Speed C-2"] if {GUARD.CHECK.SPEED.C-2} is not set
    format slot 43 of player with gray wool named "&3Speed &7(C-2)" to run [make player execute command "/Â§vflagtoggle Speed C-2"] if {GUARD.CHECK.SPEED.C-2} is not set
    format slot 44 of player with lime wool named "&3Speed &7(C-3)" to run [make player execute command "/Â§vflagtoggle Speed C-3"] if {GUARD.CHECK.SPEED.C-3} is not set
    format slot 44 of player with gray wool named "&3Speed &7(C-3)" to run [make player execute command "/Â§vflagtoggle Speed C-3"] if {GUARD.CHECK.SPEED.C-3} is not set
    format slot 45 of player with lime wool named "&3Speed &7(D-1)" to run [make player execute command "/Â§vflagtoggle Speed D-1"] if {GUARD.CHECK.SPEED.D-1} is not set
    format slot 45 of player with gray wool named "&3Speed &7(D-1)" to run [make player execute command "/Â§vflagtoggle Speed D-1"] if {GUARD.CHECK.SPEED.D-1} is not set
    format slot 46 of player with lime wool named "&3Speed &7(D-2)" to run [make player execute command "/Â§vflagtoggle Speed D-2"] if {GUARD.CHECK.SPEED.D-2} is not set
    format slot 46 of player with gray wool named "&3Speed &7(D-2)" to run [make player execute command "/Â§vflagtoggle Speed D-2"] if {GUARD.CHECK.SPEED.D-2} is not set
    format slot 47 of player with lime wool named "&3Speed &7(D-3)" to run [make player execute command "/Â§vflagtoggle Speed D-3"] if {GUARD.CHECK.SPEED.D-3} is not set
    format slot 47 of player with gray wool named "&3Speed &7(D-3)" to run [make player execute command "/Â§vflagtoggle Speed D-3"] if {GUARD.CHECK.SPEED.D-3} is not set
    format slot 48 of player with lime wool named "&3Interact &7(A)" to run [make player execute command "/Â§vflagtoggle Interact A"] if {GUARD.CHECK.INTERACT.A} is not set
    format slot 48 of player with gray wool named "&3Interact &7(A)" to run [make player execute command "/Â§vflagtoggle Interact A"] if {GUARD.CHECK.INTERACT.A} is not set
    format slot 49 of player with lime wool named "&3Interact &7(B)" to run [make player execute command "/Â§vflagtoggle Interact B"] if {GUARD.CHECK.INTERACT.B} is not set
    format slot 49 of player with gray wool named "&3Interact &7(B)" to run [make player execute command "/Â§vflagtoggle Interact B"] if {GUARD.CHECK.INTERACT.B} is not set
    format slot 50 of player with lime wool named "&3Interact &7(C)" to run [make player execute command "/Â§vflagtoggle Interact C"] if {GUARD.CHECK.INTERACT.C} is not set
    format slot 50 of player with gray wool named "&3Interact &7(C)" to run [make player execute command "/Â§vflagtoggle Interact C"] if {GUARD.CHECK.INTERACT.C} is not set
    format slot 51 of player with lime wool named "&3NoSlow &7(A)" to run [make player execute command "/Â§vflagtoggle NoSlow A"] if {GUARD.CHECK.NOSLOW.A} is not set
    format slot 51 of player with gray wool named "&3NoSlow &7(A)" to run [make player execute command "/Â§vflagtoggle NoSlow A"] if {GUARD.CHECK.NOSLOW.A} is not set
    format slot 52 of player with lime wool named "&3NoWeb &7(A)" to run [make player execute command "/Â§vflagtoggle NoWeb A"] if {GUARD.CHECK.NOWEB.A} is not set
    format slot 52 of player with gray wool named "&3NoWeb &7(A)" to run [make player execute command "/Â§vflagtoggle NoWeb A"] if {GUARD.CHECK.NOWEB.A} is not set
    format slot 53 of player with paper named "&7&oNext page" to run [make player execute command "/Â§vgui12"]
command /Â§vgui12: 
  trigger:
    close player's inventory
    wait 1 ticks
    open chest with 6 rows named "&3&lGUARD &8Â» &3&lGUI &8Â» &3&lChecks" to player
    format slot 0 of player with lime wool named "&3Timer &7(A)" to run [make player execute command "/Â§vflagtoggle Timer A"] if {GUARD.CHECK.TIMER.A} is not set
    format slot 0 of player with gray wool named "&3Timer &7(A)" to run [make player execute command "/Â§vflagtoggle Timer A"] if {GUARD.CHECK.TIMER.A} is not set
    format slot 1 of player with lime wool named "&3Velocity &7(A)" to run [make player execute command "/Â§vflagtoggle Velocity A"] if {GUARD.CHECK.VELOCITY.A} is not set
    format slot 1 of player with gray wool named "&3Velocity &7(A)" to run [make player execute command "/Â§vflagtoggle Velocity A"] if {GUARD.CHECK.VELOCITY.A} is not set
    format slot 45 of player with paper named "&7&oPrevious page" to run [make player execute command "/Â§vgui1"]
command /Â§vflagtoggle [<text>] [<text>]:
   permission: {@MainPermission}
   trigger:
      if {GUARD.CHECK.%arg 1%.%arg 2%} is not set:
         set {GUARD.CHECK.%arg 1%.%arg 2%} to true
         make player execute command "/Â§vgui1"
         stop
      if {GUARD.CHECK.%arg 1%.%arg 2%} is set:
         delete {GUARD.CHECK.%arg 1%.%arg 2%}
         make player execute command "/Â§vgui1"
command /Â§vgui2: 
  trigger:
    close player's inventory
    wait 1 ticks
    open chest with 6 rows named "&3&lGUARD &8Â» &3&lGUI &8Â» &3&lAutoPunishements" to player
    format slot 0 of player with lime wool named "&3Aim &7(A-1)" to run [make player execute command "/Â§vautopunishtoggle Aim A-1"] if {GUARD.CHECK.AIM.A-1} is not set
    format slot 0 of player with gray wool named "&3Aim &7(A-1)" to run [make player execute command "/Â§vautopunishtoggle Aim A-1"] if {GUARD.CHECK.AIM.A-1} is set
    format slot 1 of player with lime wool named "&3Aim &7(A-2)" to run [make player execute command "/Â§vautopunishtoggle Aim A-2"] if {GUARD.CHECK.AIM.A-2} is not set
    format slot 1 of player with gray wool named "&3Aim &7(A-2)" to run [make player execute command "/Â§vautopunishtoggle Aim A-2"] if {GUARD.CHECK.AIM.A-2} is set
    format slot 2 of player with lime wool named "&3Aim &7(A-3)" to run [make player execute command "/Â§vautopunishtoggle Aim A-3"] if {GUARD.CHECK.AIM.A-3} is not set
    format slot 2 of player with gray wool named "&3Aim &7(A-3)" to run [make player execute command "/Â§vautopunishtoggle Aim A-3"] if {GUARD.CHECK.AIM.A-3} is set
    format slot 3 of player with lime wool named "&3Aim &7(A-4)" to run [make player execute command "/Â§vautopunishtoggle Aim A-4"] if {GUARD.CHECK.AIM.A-4} is not set
    format slot 3 of player with gray wool named "&3Aim &7(A-4)" to run [make player execute command "/Â§vautopunishtoggle Aim A-4"] if {GUARD.CHECK.AIM.A-4} is set
    format slot 4 of player with lime wool named "&3Aim &7(A-5)" to run [make player execute command "/Â§vautopunishtoggle Aim A-5"] if {GUARD.CHECK.AIM.A-5} is not set
    format slot 4 of player with gray wool named "&3Aim &7(A-5)" to run [make player execute command "/Â§vautopunishtoggle Aim A-5"] if {GUARD.CHECK.AIM.A-5} is set
    format slot 5 of player with lime wool named "&3KillAura &7(A)" to run [make player execute command "/Â§vautopunishtoggle KillAura A"] if {GUARD.CHECK.KILLAURA.A} is not set
    format slot 5 of player with gray wool named "&3KillAura &7(A)" to run [make player execute command "/Â§vautopunishtoggle KillAura A"] if {GUARD.CHECK.KILLAURA.A} is set
    format slot 6 of player with lime wool named "&3KillAura &7(B)" to run [make player execute command "/Â§vautopunishtoggle KillAura B"] if {GUARD.CHECK.KILLAURA.B} is not set
    format slot 6 of player with lime wool named "&3KillAura &7(B)" to run [make player execute command "/Â§vautopunishtoggle KillAura B"] if {GUARD.CHECK.KILLAURA.B} is set
    format slot 7 of player with lime wool named "&3KillAura &7(C)" to run [make player execute command "/Â§vautopunishtoggle KillAura C"] if {GUARD.CHECK.KILLAURA.c} is set
    format slot 7 of player with gray wool named "&3KillAura &7(C)" to run [make player execute command "/Â§vautopunishtoggle KillAura C"] if {GUARD.CHECK.KILLAURA.c} is not set
    format slot 8 of player with lime wool named "&3Reach &7(A)" to run [make player execute command "/Â§vautopunishtoggle Reach A"] if {GUARD.CHECK.REACH.A} is not set
    format slot 8 of player with gray wool named "&3Reach &7(A)" to run [make player execute command "/Â§vautopunishtoggle Reach A"] if {GUARD.CHECK.REACH.A} is set
    format slot 9 of player with lime wool named "&3Reach &7(B)" to run [make player execute command "/Â§vautopunishtoggle Reach B"] if {GUARD.CHECK.REACH.B} is not set
    format slot 9 of player with gray wool named "&3Reach &7(B)" to run [make player execute command "/Â§vautopunishtoggle Reach B"] if {GUARD.CHECK.REACH.B} is set
    format slot 10 of player with lime wool named "&3Reach &7(C)" to run [make player execute command "/Â§vautopunishtoggle Reach C"] if {GUARD.CHECK.REACH.C} is not set
    format slot 10 of player with gray wool named "&3Reach &7(C)" to run [make player execute command "/Â§vautopunishtoggle Reach C"] if {GUARD.CHECK.REACH.C} is set
    format slot 11 of player with lime wool named "&3AutoClicker &7(A)" to run [make player execute command "/Â§vautopunishtoggle AUTOCLICKER A"] if {GUARD.CHECK.AUTOCLICKER.A} is not set
    format slot 11 of player with gray wool named "&3AutoClicker &7(A)" to run [make player execute command "/Â§vautopunishtoggle AUTOCLICKER A"] if {GUARD.CHECK.AUTOCLICKER.A} is set
    format slot 12 of player with lime wool named "&3AutoClicker &7(B)" to run [make player execute command "/Â§vautopunishtoggle AUTOCLICKER B"] if {GUARD.CHECK.AUTOCLICKER.B} is not set
    format slot 12 of player with gray wool named "&3AutoClicker &7(B)" to run [make player execute command "/Â§vautopunishtoggle AUTOCLICKER B"] if {GUARD.CHECK.AUTOCLICKER.B} is set
    format slot 13 of player with lime wool named "&3FastClimb &7(A)" to run [make player execute command "/Â§vautopunishtoggle FastClimb A"] if {GUARD.CHECK.FASTCLIMB.A} is not set
    format slot 13 of player with gray wool named "&3FastClimb &7(A)" to run [make player execute command "/Â§vautopunishtoggle FastClimb A"] if {GUARD.CHECK.FASTCLIMB.A} is set
    format slot 14 of player with lime wool named "&3Motion &7(A-1)" to run [make player execute command "/Â§vautopunishtoggle Motion A-1"] if {GUARD.CHECK.MOTION.A-1} is not set
    format slot 14 of player with gray wool named "&3Motion &7(A-1)" to run [make player execute command "/Â§vautopunishtoggle Motion A-1"] if {GUARD.CHECK.MOTION.A-1} is set
    format slot 15 of player with lime wool named "&3Motion &7(A-2)" to run [make player execute command "/Â§vautopunishtoggle Motion A-2"] if {GUARD.CHECK.MOTION.A-2} is not set
    format slot 15 of player with gray wool named "&3Motion &7(A-2)" to run [make player execute command "/Â§vautopunishtoggle Motion A-2"] if {GUARD.CHECK.MOTION.A-2} is set
    format slot 16 of player with lime wool named "&3Motion &7(A-3)" to run [make player execute command "/Â§vautopunishtoggle Motion A-3"] if {GUARD.CHECK.MOTION.A-3} is not set
    format slot 16 of player with gray wool named "&3Motion &7(A-3)" to run [make player execute command "/Â§vautopunishtoggle Motion A-3"] if {GUARD.CHECK.MOTION.A-3} is set
    format slot 17 of player with lime wool named "&3Motion &7(A-4)" to run [make player execute command "/Â§vautopunishtoggle Motion A-4"] if {GUARD.CHECK.MOTION.A-4} is not set
    format slot 17 of player with gray wool named "&3Motion &7(A-4)" to run [make player execute command "/Â§vautopunishtoggle Motion A-4"] if {GUARD.CHECK.MOTION.A-4} is set 
    format slot 18 of player with lime wool named "&3Motion &7(A-5)" to run [make player execute command "/Â§vautopunishtoggle Motion A-5"] if {GUARD.CHECK.MOTION.A-5} is not set
    format slot 18 of player with gray wool named "&3Motion &7(A-5)" to run [make player execute command "/Â§vautopunishtoggle Motion A-5"] if {GUARD.CHECK.MOTION.A-5} is set
    format slot 19 of player with lime wool named "&3Motion &7(A-6)" to run [make player execute command "/Â§vautopunishtoggle Motion A-6"] if {GUARD.CHECK.MOTION.A-6} is not set 
    format slot 19 of player with gray wool named "&3Motion &7(A-6)" to run [make player execute command "/Â§vautopunishtoggle Motion A-6"] if {GUARD.CHECK.MOTION.A-6} is set
    format slot 20 of player with lime wool named "&3Motion &7(A-7)" to run [make player execute command "/Â§vautopunishtoggle Motion A-7"] if {GUARD.CHECK.MOTION.A-7} is not set
    format slot 20 of player with gray wool named "&3Motion &7(A-7)" to run [make player execute command "/Â§vautopunishtoggle Motion A-7"] if {GUARD.CHECK.MOTION.A-7} is set
    format slot 21 of player with lime wool named "&3Motion &7(A-8)" to run [make player execute command "/Â§vautopunishtoggle Motion A-8"] if {GUARD.CHECK.MOTION.A-8} is not set
    format slot 21 of player with gray wool named "&3Motion &7(A-8)" to run [make player execute command "/Â§vautopunishtoggle Motion A-8"] if {GUARD.CHECK.MOTION.A-8} is set
    format slot 22 of player with lime wool named "&3Motion &7(A-9)" to run [make player execute command "/Â§vautopunishtoggle Motion A-9"] if {GUARD.CHECK.MOTION.A-9} is not set
    format slot 22 of player with gray wool named "&3Motion &7(A-9)" to run [make player execute command "/Â§vautopunishtoggle Motion A-9"] if {GUARD.CHECK.MOTION.A-9} is set
    format slot 23 of player with lime wool named "&3Motion &7(B-1)" to run [make player execute command "/Â§vautopunishtoggle Motion B-1"] if {GUARD.CHECK.MOTION.B-1} is not set
    format slot 23 of player with gray wool named "&3Motion &7(B-1)" to run [make player execute command "/Â§vautopunishtoggle Motion B-1"] if {GUARD.CHECK.MOTION.B-1} is set
    format slot 24 of player with lime wool named "&3Motion &7(B-2)" to run [make player execute command "/Â§vautopunishtoggle Motion B-2"] if {GUARD.CHECK.MOTION.B-2} is not set
    format slot 24 of player with gray wool named "&3Motion &7(B-2)" to run [make player execute command "/Â§vautopunishtoggle Motion B-2"] if {GUARD.CHECK.MOTION.B-2} is set
    format slot 25 of player with lime wool named "&3Motion &7(B-3)" to run [make player execute command "/Â§vautopunishtoggle Motion B-3"] if {GUARD.CHECK.MOTION.B-3} is not set
    format slot 25 of player with gray wool named "&3Motion &7(B-3)" to run [make player execute command "/Â§vautopunishtoggle Motion B-3"] if {GUARD.CHECK.MOTION.B-3} is set
    format slot 26 of player with lime wool named "&3NoFall &7(A)" to run [make player execute command "/Â§vautopunishtoggle NoFall A"] if {GUARD.CHECK.NOFALL.A} is not set 
    format slot 26 of player with gray wool named "&3NoFall &7(A)" to run [make player execute command "/Â§vautopunishtoggle NoFall A"] if {GUARD.CHECK.NOFALL.A} is set
    format slot 27 of player with lime wool named "&3Inventory &7(A)" to run [make player execute command "/Â§vautopunishtoggle Inventory A"] if {GUARD.CHECK.INVENTORY.A} is not set
    format slot 27 of player with gray wool named "&3Inventory &7(A)" to run [make player execute command "/Â§vautopunishtoggle Inventory A"] if {GUARD.CHECK.INVENTORY.A} is set
    format slot 28 of player with lime wool named "&3Inventory &7(B)" to run [make player execute command "/Â§vautopunishtoggle Inventory B"] if {GUARD.CHECK.INVENTORY.B} is not set
    format slot 28 of player with gray wool named "&3Inventory &7(B)" to run [make player execute command "/Â§vautopunishtoggle Inventory B"] if {GUARD.CHECK.INVENTORY.B} is set
    format slot 29 of player with lime wool named "&3Inventory &7(C)" to run [make player execute command "/Â§vautopunishtoggle Inventory C"] if {GUARD.CHECK.INVENTORY.C} is not set
    format slot 29 of player with gray wool named "&3Inventory &7(C)" to run [make player execute command "/Â§vautopunishtoggle Inventory C"] if {GUARD.CHECK.INVENTORY.C} is set
    format slot 30 of player with lime wool named "&3Inventory &7(D)" to run [make player execute command "/Â§vautopunishtoggle Inventory D"] if {GUARD.CHECK.INVENTORY.D} is not set
    format slot 30 of player with gray wool named "&3Inventory &7(D)" to run [make player execute command "/Â§vautopunishtoggle Inventory D"] if {GUARD.CHECK.INVENTORY.D} is set
    format slot 31 of player with lime wool named "&3Jesus &7(A)" to run [make player execute command "/Â§vautopunishtoggle Jesus A"] if {GUARD.CHECK.JESUS.A} is not set
    format slot 31 of player with gray wool named "&3Jesus &7(A)" to run [make player execute command "/Â§vautopunishtoggle Jesus A"] if {GUARD.CHECK.JESUS.A} is not set
    format slot 32 of player with lime wool named "&3Jesus &7(B)" to run [make player execute command "/Â§vautopunishtoggle Jesus B"] if {GUARD.CHECK.JESUS.B} is not set 
    format slot 32 of player with gray wool named "&3Jesus &7(B)" to run [make player execute command "/Â§vautopunishtoggle Jesus B"] if {GUARD.CHECK.JESUS.B} is not set
    format slot 33 of player with lime wool named "&3Jesus &7(C)" to run [make player execute command "/Â§vautopunishtoggle Jesus C"] if {GUARD.CHECK.JESUS.C} is not set
    format slot 33 of player with gray wool named "&3Jesus &7(C)" to run [make player execute command "/Â§vautopunishtoggle Jesus C"] if {GUARD.CHECK.JESUS.C} is not set
    format slot 34 of player with lime wool named "&3Speed &7(A-1)" to run [make player execute command "/Â§vautopunishtoggle Speed A-1"] if {GUARD.CHECK.SPEED.A-1} is not set
    format slot 34 of player with gray wool named "&3Speed &7(A-1)" to run [make player execute command "/Â§vautopunishtoggle Speed A-1"] if {GUARD.CHECK.SPEED.A-1} is set
    format slot 35 of player with lime wool named "&3Speed &7(A-2)" to run [make player execute command "/Â§vautopunishtoggle Speed A-2"] if {GUARD.CHECK.SPEED.A-2} is not set
    format slot 35 of player with gray wool named "&3Speed &7(A-2)" to run [make player execute command "/Â§vautopunishtoggle Speed A-2"] if {GUARD.CHECK.SPEED.A-2} is not set
    format slot 36 of player with lime wool named "&3Speed &7(A-3)" to run [make player execute command "/Â§vautopunishtoggle Speed A-3"] if {GUARD.CHECK.SPEED.A-3} is not set
    format slot 36 of player with gray wool named "&3Speed &7(A-3)" to run [make player execute command "/Â§vautopunishtoggle Speed A-3"] if {GUARD.CHECK.SPEED.A-3} is not set
    format slot 37 of player with lime wool named "&3Speed &7(B-1)" to run [make player execute command "/Â§vautopunishtoggle Speed B-1"] if {GUARD.CHECK.SPEED.B-1} is not set
    format slot 37 of player with gray wool named "&3Speed &7(B-1)" to run [make player execute command "/Â§vautopunishtoggle Speed B-1"] if {GUARD.CHECK.SPEED.B-1} is not set
    format slot 38 of player with lime wool named "&3Speed &7(B-2)" to run [make player execute command "/Â§vautopunishtoggle Speed B-2"] if {GUARD.CHECK.SPEED.B-2} is not set
    format slot 38 of player with gray wool named "&3Speed &7(B-2)" to run [make player execute command "/Â§vautopunishtoggle Speed B-2"] if {GUARD.CHECK.SPEED.B-2} is not set
    format slot 39 of player with lime wool named "&3Speed &7(B-3)" to run [make player execute command "/Â§vautopunishtoggle Speed B-3"] if {GUARD.CHECK.SPEED.B-3} is not set
    format slot 39 of player with gray wool named "&3Speed &7(B-3)" to run [make player execute command "/Â§vautopunishtoggle Speed B-3"] if {GUARD.CHECK.SPEED.B-3} is not set
    format slot 40 of player with lime wool named "&3Speed &7(B-4)" to run [make player execute command "/Â§vautopunishtoggle Speed B-4"] if {GUARD.CHECK.SPEED.B-4} is not set
    format slot 40 of player with gray wool named "&3Speed &7(B-4)" to run [make player execute command "/Â§vautopunishtoggle Speed B-4"] if {GUARD.CHECK.SPEED.B-4} is not set
    format slot 41 of player with lime wool named "&3Speed &7(B-5)" to run [make player execute command "/Â§vautopunishtoggle Speed B-5"] if {GUARD.CHECK.SPEED.B-5} is not set
    format slot 41 of player with gray wool named "&3Speed &7(B-5)" to run [make player execute command "/Â§vautopunishtoggle Speed B-5"] if {GUARD.CHECK.SPEED.B-5} is not set
    format slot 42 of player with lime wool named "&3Speed &7(C-1)" to run [make player execute command "/Â§vautopunishtoggle Speed C-1"] if {GUARD.CHECK.SPEED.C-1} is not set
    format slot 42 of player with gray wool named "&3Speed &7(C-1)" to run [make player execute command "/Â§vautopunishtoggle Speed C-1"] if {GUARD.CHECK.SPEED.C-1} is not set
    format slot 43 of player with lime wool named "&3Speed &7(C-2)" to run [make player execute command "/Â§vautopunishtoggle Speed C-2"] if {GUARD.CHECK.SPEED.C-2} is not set
    format slot 43 of player with gray wool named "&3Speed &7(C-2)" to run [make player execute command "/Â§vautopunishtoggle Speed C-2"] if {GUARD.CHECK.SPEED.C-2} is not set
    format slot 44 of player with lime wool named "&3Speed &7(C-3)" to run [make player execute command "/Â§vautopunishtoggle Speed C-3"] if {GUARD.CHECK.SPEED.C-3} is not set
    format slot 44 of player with gray wool named "&3Speed &7(C-3)" to run [make player execute command "/Â§vautopunishtoggle Speed C-3"] if {GUARD.CHECK.SPEED.C-3} is not set
    format slot 45 of player with lime wool named "&3Speed &7(D-1)" to run [make player execute command "/Â§vautopunishtoggle Speed D-1"] if {GUARD.CHECK.SPEED.D-1} is not set
    format slot 45 of player with gray wool named "&3Speed &7(D-1)" to run [make player execute command "/Â§vautopunishtoggle Speed D-1"] if {GUARD.CHECK.SPEED.D-1} is not set
    format slot 46 of player with lime wool named "&3Speed &7(D-2)" to run [make player execute command "/Â§vautopunishtoggle Speed D-2"] if {GUARD.CHECK.SPEED.D-2} is not set
    format slot 46 of player with gray wool named "&3Speed &7(D-2)" to run [make player execute command "/Â§vautopunishtoggle Speed D-2"] if {GUARD.CHECK.SPEED.D-2} is not set
    format slot 47 of player with lime wool named "&3Speed &7(D-3)" to run [make player execute command "/Â§vautopunishtoggle Speed D-3"] if {GUARD.CHECK.SPEED.D-3} is not set
    format slot 47 of player with gray wool named "&3Speed &7(D-3)" to run [make player execute command "/Â§vautopunishtoggle Speed D-3"] if {GUARD.CHECK.SPEED.D-3} is not set
    format slot 48 of player with lime wool named "&3Interact &7(A)" to run [make player execute command "/Â§vautopunishtoggle Interact A"] if {GUARD.CHECK.INTERACT.A} is not set
    format slot 48 of player with gray wool named "&3Interact &7(A)" to run [make player execute command "/Â§vautopunishtoggle Interact A"] if {GUARD.CHECK.INTERACT.A} is not set
    format slot 49 of player with lime wool named "&3Interact &7(B)" to run [make player execute command "/Â§vautopunishtoggle Interact B"] if {GUARD.CHECK.INTERACT.B} is not set
    format slot 49 of player with gray wool named "&3Interact &7(B)" to run [make player execute command "/Â§vautopunishtoggle Interact B"] if {GUARD.CHECK.INTERACT.B} is not set
    format slot 50 of player with lime wool named "&3Interact &7(C)" to run [make player execute command "/Â§vautopunishtoggle Interact C"] if {GUARD.CHECK.INTERACT.C} is not set
    format slot 50 of player with gray wool named "&3Interact &7(C)" to run [make player execute command "/Â§vautopunishtoggle Interact C"] if {GUARD.CHECK.INTERACT.C} is not set
    format slot 51 of player with lime wool named "&3NoSlow &7(A)" to run [make player execute command "/Â§vautopunishtoggle NoSlow A"] if {GUARD.CHECK.NOSLOW.A} is not set
    format slot 51 of player with gray wool named "&3NoSlow &7(A)" to run [make player execute command "/Â§vautopunishtoggle NoSlow A"] if {GUARD.CHECK.NOSLOW.A} is not set
    format slot 52 of player with lime wool named "&3NoWeb &7(A)" to run [make player execute command "/Â§vautopunishtoggle NoWeb A"] if {GUARD.CHECK.NOWEB.A} is not set
    format slot 52 of player with gray wool named "&3NoWeb &7(A)" to run [make player execute command "/Â§vautopunishtoggle NoWeb A"] if {GUARD.CHECK.NOWEB.A} is not set
    format slot 53 of player with paper named "&7&oNext page" to run [make player execute command "/Â§vgui22"]
command /Â§vgui22: 
  trigger:
    close player's inventory
    wait 1 ticks
    open chest with 6 rows named "&3&lGUARD &8Â» &3&lGUI &8Â» &3&lAutoPunishements" to player
    format slot 0 of player with lime wool named "&3Timer &7(A)" to run [make player execute command "/Â§vautopunishtoggle Timer A"] if {GUARD.CHECK.TIMER.A} is not set
    format slot 0 of player with gray wool named "&3Timer &7(A)" to run [make player execute command "/Â§vautopunishtoggle Timer A"] if {GUARD.CHECK.TIMER.A} is not set
    format slot 1 of player with lime wool named "&3Velocity &7(A)" to run [make player execute command "/Â§vautopunishtoggle Velocity A"] if {GUARD.CHECK.VELOCITY.A} is not set
    format slot 1 of player with gray wool named "&3Velocity &7(A)" to run [make player execute command "/Â§vautopunishtoggle Velocity A"] if {GUARD.CHECK.VELOCITY.A} is not set
    format slot 45 of player with paper named "&7&oPrevious page" to run [make player execute command "/Â§vgui2"]
command /Â§vautopunishtoggle [<text>] [<text>]:
   permission: {@MainPermission}
   trigger:
      if {GUARD.PUNISH.%arg 1%.%arg 2%} is not set:
         set {GUARD.PUNISH.%arg 1%.%arg 2%} to true
         make player execute command "/Â§vgui2"
         stop
      if {GUARD.PUNISH.%arg 1%.%arg 2%} is set:
         delete {GUARD.PUNISH.%arg 1%.%arg 2%}
         make player execute command "/Â§vgui2"