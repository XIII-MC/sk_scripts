options:
   version: BETA-0.2.2
   TestServer: false
   OnlyForOps: false

   #ONLY FOR MINEHUT!
   IgnoreBedrock: true 
   
   #Auto kick haCKers
   AutoPunish: false

   #Permissions
   AlertsPermission: guard.command.alerts
   KickPermission: guard.command.kick
   ClearCachePermission: guard.command.clearcache
   ClearVlsCachePermission: guard.command.clearvls
   VersionPermission: guard.command.version
   BypassPermission: guard.command.bypass
   ThemePermission: guard.command.themes

on any move:
  GDAR_SlimeHandler(player)
  if player have jump boost:
    set {-GUARD::%player%::TEMP::JUMPBOOST} to tier of potion effect jump boost of player
    set {-GUARD::%player%::TEMP::TIMESPAN::JUMPBOOST} to now
    set {-GUARD::%player%::TEMP::HASJUMPBOOST} to true
  else: 
    if player is not on ground:
      if {-GUARD::%player%::TEMP::HASJUMPBOOST} is true:
        set {-GUARD::%player%::TEMP::TIMESPAN::JUMPBOOST} to now
    else:
      delete {-GUARD::%player%::TEMP::HASJUMPBOOST}
  set {-GUARD::%player%::TEMP::TIMESPAN::WATER} to now if block at or under or above player is water or lava
  set {-GUARD::%player%::TEMP::TIMESPAN::SOULSAND} to now if block under player is soul sand
  set {-GUARD::%player%::TEMP::TIMESPAN::FLY} to now if player is flying
  set {-GUARD::%player%::TEMP::TIMESPAN::GAMEMODE} to now if player's gamemode is spectator or creative
  add 1 to {-GUARD::%player%::TEMP::AIRTICKS} if player is not on ground
  set {-GUARD::%player%::TEMP::AIRTICKS} to 0 if player is on ground
  add 1 to {-GUARD::%player%::TEMP::GROUNDTICKS} if player is on ground
  set {-GUARD::%player%::TEMP::GROUNDTICKS} to 0 if player is not on ground
  set {-GUARD::%player%::TEMP::TIMESPAN::CLIMABLETICKS} to now if block at player is vines or ladders or Weeping vine or Weeping Vine block or twisting vine block or twisting vine
  add 1 to {-GUARD::%player%::TEMP::CLIMABLETICKS} if block at player is vines or ladders or Weeping vine or Weeping Vine block or twisting vine block or twisting vine
  set {-GUARD::%player%::TEMP::CLIMABLETICKS} to 0 if block at player is not vines or ladders or Weeping vine or Weeping Vine block or twisting vine block or twisting vine

on any move:
    set {lasttime.%player%} to {time.%player%}
    set {time.%player%} to now
    set {diff2} to "%difference between {lasttime.%player%} and now%"
    replace all " seconds" or " second" in {diff2} with ""
    replace all " minute" or " minutes" in {diff2} with ""
    replace all " hour" or " hours" in {diff2} with ""
    replace all " days" or " day" in {diff2} with ""
    set {diff} to {diff2} parsed as number
    set {diff} to {diff} * 1000
    set {lastbal.%player%} to {bal.%player%}
    set {bal.%player%} to (50 - {diff})
    if difference between {lastbal.%player%} and {bal.%player%} > 48:
        set {lastfroze.%player%} to 0
        if {bal.%player%} > 5:
            set {bal.%player%} to 0
    else:
        if {lastfroze.%player%} < 2:
            add 1 to {lastfroze.%player%}
            if {bal.%player%} > 5:
                set {bal.%player%} to -10
            set {timerbuffer.%player%} to 0
        else if {lastfroze.%player%} <= 2:
            if {bal.%player%} > 5:
                set {bal.%player%} to -10
            if {bal.%player%} < -100:
                set {bal.%player%} to -20
            add 1 to {lastfroze.%player%}
        else:
            add 1 to {lastfroze.%player%}
            if {lastfroze.%player%} > 6:
                if {bal.%player%} < -100:
                    set {bal.%player%} to -20
    if {bal.%player%} > 6:
        {bal.%player%} != 10
        GA_clearly(player, "Timer", "A", "Sped up time", 0, "A", "%{bal.%player%}%", 1, 1, 0) if {lastfroze.%player%} > 6
    else:
        delete {-GUARD::%player%::TEMP::VL::TIMER.A}
on right click:
  set {_RTIME2} to {-GUARD::%player%::TEMP::TIMESPAN::RTIME}
  set {-GUARD::%player%::TEMP::TIMESPAN::RTIME} to now
  set {_RTIME3} to "%difference between {_RTIME2} and now%"
  replace all " seconds" or " second" or " minute" or " minutes" or " hour" or " hours" or " days" or " day" in {_RTIME3} with ""
  set {_RTIME5} to {-GUARD::%player%::TEMP::TIMESPAN::RTIME4}
  set {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} to {_RTIME3} parsed as number
  set {_RTIMELASTCHECKED} to difference between {-GUARD::%player%::TEMP::TIMESPAN::RTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW}
  set {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW} to difference between {-GUARD::%player%::TEMP::TIMESPAN::RTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW} if {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW} = 0
  set {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW} to difference between {_RTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} if difference between {_RTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} < {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW}
  set {-GUARD::%player%::TEMP::TIMESPAN::RTIMEHIGH} to difference between {_RTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} if difference between {_RTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} > {-GUARD::%player%::TEMP::TIMESPAN::RTIMEHIGH}
  GA_clearly(player, "AutoClicker", "D", "Clicking Patterns", 12, "D", "%difference between {-GUARD::%player%::TEMP::RTIMELOW} and {-GUARD::%player%::TEMP::RTIMEHIGH}%", 1, 8, 1) if difference between {-GUARD::%player%::TEMP::TIMESPAN::RTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW} = {_RTIMELASTCHECKED}
  delete {-GUARD::%player%::TEMP::VL::AUTOCLICKER.D} if difference between {-GUARD::%player%::TEMP::TIMESPAN::RTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::RTIMELOW} != {_RTIMELASTCHECKED}
  GA_clearly(player, "AutoClicker", "A", "Clicking Patterns", 12, "a", "%{-GUARD::%player%::TEMP::LTIMEHIGH} and {-GUARD::%player%::TEMP::LTIMELOW}%", 1, 7, 1) if difference between {_RTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} < 0.005
  delete {-GUARD::%player%::TEMP::VL::AUTOCLICKER.A} if difference between {_RTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::RTIME4} > 0.005

on left click:
  set {_LTIME2} to {-GUARD::%player%::TEMP::TIMESPAN::LTIME}
  set {-GUARD::%player%::TEMP::TIMESPAN::LTIME} to now
  set {_LTIME3} to "%difference between {_LTIME2} and now%"
  replace all " seconds" or " second" or " minute" or " minutes" or " hour" or " hours" or " days" or " day" in {_LTIME3} with ""
  set {_LTIME5} to {-GUARD::%player%::TEMP::TIMESPAN::LTIME4}
  set {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} to {_LTIME3} parsed as number
  set {_LLASTTIMECHECKED} to difference between {-GUARD::%player%::TEMP::TIMESPAN::LTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW}
  set {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW} to difference between {-GUARD::%player%::TEMP::TIMESPAN::LTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW} if {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW} = 0
  set {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW} to difference between {_LTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} if difference between {_LTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} < {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW}
  set {-GUARD::%player%::TEMP::TIMESPAN::LTIMEHIGH} to difference between {_LTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} if difference between {_LTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} > {-GUARD::%player%::TEMP::TIMESPAN::LTIMEHIGH}
  GA_clearly(player, "AutoClicker", "C", "Clicking Patterns", 12, "C", "%{-GUARD::%player%::TEMP::LTIMEHIGH} and {-GUARD::%player%::TEMP::LTIMELOW}%", 1, 8, 1) if difference between {-GUARD::%player%::TEMP::TIMESPAN::LTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW} = {_LLASTTIMECHECKED}
  delete {-GUARD::%player%::TEMP::VL::AUTOCLICKER.C} if difference between {-GUARD::%player%::TEMP::TIMESPAN::LTIMEHIGH} and {-GUARD::%player%::TEMP::TIMESPAN::LTIMELOW} != {_LLASTTIMECHECKED}
  GA_clearly(player, "AutoClicker", "B", "Clicking Patterns", 12, "B", "%{-GUARD::%player%::TEMP::LTIMEHIGH} and {-GUARD::%player%::TEMP::LTIMELOW}%", 1, 7, 1) if difference between {_LTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} < 0.005
  delete {-GUARD::%player%::TEMP::VL::AUTOCLICKER.B} if difference between {_LTIME5} and {-GUARD::%player%::TEMP::TIMESPAN::LTIME4} > 0.005
  
on place:
  if y coordinate of event-block < y coordinate of player:
    block under event-block is air or void air
    player's gamemode is not creative or spectator
    set {_pitch} to player's pitch
    set {_dist} to {_DistX} if {_DistX} > {_DistZ}
    set {_dist} to {_DistZ} if {_DistZ} > {_DistX}
    set {_predictedPitch} to {_pitch} if {_dist} < 1.2
    set {_predictedPitch} to {_pitch} if ({_dist} + 1.4) > 1.2
    set {-GUARD::%player%::TEMP::LASTYAW} to {-GUARD::.%player%::TEMP::YAWDIFF}
    set {-GUARD::.%player%::TEMP::YAWDIFF} to player's yaw
    set {_ScaffoldD} to {-GUARD::.%player%::TEMP::YAWDIFF} - {-GUARD::%player%::TEMP::LASTYAW}
    #send "%difference between (difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D}) and {-GUARD::%player%::TEMP::LASTSCAFFOLD.DIFFERENCE}% | %{-GUARD::%player%::TEMP::LASTSCAFFOLD.DIFFERENCE}%"
    GA_clearly(player, "Scaffold", "A", "Impossible Placement", 3, "A", "%{_predictedPitch}%", 0.5, 1, 2) if {_predictedPitch} is between 90 and 88.75
    if player is sprinting:
      GA_clearly(player, "Scaffold", "B", "Impossible Sprinting", 5, "B", "%{_predictedPitch}%", 0, 0, 1) if {_predictedPitch} is between 73 and 90
    GA_clearly(player, "Scaffold", "C", "Impossible Placement", 3, "C", "NaN", 0.5, 2, 2) if event-block is not player's targeted block 
    GA_clearly(player, "Scaffold", "D", "Impossible Rotations", 0, "D", "%{_ScaffoldD}%", 0.5, 2, 0) if difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D} < 6
    GA_clearly(player, "Scaffold", "E", "Rotations Pattern", 0, "E", "%{_ScaffoldD}%", 0.5, 0.5, 0) if difference between (difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D}) and {-GUARD::%player%::TEMP::LASTSCAFFOLD.DIFFERENCE} < 0.5
    if {-GUARD::%player%::TEMP::VL::SCAFFOLD.A} >= 0.25:
      remove 0.25 from {-GUARD::%player%::TEMP::VL::SCAFFOLD.A} if {_predictedPitch} is not between 90 and 88.75
    if {-GUARD::%player%::TEMP::VL::SCAFFOLD.C} >= 0.25:
      remove 0.25 from {-GUARD::%player%::TEMP::VL::SCAFFOLD.C} if event-block is player's targeted block 
    delete {-GUARD::%player%::TEMP::VL::SCAFFOLD.D} if difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D} = 0
    delete {-GUARD::%player%::TEMP::VL::SCAFFOLD.D} if difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D} > 6
    delete {-GUARD::%player%::TEMP::VL::SCAFFOLD.E} if difference between (difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D}) and {-GUARD::%player%::TEMP::LASTSCAFFOLD.DIFFERENCE} = 0
    set {-GUARD::%player%::TEMP::LASTSCAFFOLD.DIFFERENCE} to difference between {_ScaffoldD} and {-GUARD::%player%::TEMP::SCAFFOLD.D}
    set {-GUARD::%player%::TEMP::SCAFFOLD.D} to {_ScaffoldD}

function GA_clearly(p: player, cheat: text, type: text, dev: text, vl: number, tpvl: text, v: text, bufferadd: number, buffer: number, punish: number):
  {_p}'s gamemode is not creative or spectator
  {-GUARD::%{_p}%::BYPASSED} is not set
  if {_p}'s name contains "*":
    stop if {@IgnoreBedrock} is true
  fly mode of {_p} is false
  {-GUARD::CHECK::%{_cheat}%.%{_tpvl}%} is not set
  add {_bufferadd} to {-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%}
  set {-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%} to 1 if {_buffer} = 0
  {-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%} > {_buffer}
  add 1 to {-GUARD::%{_p}%::VL::%{_cheat}%.%{_tpvl}%}
  send formatted "<tooltip:&7Check: %{GUARD::THEME::COLOR::MAIN}%%{_cheat}% &7(%{_tpvl}%&7)%nl%&7Value: %{GUARD::THEME::COLOR::MAIN}%%{_v}% %nl%&7Informations: %{GUARD::THEME::COLOR::MAIN}%%{_dev}%%nl%&7Buffer: %{GUARD::THEME::COLOR::MAIN}%%{-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%}%&7/%{GUARD::THEME::COLOR::MAIN}%%{_buffer}%%nl%%nl%        &7&nClick to teleport !><cmd: /tp %{_p}%>%{GUARD::THEME::COLOR::MAIN}%&lGUARD &8» %{GUARD::THEME::COLOR::SECOND}%%{_p}%&7 failed %{GUARD::THEME::COLOR::SECOND}%%{_cheat}% %{_type}% &7(%{GUARD::THEME::COLOR::MAIN}%x%{-GUARD::%{_p}%::VL::%{_cheat}%.%{_tpvl}%}%&7)" to all players where [{-GUARD::%input%::ALERTS} is true]
  if {@TestServer} = true:
    if {@OnlyForOps} = true:
      stop if {_p} doesn't have permission "GUARD.op"
    if {-GUARD::%{_p}%::VL::%{_cheat}%.%{_tpvl}%} >= {_vl}:
      {_vl} != 0
      send title "&cYou would be kicked by now." with subtitle "%{GUARD::THEME::PREFIX}% &fUnfair Advantage" to {_p}
      stop
  if {@AutoPunish} is true:
    {_vl} != 0
    {-GUARD::%{_p}%::VL::%{_cheat}%.%{_tpvl}%} >= {_vl} 
    kick {_p} due to "%{GUARD::THEME::PREFIX}% &fUnfair Advtange." if {_punish} = 1
    if {_punish} = 2:
      make server execute command "/ban %{_p}% perm Cheating -s"
      broadcast ""
      broadcast "%{GUARD::THEME::PREFIX}% &c%{_p}% &fhas been removed for &cUnfair Advantage"
      broadcast ""
      strike lightning at location of {_p}
      create a fake explosion at location of {_p}
    make server execute command "/mute %{_p}% 1h -s" if {_punish} = 3

function GDAR_getLastAirAbove(p: player, h: number, v: text):
  if block {_h} above north {_p} is air or void air:
    if block {_h} above south {_p} is air or void air:
      if block {_h} above west {_p} is air or void air:
        if block {_h} above east {_p} is air or void air:
          if block {_h} above {_p} is air or void air:
            if block {_h} above north east {_p} is air or void air:
              if block {_h} above north west {_p} is air or void air:
                if block {_h} above south east {_p} is air or void air:
                  if block {_h} above south west {_p} is air or void air:
                    stop
  set {-GUARD::%{_p}%::TEMP::TIMESPAN::%{_v}%} to now

function GDAR_getLastAt(p: player, b: item type, v: text) :: time span:
  block above north {_p} is not {_b}:
    block above south {_p} is not {_b}:
      block above west {_p} is not {_b}:
        block above east {_p} is not {_b}:
          block above {_p} is not {_b}:
            block above north east {_p} is not {_b}:
              block above north west {_p} is not {_b}:
                block above south east {_p} is not {_b}:
                  block above south west {_p} is not {_b}:
                    set {-GUARD::%{_p}%::TEMP::TIMESPAN::%{_v}%} to now
                    return difference between {-GUARD::%{_p}%::TEMP::TIMESPAN::%{_v}%} and now

function GDA_getLastAtAir(p: player, t: boolean) :: boolean:
  set {_b} to {_p}'s location
  if {_t} = true:
    return true if block at {_b} is water or lava
  block at {_b} is air or water or lava:
    add 1 to z location of {_b}
    if {_t} = true:
      return true if block at {_b} is water or lava
    block at {_b} is air or water or lava:
      remove 2 from z location of {_b}
      if {_t} = true:
        return true if block at {_b} is water or lava
      block at {_b} is air or water or lava:
        add 1 to z location of {_b}
        add 1 to x location of {_b}
        if {_t} = true:
          return true if block at {_b} is water or lava
        block at {_b} is air or water or lava:
          remove 2 from x location of {_b}
          if {_t} = true:
            return true if block at {_b} is water or lava
          block at {_b} is air or water or lava:
            add 1 to z location of {_b}
            if {_t} = true:
              return true if block at {_b} is water or lava
            block at {_b} is air or water or lava:
              remove 2 from z location of {_b}
              if {_t} = true:
                return true if block at {_b} is water or lava
              block at {_b} is air or water or lava:
                add 2 to x location of {_b}
                if {_t} = true:
                  return true if block at {_b} is water or lava
                block at {_b} is air or water or lava:
                  add 2 to z location of {_b}
                  if {_t} = true:
                    return true if block at {_b} is water or lava
                  block at {_b} is air or water or lava:
                    if {_t} = true:
                      return true if block at {_b} is water or lava
                    return true if {_t} = false
  return false if {_t} = false
  return false if {_t} = true
on quit:
  delete {-GUARD::%player%::*}
every 2 seconds:
  loop all players:
    set {-GUARD::%loop-player%::TEMP::TIMESPAN::LTIMELOW} to 0
    set {-GUARD::%loop-player%::TEMP::TIMESPAN::LTIMEHIGH} to 0
    set {-GUARD::%loop-player%::TEMP::TIMESPAN::RTIMELOW} to 0
    set {-GUARD::%loop-player%::TEMP::TIMESPAN::RTIMEHIGH} to 0
    delete {-GUARD::%loop-player%::TEMP::VL::BADPACKET.D}
function getDev(a: number, b: number) :: number: 
  if {_a} < {_b}:
    return getDev({_b}, {_a})
  if abs({_b}) < 0.001:
    return {_a}
  else:
    return getDev({_b}, {_a} - floor({_a} / {_b}) * {_b})
function GDA_Teleport(p: player):
  teleport {_p} to {-GUARD::%{_p}%::TEMP::LAGBACK} if difference between now and {-GUARD::%{_p}%::TEMP::TIMESPAN::LASTTP} > 0.6 second
  set {-GUARD::%{_p}%::TEMP::TIMESPAN::LASTTP} to now
function getGCD(current: number, previous: number) :: number:
    if {_previous} <= 16384:
        return {_current}
    return getGCD({_previous}, mod({_current}, {_previous}))
function GDA_getLastBlockReversed(p: player, b: item type, v: text, h: number) :: time span:
  if block {_h} below {_p} is not {_b}:
    if block {_h} below north {_p} is not {_b}:
      if block {_h} below south {_p} is not {_b}:
        if block {_h} below west {_p} is not {_b}:
          if block {_h} below east {_p} is not {_b}:
            if block {_h} below north east {_p} is not {_b}:
              if block {_h} below north west {_p} is not {_b}:
                if block {_h} below south east {_p} is not {_b}:
                  if block {_h} below south west {_p} is not {_b}:
                    stop
  set {-GUARD::%{_p}%::TEMP::TIMESPAN::%{_v}%} to now
  return difference between {-GUARD::%{_p}%::TEMP::TIMESPAN::%{_v}%} and now
function GDAR_SlimeHandler(p: player):
  set {-GUARD::%{_p}%::TEMP::SLIME} to true if GDA_getLastBlockReversed({_p}, slime block, "SLIME", 1) < 0.2 second
  delete {-GUARD::%{_p}%::TEMP::SLIME} if block under {_p} is not air or slime block or water or lava
  {-GUARD::%{_p}%::TEMP::SLIME} is set
  set {_Time} to "%(fall distance of {_p} / 2)% seconds" parsed as a time span if block under {_p} is air
  set {-GUARD::%{_p}%::TEMP::TIMESPAN::SLIMESTOP} to now if {_Time} = 0 seconds
on join:
   set {-GUARD::%player%::ALERTS} to true if player has permission "guard.alerts.auto"
   send "%{GUARD::THEME::PREFIX}% &fAlers output &aenabled" to player if player has permission "guard.alerts.auto"
   set {-GUARD::%player%::TEMP::TIMESPAN::PLACE} to now
   delete {-GUARD::%player%::TEMP::MOUNTSTATE}
   set {-GUARD::%player%::TEMP::TIMESPAN::UNSAFEDAMAGE} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::DAMAGE} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::KBDAMAGE} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::SLIMESTOP} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::WATER} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::JUMPBOOST} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::BUBBLE} to now 
   set {-GUARD::%player%::TEMP::TIMESPAN::MOUNT} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::CLIMABLETICKS} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::SLIME} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::ENDERPEARL} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::ICE} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::ABOVETICKS} to now
   set {-GUARD::%player%::TEMP::TIMESPAN::ABOVEAT} to now
   set {-GUARD::%player%::TEMP::LASTTP} to now
   set {-GUARD::%player%::TEMP::SPEED.DIFF} to 0
command /guard [<text>] [<offline player>]:
  trigger:
    if arg 1 is not set:
      send "&7&m--------------------------------------"
      send "&f/guard alerts &7- &fToggles Alerts"
      send "&f/guard kick [PLAYER] &7- &fKick a player using GUARD"
      send "&f/guard version &7- &fReturns GUARD's version"
      send "&f/guard clearcache &7- &fClear GUARD's cache &4⚠"
      send "&f/guard clearvls &7- &fClear buffers and violations"
      send "&f/guard bypass [PLAYER] &7- &fMakes a player exempt from GUARD"
      send "&f/guard theme [LIST,COLOR] &7- &fSwitches GUARD's theme"
      send "&7&m--------------------------------------"
    if arg 1 is "theme":
      player has Permission "{@ThemePermission}"
      if arg 2 is "list":
        send "&7&m--------------------------------------"
        send ""
        send "&7Currently: %{GUARD::THEME::NAME}% &8| %{GUARD::THEME::PREFIX}%"
        send ""
        send "&7(&6Gold&7) &6&lGUARD &8» &e%player% &7failed &eFlight A &7(&6x69&7)"
        send ""
        send "&7(&3Cyan&7) &3&lGUARD &8» &f%player% &7failed &fMotion B &7(&3x69&7)"
        send ""
        send "&7(&9Blue&7) &9&lGUARD &8» &f%player% &7failed &fAim C &7(&9x69&7)"
        send ""
        send "&7(&bAqua&7) &b&lGUARD &8» &b%player% &7failed &bKillAura D &7(&bx69&7)"
        send ""
        send "&7(&cRed&7) &c&lGUARD &8» &c%player% &7failed &cStep F &7(&cx69&7)"
        send ""
        send "&7(&4Blood&7) &4&lGUARD &8» &c%player% &7failed &cStrafe G &7(&4x69&7)"
        send ""
        send "&7(&eYellow&7) &e&lGUARD &8» &f%player% &7failed &fVelocity H &7(&ex69&7)"
        send ""
        send "&7(&5Purple&7) &5&lGUARD &8» &d%player% &7failed &dReach I &7(&5x69&7)"
        send ""
        send "&7(&dPink&7) &d&lGUARD &8» &f%player% &7failed &fGround J &7(&dx69&7)"
        send ""
        send "&7(&aLime&7) &a&lGUARD &8» &f%player% &7failed &fBadPacket K &7(&ax69&7)"
        send ""
        send "&7(&2Green&7) &2&lGUARD &8» &a%player% &7failed &aScaffold L &7(&2x69&7)"
        send ""
        send "&7(&0Black&7) &0&lGUARD &8» %player% &7failed &8Speed M &7(&0x69&7)"
        send ""
        send "&7(&fWhite&7) &f&lGUARD &8» &f%player% &7failed &fAutoClicker N &7(&fx69&7)"
        send "&7&m--------------------------------------"
      if arg 2 is "gold":
        set {GUARD::THEME::NAME} to "&6Gold"
        set {GUARD::THEME::PREFIX} to "&6&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&6"
        set {GUARD::THEME::COLOR::SECOND} to "&e"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &6Gold"
      if arg 2 is "cyan":
        set {GUARD::THEME::NAME} to "&3Cyan"
        set {GUARD::THEME::PREFIX} to "&3&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&3"
        set {GUARD::THEME::COLOR::SECOND} to "&f"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &3Cyan"
      if arg 2 is "blue":
        set {GUARD::THEME::NAME} to "&9Blue"
        set {GUARD::THEME::PREFIX} to "&9&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&9"
        set {GUARD::THEME::COLOR::SECOND} to "&f"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &9Blue"
      if arg 2 is "aqua":
        set {GUARD::THEME::NAME} to "&bAqua"
        set {GUARD::THEME::PREFIX} to "&b&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&b"
        set {GUARD::THEME::COLOR::SECOND} to "&b"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &bAqua"
      if arg 2 is "red":
        set {GUARD::THEME::NAME} to "&cRed"
        set {GUARD::THEME::PREFIX} to "&c&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&c"
        set {GUARD::THEME::COLOR::SECOND} to "&c"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &cRed"
      if arg 2 is "blood":
        set {GUARD::THEME::NAME} to "&4Blood"
        set {GUARD::THEME::PREFIX} to "&4&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&4"
        set {GUARD::THEME::COLOR::SECOND} to "&c"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &4Blood"
      if arg 2 is "yellow":
        set {GUARD::THEME::NAME} to "&eYellow"
        set {GUARD::THEME::PREFIX} to "&e&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&e"
        set {GUARD::THEME::COLOR::SECOND} to "&f"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &eYellow"
      if arg 2 is "purple":
        set {GUARD::THEME::NAME} to "&5Purple"
        set {GUARD::THEME::PREFIX} to "&5&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&5"
        set {GUARD::THEME::COLOR::SECOND} to "&d"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &5Purple"
      if arg 2 is "pink":
        set {GUARD::THEME::NAME} to "&dPink"
        set {GUARD::THEME::PREFIX} to "&d&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&d"
        set {GUARD::THEME::COLOR::SECOND} to "&f"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &dPink"
      if arg 2 is "lime":
        set {GUARD::THEME::NAME} to "&aLime"
        set {GUARD::THEME::PREFIX} to "&a&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&a"
        set {GUARD::THEME::COLOR::SECOND} to "&f"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to Lime"
      if arg 2 is "green":
        set {GUARD::THEME::NAME} to "&2Green"
        set {GUARD::THEME::PREFIX} to "&2&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&2"
        set {GUARD::THEME::COLOR::SECOND} to "&a"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &2Green"
      if arg 2 is "black":
        set {GUARD::THEME::NAME} to "&0Black"
        set {GUARD::THEME::PREFIX} to "&0&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&0"
        set {GUARD::THEME::COLOR::SECOND} to "&8"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &0Black"
      if arg 2 is "white":
        set {GUARD::THEME::NAME} to "White"
        set {GUARD::THEME::PREFIX} to "&f&lGUARD &8»"
        set {GUARD::THEME::COLOR::MAIN} to "&f"
        set {GUARD::THEME::COLOR::SECOND} to "&f"
        send "%{GUARD::THEME::PREFIX}% &aTheme set to &fWhite"
    if arg 1 is "alerts":
      if player doesn't have permission "{@AlertsPermission}":
        send "%{GUARD::THEME::PREFIX}% &cMissing Permission."
        stop
      set {-GUARD::%player%::ALERTS} to true if {-GUARD::%player%::ALERTS} is not set
      if {-GUARD::%player%::ALERTS} is false:
        set {-GUARD::%player%::ALERTS} to true
        send "%{GUARD::THEME::PREFIX}% &fAlerts output &aenabled" 
        stop 
      if {-GUARD::%player%::ALERTS} is true:
        set {-GUARD::%player%::ALERTS} to false 
        send "%{GUARD::THEME::PREFIX}% &fAlerts output &cdisabled"
        stop
    if arg 1 is "version":
      if player doesn't have permission "{@VersionPermission}":
        send "%{GUARD::THEME::PREFIX}% &cMissing Permission."
        stop
      send "%{GUARD::THEME::PREFIX}% &fRunning &7{@version}"
    if arg 1 is "kick":
      if player doesn't have permission "{@KickPermission}":
        send "%{GUARD::THEME::PREFIX}% &cMissing Permission."
        stop
      send "%{GUARD::THEME::PREFIX}% &cUsage: /guard kick [PLAYER]" if arg 2 is not set
      if arg 2 is set:
        kick arg 2 due to "%{GUARD::THEME::PREFIX}% &fUnfair Advantage"
        send "%{GUARD::THEME::PREFIX}% &c%arg 2% has been kicked." to player
    if arg 1 is "clearcache":
      if player doesn't have permission "{@ClearCachePermission}":
        send "%{GUARD::THEME::PREFIX}% &cMissing Permission."
        stop
      if {-GUARD::%player%::TEMP::CACHECMD} is not set:
        send "%{GUARD::THEME::PREFIX}% &4⚠ &cWarning! Are you sure to do this action ? It's irreversible. To confirm retype the command."
        set {-GUARD::%player%::TEMP::CACHECMD} to now
        wait 10 second
        send "%{GUARD::THEME::PREFIX}% &fCache clear command has expired." to player if difference between {-GUARD::%player%::TEMP::CACHECMD} and now > 9.9 seconds
        delete {-GUARD::%player%::TEMP::CACHECMD}
        stop
      if {-GUARD::%player%::TEMP::CACHECMD} is set:
        delete {-GUARD::%player%::TEMP::CACHECMD}
        send "%{GUARD::THEME::PREFIX}% &6Clearing cache..."
        delete {-GUARD::*}
        send "%{GUARD::THEME::PREFIX}% &aCache cleared ✔"
        stop
    if arg 1 is "clearvls":
      if player doesn't have permission "{@ClearVlsCachePermission}":
        send "%{GUARD::THEME::PREFIX}% &cMissing Permission."
        stop
      delete {-GUARD::%player%::TEMP::VL::*}
      delete {-GUARD::%player%::VL::*}
      send "%{GUARD::THEME::PREFIX}% &aBuffers and violations reseted ✔"
    if arg 1 is "bypass":
      if player has Permission "{@BypassPermission}":
        if arg 2 is set:
          if {-GUARD::%arg 2%::BYPASSED} is not set:
            set {-GUARD::%arg 2%::BYPASSED} to true
            send "%{GUARD::THEME::PREFIX}% &f'&e%arg 2%&f' is now exempt."
          else:
            delete {-GUARD::%arg 2%::BYPASSED}
            send "%{GUARD::THEME::PREFIX}% &f'&e%arg 2%&f' is no longer exempt."
      else:
        send "%{GUARD::THEME::PREFIX}% &cMissing Permission."