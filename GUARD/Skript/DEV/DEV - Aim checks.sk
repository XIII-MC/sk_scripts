options:
   guard: &6&lGUARD &8Â»&6

on any move:
  set {-GUARD::%player%::TEMP::PRELOC::2} to {-GUARD::%player%::TEMP::LOC::2}
  set {-GUARD::%player%::TEMP::LOC::2} to {-GUARD::%player%::TEMP::PRELOC::1}
  set {-GUARD::%player%::TEMP::PRELOC::1} to {-GUARD::%player%::TEMP::LOC::1}
  set {-GUARD::%player%::TEMP::LOC::1} to location of player

  GA_clearly(player, "Aim", "C", "Invalid Pitch", 1, "C", "%((player's pitch / (player's pitch * 8)) ^ 1)%", 0, 0, 2) if ((player's pitch / (player's pitch * 8)) ^ 1) != 0.125
  if difference between {-GUARD::%player%::TEMP::TIMESPAN::LASTATTACK} and now < 0.1 second:
    set {_GCD} to getGCD(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)
    GDA_getDeltaPitch(player, 1) != 0
    if GDA_getDeltaPitch(player, 1) > 0.1:
      GA_clearly(player, "Aim", "A", "GCD Flaw", 0, "A", "%getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)%", 1, 7, 0) if getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216) < 910936
    GA_clearly(player, "Aim", "B", "Impossible Rotation Switch", 0, "B", "%getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)%", 0, 0, 0) if {-GUARD::%player%::TEMP::SAMPLE::*} contains getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)
    GA_clearly(player, "Aim", "D", "Pitch Pattern", 0, "D", "%sqrt(GDA_getDeltaPitch(player, 1))%", 1, 4, 0) if {-GUARD::%player%::TEMP::LASTSQRTPITCH} = sqrt(GDA_getDeltaPitch(player, 1))
    if GDA_getDeltaPitch(player, 1) < 0.054:
      GA_clearly(player, "Aim", "E", "Fake Cinematic?", 0, "E", "%getDev({_GCD} * 16777216, GDA_getDeltaPitch(player, 1))%", 1, 1, 0) if {_GCD} > 300000
    if {_GCD} > 0:
      GDA_getDeltaPitch(player, 1) > 0.1
      GA_clearly(player, "Aim", "F", "GCD", 8, "F", "%{_GCD}%", 1, 3, 2) if {_GCD} is between 0.000001 and 300000
    if getDev(GDA_getDeltaPitch(player, 1), GDA_getDeltaPitch(player, 1)) > 1:
      GA_clearly(player, "Aim", "G", "Aiming Pattern", 0, "G", "%getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)%", 1, 5, 0) if getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216) is between 8 and 910936
    delete {-GUARD::%player%::TEMP::VL::AIM.A} if getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216) >= 910936
    delete {-GUARD::%player%::TEMP::VL::AIM.A} if "%getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)%" contains "."
    delete {-GUARD::%player%::TEMP::VL::AIM.A} if getDev(GDA_getDeltaPitch(player, 1), GDA_getDeltaPitch(player, 1)) > 3
    if {-GUARD::%player%::TEMP::VL::AIM.B} >= 0.05:
      remove 0.05 from {-GUARD::%player%::TEMP::VL::AIM.B} if "%getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)%" doesn't contain "."
    delete {-GUARD::%player%::TEMP::VL::AIM.D} if sqrt(GDA_getDeltaPitch(player, 1)) != {-GUARD::%player%::TEMP::LASTSQRTPITCH}
    delete {-GUARD::%player%::TEMP::VL::AIM.E} if GDA_getDeltaPitch(player, 1) > 0.1
    delete {-GUARD::%player%::TEMP::VL::AIM.F} if {_GCD} > 300000
    delete {-GUARD::%player%::TEMP::VL::AIM.G} if getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216) is not between 8 and 910936
    set {-GUARD::%player%::TEMP::LASTSQRTPITCH} to sqrt(GDA_getDeltaPitch(player, 1))
    add getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216) to {-GUARD::%player%::TEMP::SAMPLE::*} if getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216) > 16000000
    delete {-GUARD::%player%::TEMP::SAMPLE::*} if size of {-GUARD::%player%::TEMP::SAMPLE::*} > 3
    
    send "%getDev(GDA_getDeltaPitch(player, 1) * 16777216, GDA_getDeltaPitch(player, 2) * 16777216)%"

function getDev(a: number, b: number) :: number: 
  if {_a} < {_b}:
    return getDev({_b}, {_a})
  if abs({_b}) < 0.001:
    return {_a}
  else:
    return getDev({_b}, {_a} - floor({_a} / {_b}) * {_b})
function getFlaw(current: number) :: number:
  if {_current} >= 910936:
    return {_current}
  return getFlaw(mod({_current}, 910936))
function getGCD(current: number, previous: number) :: number:
    if {_previous} <= 16384:
        return {_current}
    return getGCD({_previous}, mod({_current}, {_previous}))

on damage:
  set {-GUARD::%attacker%::TEMP::TIMESPAN::LASTATTACK} to now

function GA_clearly(p: player, cheat: text, type: text, dev: text, vl: number, tpvl: text, v: text, bufferadd: number, buffer: number, punish: number):
  add {_bufferadd} to {-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%}
  set {-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%} to 1 if {_buffer} = 0
  {-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%} > {_buffer}
  add 1 to {-GUARD::%{_p}%::VL::%{_cheat}%.%{_tpvl}%}
  send formatted "<tooltip:&7Check: &6%{_cheat}% &7(%{_tpvl}%&7)%nl%&7Value: &6%{_v}% %nl%&7Informations: &6%{_dev}%%nl%&7Buffer: &6%{-GUARD::%{_p}%::TEMP::VL::%{_cheat}%.%{_tpvl}%}%&7/&6%{_buffer}%%nl%%nl%        &7&nClick to teleport !><cmd: /tp %{_p}%>{@guard} &e%{_p}%&7 failed &e%{_cheat}% %{_type}% &7(&6x%{-GUARD::%{_p}%::VL::%{_cheat}%.%{_tpvl}%}%&7)" to all players
function GDA_getDeltaPitch(p: player, n: number) :: number:
  return difference between {-GUARD::%{_p}%::TEMP::PRELOC::%{_n}%}'s pitch and {-GUARD::%{_p}%::TEMP::LOC::%{_n}%}'s pitch
function GDA_getDeltaYaw(p: player, n: number) :: number:
  return difference between {-GUARD::%{_p}%::TEMP::PRELOC::%{_n}%}'s yaw and {-GUARD::%{_p}%::TEMP::LOC::%{_n}%}'s yaw